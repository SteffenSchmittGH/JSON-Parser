ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"jsmn.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.jsmn_alloc_token,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	jsmn_alloc_token, %function
  24              	jsmn_alloc_token:
  25              	.LFB0:
  26              		.file 1 ".\\source\\bsw\\json/jsmn.h"
   1:.\source\bsw\json/jsmn.h **** /*
   2:.\source\bsw\json/jsmn.h ****  * MIT License
   3:.\source\bsw\json/jsmn.h ****  *
   4:.\source\bsw\json/jsmn.h ****  * Copyright (c) 2010 Serge Zaitsev
   5:.\source\bsw\json/jsmn.h ****  *
   6:.\source\bsw\json/jsmn.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:.\source\bsw\json/jsmn.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:.\source\bsw\json/jsmn.h ****  * in the Software without restriction, including without limitation the rights
   9:.\source\bsw\json/jsmn.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:.\source\bsw\json/jsmn.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:.\source\bsw\json/jsmn.h ****  * furnished to do so, subject to the following conditions:
  12:.\source\bsw\json/jsmn.h ****  *
  13:.\source\bsw\json/jsmn.h ****  * The above copyright notice and this permission notice shall be included in
  14:.\source\bsw\json/jsmn.h ****  * all copies or substantial portions of the Software.
  15:.\source\bsw\json/jsmn.h ****  *
  16:.\source\bsw\json/jsmn.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:.\source\bsw\json/jsmn.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:.\source\bsw\json/jsmn.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:.\source\bsw\json/jsmn.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:.\source\bsw\json/jsmn.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:.\source\bsw\json/jsmn.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  22:.\source\bsw\json/jsmn.h ****  * SOFTWARE.
  23:.\source\bsw\json/jsmn.h ****  */
  24:.\source\bsw\json/jsmn.h **** #ifndef JSMN_H
  25:.\source\bsw\json/jsmn.h **** #define JSMN_H
  26:.\source\bsw\json/jsmn.h **** 
  27:.\source\bsw\json/jsmn.h **** #include <stddef.h>
  28:.\source\bsw\json/jsmn.h **** 
  29:.\source\bsw\json/jsmn.h **** #ifdef __cplusplus
  30:.\source\bsw\json/jsmn.h **** extern "C" {
  31:.\source\bsw\json/jsmn.h **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 2


  32:.\source\bsw\json/jsmn.h **** 
  33:.\source\bsw\json/jsmn.h **** #ifdef JSMN_STATIC
  34:.\source\bsw\json/jsmn.h **** #define JSMN_API static
  35:.\source\bsw\json/jsmn.h **** #else
  36:.\source\bsw\json/jsmn.h **** #define JSMN_API extern
  37:.\source\bsw\json/jsmn.h **** #endif
  38:.\source\bsw\json/jsmn.h **** 
  39:.\source\bsw\json/jsmn.h **** /**
  40:.\source\bsw\json/jsmn.h ****  * JSON type identifier. Basic types are:
  41:.\source\bsw\json/jsmn.h ****  * 	o Object
  42:.\source\bsw\json/jsmn.h ****  * 	o Array
  43:.\source\bsw\json/jsmn.h ****  * 	o String
  44:.\source\bsw\json/jsmn.h ****  * 	o Other primitive: number, boolean (true/false) or null
  45:.\source\bsw\json/jsmn.h ****  */
  46:.\source\bsw\json/jsmn.h **** typedef enum {
  47:.\source\bsw\json/jsmn.h ****   JSMN_UNDEFINED = 0,
  48:.\source\bsw\json/jsmn.h ****   JSMN_OBJECT = 1 << 0,
  49:.\source\bsw\json/jsmn.h ****   JSMN_ARRAY = 1 << 1,
  50:.\source\bsw\json/jsmn.h ****   JSMN_STRING = 1 << 2,
  51:.\source\bsw\json/jsmn.h ****   JSMN_PRIMITIVE = 1 << 3
  52:.\source\bsw\json/jsmn.h **** } jsmntype_t;
  53:.\source\bsw\json/jsmn.h **** 
  54:.\source\bsw\json/jsmn.h **** enum jsmnerr {
  55:.\source\bsw\json/jsmn.h ****   /* Not enough tokens were provided */
  56:.\source\bsw\json/jsmn.h ****   JSMN_ERROR_NOMEM = -1,
  57:.\source\bsw\json/jsmn.h ****   /* Invalid character inside JSON string */
  58:.\source\bsw\json/jsmn.h ****   JSMN_ERROR_INVAL = -2,
  59:.\source\bsw\json/jsmn.h ****   /* The string is not a full JSON packet, more bytes expected */
  60:.\source\bsw\json/jsmn.h ****   JSMN_ERROR_PART = -3
  61:.\source\bsw\json/jsmn.h **** };
  62:.\source\bsw\json/jsmn.h **** 
  63:.\source\bsw\json/jsmn.h **** /**
  64:.\source\bsw\json/jsmn.h ****  * JSON token description.
  65:.\source\bsw\json/jsmn.h ****  * type		type (object, array, string etc.)
  66:.\source\bsw\json/jsmn.h ****  * start	start position in JSON data string
  67:.\source\bsw\json/jsmn.h ****  * end		end position in JSON data string
  68:.\source\bsw\json/jsmn.h ****  */
  69:.\source\bsw\json/jsmn.h **** typedef struct jsmntok {
  70:.\source\bsw\json/jsmn.h ****   jsmntype_t type;
  71:.\source\bsw\json/jsmn.h ****   int start;
  72:.\source\bsw\json/jsmn.h ****   int end;
  73:.\source\bsw\json/jsmn.h ****   int size;
  74:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
  75:.\source\bsw\json/jsmn.h ****   int parent;
  76:.\source\bsw\json/jsmn.h **** #endif
  77:.\source\bsw\json/jsmn.h **** } jsmntok_t;
  78:.\source\bsw\json/jsmn.h **** 
  79:.\source\bsw\json/jsmn.h **** /**
  80:.\source\bsw\json/jsmn.h ****  * JSON parser. Contains an array of token blocks available. Also stores
  81:.\source\bsw\json/jsmn.h ****  * the string being parsed now and current position in that string.
  82:.\source\bsw\json/jsmn.h ****  */
  83:.\source\bsw\json/jsmn.h **** typedef struct jsmn_parser {
  84:.\source\bsw\json/jsmn.h ****   unsigned int pos;     /* offset in the JSON string */
  85:.\source\bsw\json/jsmn.h ****   unsigned int toknext; /* next token to allocate */
  86:.\source\bsw\json/jsmn.h ****   int toksuper;         /* superior token node, e.g. parent object or array */
  87:.\source\bsw\json/jsmn.h **** } jsmn_parser;
  88:.\source\bsw\json/jsmn.h **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 3


  89:.\source\bsw\json/jsmn.h **** /**
  90:.\source\bsw\json/jsmn.h ****  * Create JSON parser over an array of tokens
  91:.\source\bsw\json/jsmn.h ****  */
  92:.\source\bsw\json/jsmn.h **** JSMN_API void jsmn_init(jsmn_parser *parser);
  93:.\source\bsw\json/jsmn.h **** 
  94:.\source\bsw\json/jsmn.h **** /**
  95:.\source\bsw\json/jsmn.h ****  * Run JSON parser. It parses a JSON data string into and array of tokens, each
  96:.\source\bsw\json/jsmn.h ****  * describing
  97:.\source\bsw\json/jsmn.h ****  * a single JSON object.
  98:.\source\bsw\json/jsmn.h ****  */
  99:.\source\bsw\json/jsmn.h **** JSMN_API int jsmn_parse(jsmn_parser *parser, const char *js, const size_t len,
 100:.\source\bsw\json/jsmn.h ****                         jsmntok_t *tokens, const unsigned int num_tokens);
 101:.\source\bsw\json/jsmn.h **** 
 102:.\source\bsw\json/jsmn.h **** #ifndef JSMN_HEADER
 103:.\source\bsw\json/jsmn.h **** /**
 104:.\source\bsw\json/jsmn.h ****  * Allocates a fresh unused token from the token pool.
 105:.\source\bsw\json/jsmn.h ****  */
 106:.\source\bsw\json/jsmn.h **** static jsmntok_t *jsmn_alloc_token(jsmn_parser *parser, jsmntok_t *tokens,
 107:.\source\bsw\json/jsmn.h ****                                    const size_t num_tokens) {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
 108:.\source\bsw\json/jsmn.h ****   jsmntok_t *tok;
 109:.\source\bsw\json/jsmn.h ****   if (parser->toknext >= num_tokens) {
  42              		.loc 1 109 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e 5A68     		ldr	r2, [r3, #4]
  45 0010 7B68     		ldr	r3, [r7, #4]
  46 0012 9A42     		cmp	r2, r3
  47 0014 01D3     		bcc	.L2
 110:.\source\bsw\json/jsmn.h ****     return NULL;
  48              		.loc 1 110 0
  49 0016 0023     		movs	r3, #0
  50 0018 14E0     		b	.L3
  51              	.L2:
 111:.\source\bsw\json/jsmn.h ****   }
 112:.\source\bsw\json/jsmn.h ****   tok = &tokens[parser->toknext++];
  52              		.loc 1 112 0
  53 001a FB68     		ldr	r3, [r7, #12]
  54 001c 5B68     		ldr	r3, [r3, #4]
  55 001e 591C     		adds	r1, r3, #1
  56 0020 FA68     		ldr	r2, [r7, #12]
  57 0022 5160     		str	r1, [r2, #4]
  58 0024 1B01     		lsls	r3, r3, #4
  59 0026 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 4


  60 0028 1344     		add	r3, r3, r2
  61 002a 7B61     		str	r3, [r7, #20]
 113:.\source\bsw\json/jsmn.h ****   tok->start = tok->end = -1;
  62              		.loc 1 113 0
  63 002c 7B69     		ldr	r3, [r7, #20]
  64 002e 4FF0FF32 		mov	r2, #-1
  65 0032 9A60     		str	r2, [r3, #8]
  66 0034 7B69     		ldr	r3, [r7, #20]
  67 0036 9A68     		ldr	r2, [r3, #8]
  68 0038 7B69     		ldr	r3, [r7, #20]
  69 003a 5A60     		str	r2, [r3, #4]
 114:.\source\bsw\json/jsmn.h ****   tok->size = 0;
  70              		.loc 1 114 0
  71 003c 7B69     		ldr	r3, [r7, #20]
  72 003e 0022     		movs	r2, #0
  73 0040 DA60     		str	r2, [r3, #12]
 115:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
 116:.\source\bsw\json/jsmn.h ****   tok->parent = -1;
 117:.\source\bsw\json/jsmn.h **** #endif
 118:.\source\bsw\json/jsmn.h ****   return tok;
  74              		.loc 1 118 0
  75 0042 7B69     		ldr	r3, [r7, #20]
  76              	.L3:
 119:.\source\bsw\json/jsmn.h **** }
  77              		.loc 1 119 0
  78 0044 1846     		mov	r0, r3
  79 0046 1C37     		adds	r7, r7, #28
  80              		.cfi_def_cfa_offset 4
  81 0048 BD46     		mov	sp, r7
  82              		.cfi_def_cfa_register 13
  83              		@ sp needed
  84 004a 80BC     		pop	{r7}
  85              		.cfi_restore 7
  86              		.cfi_def_cfa_offset 0
  87 004c 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	jsmn_alloc_token, .-jsmn_alloc_token
  91 004e 00BF     		.section	.text.jsmn_fill_token,"ax",%progbits
  92              		.align	2
  93              		.thumb
  94              		.thumb_func
  95              		.type	jsmn_fill_token, %function
  96              	jsmn_fill_token:
  97              	.LFB1:
 120:.\source\bsw\json/jsmn.h **** 
 121:.\source\bsw\json/jsmn.h **** /**
 122:.\source\bsw\json/jsmn.h ****  * Fills token type and boundaries.
 123:.\source\bsw\json/jsmn.h ****  */
 124:.\source\bsw\json/jsmn.h **** static void jsmn_fill_token(jsmntok_t *token, const jsmntype_t type,
 125:.\source\bsw\json/jsmn.h ****                             const int start, const int end) {
  98              		.loc 1 125 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 5


 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 85B0     		sub	sp, sp, #20
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110 0006 F860     		str	r0, [r7, #12]
 111 0008 7A60     		str	r2, [r7, #4]
 112 000a 3B60     		str	r3, [r7]
 113 000c 0B46     		mov	r3, r1
 114 000e FB72     		strb	r3, [r7, #11]
 126:.\source\bsw\json/jsmn.h ****   token->type = type;
 115              		.loc 1 126 0
 116 0010 FB68     		ldr	r3, [r7, #12]
 117 0012 FA7A     		ldrb	r2, [r7, #11]
 118 0014 1A70     		strb	r2, [r3]
 127:.\source\bsw\json/jsmn.h ****   token->start = start;
 119              		.loc 1 127 0
 120 0016 FB68     		ldr	r3, [r7, #12]
 121 0018 7A68     		ldr	r2, [r7, #4]
 122 001a 5A60     		str	r2, [r3, #4]
 128:.\source\bsw\json/jsmn.h ****   token->end = end;
 123              		.loc 1 128 0
 124 001c FB68     		ldr	r3, [r7, #12]
 125 001e 3A68     		ldr	r2, [r7]
 126 0020 9A60     		str	r2, [r3, #8]
 129:.\source\bsw\json/jsmn.h ****   token->size = 0;
 127              		.loc 1 129 0
 128 0022 FB68     		ldr	r3, [r7, #12]
 129 0024 0022     		movs	r2, #0
 130 0026 DA60     		str	r2, [r3, #12]
 130:.\source\bsw\json/jsmn.h **** }
 131              		.loc 1 130 0
 132 0028 00BF     		nop
 133 002a 1437     		adds	r7, r7, #20
 134              		.cfi_def_cfa_offset 4
 135 002c BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 002e 80BC     		pop	{r7}
 139              		.cfi_restore 7
 140              		.cfi_def_cfa_offset 0
 141 0030 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	jsmn_fill_token, .-jsmn_fill_token
 145 0032 00BF     		.section	.text.jsmn_parse_primitive,"ax",%progbits
 146              		.align	2
 147              		.thumb
 148              		.thumb_func
 149              		.type	jsmn_parse_primitive, %function
 150              	jsmn_parse_primitive:
 151              	.LFB2:
 131:.\source\bsw\json/jsmn.h **** 
 132:.\source\bsw\json/jsmn.h **** /**
 133:.\source\bsw\json/jsmn.h ****  * Fills next available token with JSON primitive.
 134:.\source\bsw\json/jsmn.h ****  */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 6


 135:.\source\bsw\json/jsmn.h **** static int jsmn_parse_primitive(jsmn_parser *parser, const char *js,
 136:.\source\bsw\json/jsmn.h ****                                 const size_t len, jsmntok_t *tokens,
 137:.\source\bsw\json/jsmn.h ****                                 const size_t num_tokens) {
 152              		.loc 1 137 0
 153              		.cfi_startproc
 154              		@ args = 4, pretend = 0, frame = 24
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 86B0     		sub	sp, sp, #24
 161              		.cfi_def_cfa_offset 32
 162 0004 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 164 0006 F860     		str	r0, [r7, #12]
 165 0008 B960     		str	r1, [r7, #8]
 166 000a 7A60     		str	r2, [r7, #4]
 167 000c 3B60     		str	r3, [r7]
 138:.\source\bsw\json/jsmn.h ****   jsmntok_t *token;
 139:.\source\bsw\json/jsmn.h ****   int start;
 140:.\source\bsw\json/jsmn.h **** 
 141:.\source\bsw\json/jsmn.h ****   start = parser->pos;
 168              		.loc 1 141 0
 169 000e FB68     		ldr	r3, [r7, #12]
 170 0010 1B68     		ldr	r3, [r3]
 171 0012 7B61     		str	r3, [r7, #20]
 142:.\source\bsw\json/jsmn.h **** 
 143:.\source\bsw\json/jsmn.h ****   for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
 172              		.loc 1 143 0
 173 0014 34E0     		b	.L6
 174              	.L15:
 144:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 175              		.loc 1 144 0
 176 0016 FB68     		ldr	r3, [r7, #12]
 177 0018 1B68     		ldr	r3, [r3]
 178 001a BA68     		ldr	r2, [r7, #8]
 179 001c 1344     		add	r3, r3, r2
 180 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 181 0020 202B     		cmp	r3, #32
 182 0022 3AD0     		beq	.L19
 183 0024 202B     		cmp	r3, #32
 184 0026 06DC     		bgt	.L9
 185 0028 092B     		cmp	r3, #9
 186 002a 0FDB     		blt	.L20
 187 002c 0A2B     		cmp	r3, #10
 188 002e 34DD     		ble	.L19
 189 0030 0D2B     		cmp	r3, #13
 190 0032 32D0     		beq	.L19
 145:.\source\bsw\json/jsmn.h **** #ifndef JSMN_STRICT
 146:.\source\bsw\json/jsmn.h ****     /* In strict mode primitive must be followed by "," or "}" or "]" */
 147:.\source\bsw\json/jsmn.h ****     case ':':
 148:.\source\bsw\json/jsmn.h **** #endif
 149:.\source\bsw\json/jsmn.h ****     case '\t':
 150:.\source\bsw\json/jsmn.h ****     case '\r':
 151:.\source\bsw\json/jsmn.h ****     case '\n':
 152:.\source\bsw\json/jsmn.h ****     case ' ':
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 7


 153:.\source\bsw\json/jsmn.h ****     case ',':
 154:.\source\bsw\json/jsmn.h ****     case ']':
 155:.\source\bsw\json/jsmn.h ****     case '}':
 156:.\source\bsw\json/jsmn.h ****       goto found;
 157:.\source\bsw\json/jsmn.h ****     default:
 158:.\source\bsw\json/jsmn.h ****                    /* to quiet a warning from gcc*/
 159:.\source\bsw\json/jsmn.h ****       break;
 191              		.loc 1 159 0
 192 0034 0AE0     		b	.L20
 193              	.L9:
 144:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 194              		.loc 1 144 0
 195 0036 3A2B     		cmp	r3, #58
 196 0038 2FD0     		beq	.L19
 197 003a 3A2B     		cmp	r3, #58
 198 003c 02DC     		bgt	.L10
 199 003e 2C2B     		cmp	r3, #44
 200 0040 2BD0     		beq	.L19
 201              		.loc 1 159 0
 202 0042 03E0     		b	.L20
 203              	.L10:
 144:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 204              		.loc 1 144 0
 205 0044 5D2B     		cmp	r3, #93
 206 0046 28D0     		beq	.L19
 207 0048 7D2B     		cmp	r3, #125
 208 004a 26D0     		beq	.L19
 209              	.L20:
 210              		.loc 1 159 0
 211 004c 00BF     		nop
 160:.\source\bsw\json/jsmn.h ****     }
 161:.\source\bsw\json/jsmn.h ****     if (js[parser->pos] < 32 || js[parser->pos] >= 127) {
 212              		.loc 1 161 0
 213 004e FB68     		ldr	r3, [r7, #12]
 214 0050 1B68     		ldr	r3, [r3]
 215 0052 BA68     		ldr	r2, [r7, #8]
 216 0054 1344     		add	r3, r3, r2
 217 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 0058 1F2B     		cmp	r3, #31
 219 005a 06D9     		bls	.L12
 220              		.loc 1 161 0 is_stmt 0 discriminator 1
 221 005c FB68     		ldr	r3, [r7, #12]
 222 005e 1B68     		ldr	r3, [r3]
 223 0060 BA68     		ldr	r2, [r7, #8]
 224 0062 1344     		add	r3, r3, r2
 225 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226 0066 7E2B     		cmp	r3, #126
 227 0068 05D9     		bls	.L13
 228              	.L12:
 162:.\source\bsw\json/jsmn.h ****       parser->pos = start;
 229              		.loc 1 162 0 is_stmt 1
 230 006a 7A69     		ldr	r2, [r7, #20]
 231 006c FB68     		ldr	r3, [r7, #12]
 232 006e 1A60     		str	r2, [r3]
 163:.\source\bsw\json/jsmn.h ****       return JSMN_ERROR_INVAL;
 233              		.loc 1 163 0
 234 0070 6FF00103 		mvn	r3, #1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 8


 235 0074 38E0     		b	.L14
 236              	.L13:
 143:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 237              		.loc 1 143 0
 238 0076 FB68     		ldr	r3, [r7, #12]
 239 0078 1B68     		ldr	r3, [r3]
 240 007a 5A1C     		adds	r2, r3, #1
 241 007c FB68     		ldr	r3, [r7, #12]
 242 007e 1A60     		str	r2, [r3]
 243              	.L6:
 143:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 244              		.loc 1 143 0 is_stmt 0 discriminator 1
 245 0080 FB68     		ldr	r3, [r7, #12]
 246 0082 1A68     		ldr	r2, [r3]
 247 0084 7B68     		ldr	r3, [r7, #4]
 248 0086 9A42     		cmp	r2, r3
 249 0088 08D2     		bcs	.L11
 143:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 250              		.loc 1 143 0 discriminator 2
 251 008a FB68     		ldr	r3, [r7, #12]
 252 008c 1B68     		ldr	r3, [r3]
 253 008e BA68     		ldr	r2, [r7, #8]
 254 0090 1344     		add	r3, r3, r2
 255 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 256 0094 002B     		cmp	r3, #0
 257 0096 BED1     		bne	.L15
 258 0098 00E0     		b	.L11
 259              	.L19:
 156:.\source\bsw\json/jsmn.h ****     default:
 260              		.loc 1 156 0 is_stmt 1
 261 009a 00BF     		nop
 262              	.L11:
 164:.\source\bsw\json/jsmn.h ****     }
 165:.\source\bsw\json/jsmn.h ****   }
 166:.\source\bsw\json/jsmn.h **** #ifdef JSMN_STRICT
 167:.\source\bsw\json/jsmn.h ****   /* In strict mode primitive must be followed by a comma/object/array */
 168:.\source\bsw\json/jsmn.h ****   parser->pos = start;
 169:.\source\bsw\json/jsmn.h ****   return JSMN_ERROR_PART;
 170:.\source\bsw\json/jsmn.h **** #endif
 171:.\source\bsw\json/jsmn.h **** 
 172:.\source\bsw\json/jsmn.h **** found:
 173:.\source\bsw\json/jsmn.h ****   if (tokens == NULL) {
 263              		.loc 1 173 0
 264 009c 3B68     		ldr	r3, [r7]
 265 009e 002B     		cmp	r3, #0
 266 00a0 06D1     		bne	.L16
 174:.\source\bsw\json/jsmn.h ****     parser->pos--;
 267              		.loc 1 174 0
 268 00a2 FB68     		ldr	r3, [r7, #12]
 269 00a4 1B68     		ldr	r3, [r3]
 270 00a6 5A1E     		subs	r2, r3, #1
 271 00a8 FB68     		ldr	r3, [r7, #12]
 272 00aa 1A60     		str	r2, [r3]
 175:.\source\bsw\json/jsmn.h ****     return 0;
 273              		.loc 1 175 0
 274 00ac 0023     		movs	r3, #0
 275 00ae 1BE0     		b	.L14
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 9


 276              	.L16:
 176:.\source\bsw\json/jsmn.h ****   }
 177:.\source\bsw\json/jsmn.h ****   token = jsmn_alloc_token(parser, tokens, num_tokens);
 277              		.loc 1 177 0
 278 00b0 3A6A     		ldr	r2, [r7, #32]
 279 00b2 3968     		ldr	r1, [r7]
 280 00b4 F868     		ldr	r0, [r7, #12]
 281 00b6 FFF7FEFF 		bl	jsmn_alloc_token
 282 00ba 3861     		str	r0, [r7, #16]
 178:.\source\bsw\json/jsmn.h ****   if (token == NULL) {
 283              		.loc 1 178 0
 284 00bc 3B69     		ldr	r3, [r7, #16]
 285 00be 002B     		cmp	r3, #0
 286 00c0 05D1     		bne	.L17
 179:.\source\bsw\json/jsmn.h ****     parser->pos = start;
 287              		.loc 1 179 0
 288 00c2 7A69     		ldr	r2, [r7, #20]
 289 00c4 FB68     		ldr	r3, [r7, #12]
 290 00c6 1A60     		str	r2, [r3]
 180:.\source\bsw\json/jsmn.h ****     return JSMN_ERROR_NOMEM;
 291              		.loc 1 180 0
 292 00c8 4FF0FF33 		mov	r3, #-1
 293 00cc 0CE0     		b	.L14
 294              	.L17:
 181:.\source\bsw\json/jsmn.h ****   }
 182:.\source\bsw\json/jsmn.h ****   jsmn_fill_token(token, JSMN_PRIMITIVE, start, parser->pos);
 295              		.loc 1 182 0
 296 00ce FB68     		ldr	r3, [r7, #12]
 297 00d0 1B68     		ldr	r3, [r3]
 298 00d2 7A69     		ldr	r2, [r7, #20]
 299 00d4 0821     		movs	r1, #8
 300 00d6 3869     		ldr	r0, [r7, #16]
 301 00d8 FFF7FEFF 		bl	jsmn_fill_token
 183:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
 184:.\source\bsw\json/jsmn.h ****   token->parent = parser->toksuper;
 185:.\source\bsw\json/jsmn.h **** #endif
 186:.\source\bsw\json/jsmn.h ****   parser->pos--;
 302              		.loc 1 186 0
 303 00dc FB68     		ldr	r3, [r7, #12]
 304 00de 1B68     		ldr	r3, [r3]
 305 00e0 5A1E     		subs	r2, r3, #1
 306 00e2 FB68     		ldr	r3, [r7, #12]
 307 00e4 1A60     		str	r2, [r3]
 187:.\source\bsw\json/jsmn.h ****   return 0;
 308              		.loc 1 187 0
 309 00e6 0023     		movs	r3, #0
 310              	.L14:
 188:.\source\bsw\json/jsmn.h **** }
 311              		.loc 1 188 0
 312 00e8 1846     		mov	r0, r3
 313 00ea 1837     		adds	r7, r7, #24
 314              		.cfi_def_cfa_offset 8
 315 00ec BD46     		mov	sp, r7
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 00ee 80BD     		pop	{r7, pc}
 319              		.cfi_endproc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 10


 320              	.LFE2:
 321              		.size	jsmn_parse_primitive, .-jsmn_parse_primitive
 322              		.section	.text.jsmn_parse_string,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	jsmn_parse_string, %function
 327              	jsmn_parse_string:
 328              	.LFB3:
 189:.\source\bsw\json/jsmn.h **** 
 190:.\source\bsw\json/jsmn.h **** /**
 191:.\source\bsw\json/jsmn.h ****  * Fills next token with JSON string.
 192:.\source\bsw\json/jsmn.h ****  */
 193:.\source\bsw\json/jsmn.h **** static int jsmn_parse_string(jsmn_parser *parser, const char *js,
 194:.\source\bsw\json/jsmn.h ****                              const size_t len, jsmntok_t *tokens,
 195:.\source\bsw\json/jsmn.h ****                              const size_t num_tokens) {
 329              		.loc 1 195 0
 330              		.cfi_startproc
 331              		@ args = 4, pretend = 0, frame = 32
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 88B0     		sub	sp, sp, #32
 338              		.cfi_def_cfa_offset 40
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 341 0006 F860     		str	r0, [r7, #12]
 342 0008 B960     		str	r1, [r7, #8]
 343 000a 7A60     		str	r2, [r7, #4]
 344 000c 3B60     		str	r3, [r7]
 196:.\source\bsw\json/jsmn.h ****   jsmntok_t *token;
 197:.\source\bsw\json/jsmn.h **** 
 198:.\source\bsw\json/jsmn.h ****   int start = parser->pos;
 345              		.loc 1 198 0
 346 000e FB68     		ldr	r3, [r7, #12]
 347 0010 1B68     		ldr	r3, [r3]
 348 0012 BB61     		str	r3, [r7, #24]
 199:.\source\bsw\json/jsmn.h ****   
 200:.\source\bsw\json/jsmn.h ****   /* Skip starting quote */
 201:.\source\bsw\json/jsmn.h ****   parser->pos++;
 349              		.loc 1 201 0
 350 0014 FB68     		ldr	r3, [r7, #12]
 351 0016 1B68     		ldr	r3, [r3]
 352 0018 5A1C     		adds	r2, r3, #1
 353 001a FB68     		ldr	r3, [r7, #12]
 354 001c 1A60     		str	r2, [r3]
 202:.\source\bsw\json/jsmn.h ****   
 203:.\source\bsw\json/jsmn.h ****   for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
 355              		.loc 1 203 0
 356 001e 4CE1     		b	.L22
 357              	.L40:
 358              	.LBB2:
 204:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 359              		.loc 1 204 0
 360 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 11


 361 0022 1B68     		ldr	r3, [r3]
 362 0024 BA68     		ldr	r2, [r7, #8]
 363 0026 1344     		add	r3, r3, r2
 364 0028 1B78     		ldrb	r3, [r3]
 365 002a FB75     		strb	r3, [r7, #23]
 205:.\source\bsw\json/jsmn.h **** 
 206:.\source\bsw\json/jsmn.h ****     /* Quote: end of string */
 207:.\source\bsw\json/jsmn.h ****     if (c == '\"') {
 366              		.loc 1 207 0
 367 002c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 368 002e 222B     		cmp	r3, #34
 369 0030 1DD1     		bne	.L23
 208:.\source\bsw\json/jsmn.h ****       if (tokens == NULL) {
 370              		.loc 1 208 0
 371 0032 3B68     		ldr	r3, [r7]
 372 0034 002B     		cmp	r3, #0
 373 0036 01D1     		bne	.L24
 209:.\source\bsw\json/jsmn.h ****         return 0;
 374              		.loc 1 209 0
 375 0038 0023     		movs	r3, #0
 376 003a 50E1     		b	.L25
 377              	.L24:
 210:.\source\bsw\json/jsmn.h ****       }
 211:.\source\bsw\json/jsmn.h ****       token = jsmn_alloc_token(parser, tokens, num_tokens);
 378              		.loc 1 211 0
 379 003c BA6A     		ldr	r2, [r7, #40]
 380 003e 3968     		ldr	r1, [r7]
 381 0040 F868     		ldr	r0, [r7, #12]
 382 0042 FFF7FEFF 		bl	jsmn_alloc_token
 383 0046 3861     		str	r0, [r7, #16]
 212:.\source\bsw\json/jsmn.h ****       if (token == NULL) {
 384              		.loc 1 212 0
 385 0048 3B69     		ldr	r3, [r7, #16]
 386 004a 002B     		cmp	r3, #0
 387 004c 05D1     		bne	.L26
 213:.\source\bsw\json/jsmn.h ****         parser->pos = start;
 388              		.loc 1 213 0
 389 004e BA69     		ldr	r2, [r7, #24]
 390 0050 FB68     		ldr	r3, [r7, #12]
 391 0052 1A60     		str	r2, [r3]
 214:.\source\bsw\json/jsmn.h ****         return JSMN_ERROR_NOMEM;
 392              		.loc 1 214 0
 393 0054 4FF0FF33 		mov	r3, #-1
 394 0058 41E1     		b	.L25
 395              	.L26:
 215:.\source\bsw\json/jsmn.h ****       }
 216:.\source\bsw\json/jsmn.h ****       jsmn_fill_token(token, JSMN_STRING, start + 1, parser->pos);
 396              		.loc 1 216 0
 397 005a BB69     		ldr	r3, [r7, #24]
 398 005c 5A1C     		adds	r2, r3, #1
 399 005e FB68     		ldr	r3, [r7, #12]
 400 0060 1B68     		ldr	r3, [r3]
 401 0062 0421     		movs	r1, #4
 402 0064 3869     		ldr	r0, [r7, #16]
 403 0066 FFF7FEFF 		bl	jsmn_fill_token
 217:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
 218:.\source\bsw\json/jsmn.h ****       token->parent = parser->toksuper;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 12


 219:.\source\bsw\json/jsmn.h **** #endif
 220:.\source\bsw\json/jsmn.h ****       return 0;
 404              		.loc 1 220 0
 405 006a 0023     		movs	r3, #0
 406 006c 37E1     		b	.L25
 407              	.L23:
 221:.\source\bsw\json/jsmn.h ****     }
 222:.\source\bsw\json/jsmn.h **** 
 223:.\source\bsw\json/jsmn.h ****     /* Backslash: Quoted symbol expected */
 224:.\source\bsw\json/jsmn.h ****     if (c == '\\' && parser->pos + 1 < len) {
 408              		.loc 1 224 0
 409 006e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 410 0070 5C2B     		cmp	r3, #92
 411 0072 40F01D81 		bne	.L27
 412              		.loc 1 224 0 is_stmt 0 discriminator 1
 413 0076 FB68     		ldr	r3, [r7, #12]
 414 0078 1B68     		ldr	r3, [r3]
 415 007a 5A1C     		adds	r2, r3, #1
 416 007c 7B68     		ldr	r3, [r7, #4]
 417 007e 9A42     		cmp	r2, r3
 418 0080 80F01681 		bcs	.L27
 419              	.LBB3:
 225:.\source\bsw\json/jsmn.h ****       int i;
 226:.\source\bsw\json/jsmn.h ****       parser->pos++;
 420              		.loc 1 226 0 is_stmt 1
 421 0084 FB68     		ldr	r3, [r7, #12]
 422 0086 1B68     		ldr	r3, [r3]
 423 0088 5A1C     		adds	r2, r3, #1
 424 008a FB68     		ldr	r3, [r7, #12]
 425 008c 1A60     		str	r2, [r3]
 227:.\source\bsw\json/jsmn.h ****       switch (js[parser->pos]) {
 426              		.loc 1 227 0
 427 008e FB68     		ldr	r3, [r7, #12]
 428 0090 1B68     		ldr	r3, [r3]
 429 0092 BA68     		ldr	r2, [r7, #8]
 430 0094 1344     		add	r3, r3, r2
 431 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0098 223B     		subs	r3, r3, #34
 433 009a 532B     		cmp	r3, #83
 434 009c 00F20181 		bhi	.L28
 435 00a0 01A2     		adr	r2, .L30
 436 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 437 00a6 00BF     		.p2align 2
 438              	.L30:
 439 00a8 AF020000 		.word	.L41+1
 440 00ac A3020000 		.word	.L28+1
 441 00b0 A3020000 		.word	.L28+1
 442 00b4 A3020000 		.word	.L28+1
 443 00b8 A3020000 		.word	.L28+1
 444 00bc A3020000 		.word	.L28+1
 445 00c0 A3020000 		.word	.L28+1
 446 00c4 A3020000 		.word	.L28+1
 447 00c8 A3020000 		.word	.L28+1
 448 00cc A3020000 		.word	.L28+1
 449 00d0 A3020000 		.word	.L28+1
 450 00d4 A3020000 		.word	.L28+1
 451 00d8 A3020000 		.word	.L28+1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 13


 452 00dc AF020000 		.word	.L41+1
 453 00e0 A3020000 		.word	.L28+1
 454 00e4 A3020000 		.word	.L28+1
 455 00e8 A3020000 		.word	.L28+1
 456 00ec A3020000 		.word	.L28+1
 457 00f0 A3020000 		.word	.L28+1
 458 00f4 A3020000 		.word	.L28+1
 459 00f8 A3020000 		.word	.L28+1
 460 00fc A3020000 		.word	.L28+1
 461 0100 A3020000 		.word	.L28+1
 462 0104 A3020000 		.word	.L28+1
 463 0108 A3020000 		.word	.L28+1
 464 010c A3020000 		.word	.L28+1
 465 0110 A3020000 		.word	.L28+1
 466 0114 A3020000 		.word	.L28+1
 467 0118 A3020000 		.word	.L28+1
 468 011c A3020000 		.word	.L28+1
 469 0120 A3020000 		.word	.L28+1
 470 0124 A3020000 		.word	.L28+1
 471 0128 A3020000 		.word	.L28+1
 472 012c A3020000 		.word	.L28+1
 473 0130 A3020000 		.word	.L28+1
 474 0134 A3020000 		.word	.L28+1
 475 0138 A3020000 		.word	.L28+1
 476 013c A3020000 		.word	.L28+1
 477 0140 A3020000 		.word	.L28+1
 478 0144 A3020000 		.word	.L28+1
 479 0148 A3020000 		.word	.L28+1
 480 014c A3020000 		.word	.L28+1
 481 0150 A3020000 		.word	.L28+1
 482 0154 A3020000 		.word	.L28+1
 483 0158 A3020000 		.word	.L28+1
 484 015c A3020000 		.word	.L28+1
 485 0160 A3020000 		.word	.L28+1
 486 0164 A3020000 		.word	.L28+1
 487 0168 A3020000 		.word	.L28+1
 488 016c A3020000 		.word	.L28+1
 489 0170 A3020000 		.word	.L28+1
 490 0174 A3020000 		.word	.L28+1
 491 0178 A3020000 		.word	.L28+1
 492 017c A3020000 		.word	.L28+1
 493 0180 A3020000 		.word	.L28+1
 494 0184 A3020000 		.word	.L28+1
 495 0188 A3020000 		.word	.L28+1
 496 018c A3020000 		.word	.L28+1
 497 0190 AF020000 		.word	.L41+1
 498 0194 A3020000 		.word	.L28+1
 499 0198 A3020000 		.word	.L28+1
 500 019c A3020000 		.word	.L28+1
 501 01a0 A3020000 		.word	.L28+1
 502 01a4 A3020000 		.word	.L28+1
 503 01a8 AF020000 		.word	.L41+1
 504 01ac A3020000 		.word	.L28+1
 505 01b0 A3020000 		.word	.L28+1
 506 01b4 A3020000 		.word	.L28+1
 507 01b8 AF020000 		.word	.L41+1
 508 01bc A3020000 		.word	.L28+1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 14


 509 01c0 A3020000 		.word	.L28+1
 510 01c4 A3020000 		.word	.L28+1
 511 01c8 A3020000 		.word	.L28+1
 512 01cc A3020000 		.word	.L28+1
 513 01d0 A3020000 		.word	.L28+1
 514 01d4 A3020000 		.word	.L28+1
 515 01d8 AF020000 		.word	.L41+1
 516 01dc A3020000 		.word	.L28+1
 517 01e0 A3020000 		.word	.L28+1
 518 01e4 A3020000 		.word	.L28+1
 519 01e8 AF020000 		.word	.L41+1
 520 01ec A3020000 		.word	.L28+1
 521 01f0 AF020000 		.word	.L41+1
 522 01f4 F9010000 		.word	.L31+1
 523              		.p2align 1
 524              	.L31:
 228:.\source\bsw\json/jsmn.h ****       /* Allowed escaped symbols */
 229:.\source\bsw\json/jsmn.h ****       case '\"':
 230:.\source\bsw\json/jsmn.h ****       case '/':
 231:.\source\bsw\json/jsmn.h ****       case '\\':
 232:.\source\bsw\json/jsmn.h ****       case 'b':
 233:.\source\bsw\json/jsmn.h ****       case 'f':
 234:.\source\bsw\json/jsmn.h ****       case 'r':
 235:.\source\bsw\json/jsmn.h ****       case 'n':
 236:.\source\bsw\json/jsmn.h ****       case 't':
 237:.\source\bsw\json/jsmn.h ****         break;
 238:.\source\bsw\json/jsmn.h ****       /* Allows escaped symbol \uXXXX */
 239:.\source\bsw\json/jsmn.h ****       case 'u':
 240:.\source\bsw\json/jsmn.h ****         parser->pos++;
 525              		.loc 1 240 0
 526 01f8 FB68     		ldr	r3, [r7, #12]
 527 01fa 1B68     		ldr	r3, [r3]
 528 01fc 5A1C     		adds	r2, r3, #1
 529 01fe FB68     		ldr	r3, [r7, #12]
 530 0200 1A60     		str	r2, [r3]
 241:.\source\bsw\json/jsmn.h ****         for (i = 0; i < 4 && parser->pos < len && js[parser->pos] != '\0';
 531              		.loc 1 241 0
 532 0202 0023     		movs	r3, #0
 533 0204 FB61     		str	r3, [r7, #28]
 534 0206 37E0     		b	.L32
 535              	.L38:
 242:.\source\bsw\json/jsmn.h ****              i++) {
 243:.\source\bsw\json/jsmn.h ****           /* If it isn't a hex character we have an error */
 244:.\source\bsw\json/jsmn.h ****           if (!((js[parser->pos] >= 48 && js[parser->pos] <= 57) ||   /* 0-9 */
 536              		.loc 1 244 0
 537 0208 FB68     		ldr	r3, [r7, #12]
 538 020a 1B68     		ldr	r3, [r3]
 539 020c BA68     		ldr	r2, [r7, #8]
 540 020e 1344     		add	r3, r3, r2
 541 0210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 542 0212 2F2B     		cmp	r3, #47
 543 0214 06D9     		bls	.L33
 544              		.loc 1 244 0 is_stmt 0 discriminator 2
 545 0216 FB68     		ldr	r3, [r7, #12]
 546 0218 1B68     		ldr	r3, [r3]
 547 021a BA68     		ldr	r2, [r7, #8]
 548 021c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 15


 549 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 0220 392B     		cmp	r3, #57
 551 0222 21D9     		bls	.L34
 552              	.L33:
 245:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
 553              		.loc 1 245 0 is_stmt 1 discriminator 3
 554 0224 FB68     		ldr	r3, [r7, #12]
 555 0226 1B68     		ldr	r3, [r3]
 556 0228 BA68     		ldr	r2, [r7, #8]
 557 022a 1344     		add	r3, r3, r2
 558 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
 559              		.loc 1 244 0 discriminator 3
 560 022e 402B     		cmp	r3, #64
 561 0230 06D9     		bls	.L35
 562              		.loc 1 245 0
 563 0232 FB68     		ldr	r3, [r7, #12]
 564 0234 1B68     		ldr	r3, [r3]
 565 0236 BA68     		ldr	r2, [r7, #8]
 566 0238 1344     		add	r3, r3, r2
 567 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 568 023c 462B     		cmp	r3, #70
 569 023e 13D9     		bls	.L34
 570              	.L35:
 246:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 97 && js[parser->pos] <= 102))) { /* a-f */
 571              		.loc 1 246 0 discriminator 4
 572 0240 FB68     		ldr	r3, [r7, #12]
 573 0242 1B68     		ldr	r3, [r3]
 574 0244 BA68     		ldr	r2, [r7, #8]
 575 0246 1344     		add	r3, r3, r2
 576 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
 577              		.loc 1 244 0 discriminator 4
 578 024a 602B     		cmp	r3, #96
 579 024c 06D9     		bls	.L36
 580              		.loc 1 246 0
 581 024e FB68     		ldr	r3, [r7, #12]
 582 0250 1B68     		ldr	r3, [r3]
 583 0252 BA68     		ldr	r2, [r7, #8]
 584 0254 1344     		add	r3, r3, r2
 585 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 586 0258 662B     		cmp	r3, #102
 587 025a 05D9     		bls	.L34
 588              	.L36:
 247:.\source\bsw\json/jsmn.h ****             parser->pos = start;
 589              		.loc 1 247 0
 590 025c BA69     		ldr	r2, [r7, #24]
 591 025e FB68     		ldr	r3, [r7, #12]
 592 0260 1A60     		str	r2, [r3]
 248:.\source\bsw\json/jsmn.h ****             return JSMN_ERROR_INVAL;
 593              		.loc 1 248 0
 594 0262 6FF00103 		mvn	r3, #1
 595 0266 3AE0     		b	.L25
 596              	.L34:
 249:.\source\bsw\json/jsmn.h ****           }
 250:.\source\bsw\json/jsmn.h ****           parser->pos++;
 597              		.loc 1 250 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 16


 598 0268 FB68     		ldr	r3, [r7, #12]
 599 026a 1B68     		ldr	r3, [r3]
 600 026c 5A1C     		adds	r2, r3, #1
 601 026e FB68     		ldr	r3, [r7, #12]
 602 0270 1A60     		str	r2, [r3]
 242:.\source\bsw\json/jsmn.h ****           /* If it isn't a hex character we have an error */
 603              		.loc 1 242 0
 604 0272 FB69     		ldr	r3, [r7, #28]
 605 0274 0133     		adds	r3, r3, #1
 606 0276 FB61     		str	r3, [r7, #28]
 607              	.L32:
 241:.\source\bsw\json/jsmn.h ****              i++) {
 608              		.loc 1 241 0 discriminator 1
 609 0278 FB69     		ldr	r3, [r7, #28]
 610 027a 032B     		cmp	r3, #3
 611 027c 0BDC     		bgt	.L37
 241:.\source\bsw\json/jsmn.h ****              i++) {
 612              		.loc 1 241 0 is_stmt 0 discriminator 2
 613 027e FB68     		ldr	r3, [r7, #12]
 614 0280 1A68     		ldr	r2, [r3]
 615 0282 7B68     		ldr	r3, [r7, #4]
 616 0284 9A42     		cmp	r2, r3
 617 0286 06D2     		bcs	.L37
 241:.\source\bsw\json/jsmn.h ****              i++) {
 618              		.loc 1 241 0 discriminator 3
 619 0288 FB68     		ldr	r3, [r7, #12]
 620 028a 1B68     		ldr	r3, [r3]
 621 028c BA68     		ldr	r2, [r7, #8]
 622 028e 1344     		add	r3, r3, r2
 623 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 0292 002B     		cmp	r3, #0
 625 0294 B8D1     		bne	.L38
 626              	.L37:
 251:.\source\bsw\json/jsmn.h ****         }
 252:.\source\bsw\json/jsmn.h ****         parser->pos--;
 627              		.loc 1 252 0 is_stmt 1
 628 0296 FB68     		ldr	r3, [r7, #12]
 629 0298 1B68     		ldr	r3, [r3]
 630 029a 5A1E     		subs	r2, r3, #1
 631 029c FB68     		ldr	r3, [r7, #12]
 632 029e 1A60     		str	r2, [r3]
 253:.\source\bsw\json/jsmn.h ****         break;
 633              		.loc 1 253 0
 634 02a0 06E0     		b	.L27
 635              	.L28:
 254:.\source\bsw\json/jsmn.h ****       /* Unexpected symbol */
 255:.\source\bsw\json/jsmn.h ****       default:
 256:.\source\bsw\json/jsmn.h ****         parser->pos = start;
 636              		.loc 1 256 0
 637 02a2 BA69     		ldr	r2, [r7, #24]
 638 02a4 FB68     		ldr	r3, [r7, #12]
 639 02a6 1A60     		str	r2, [r3]
 257:.\source\bsw\json/jsmn.h ****         return JSMN_ERROR_INVAL;
 640              		.loc 1 257 0
 641 02a8 6FF00103 		mvn	r3, #1
 642 02ac 17E0     		b	.L25
 643              	.L41:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 17


 237:.\source\bsw\json/jsmn.h ****       /* Allows escaped symbol \uXXXX */
 644              		.loc 1 237 0
 645 02ae 00BF     		nop
 646              	.L27:
 647              	.LBE3:
 648              	.LBE2:
 203:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 649              		.loc 1 203 0
 650 02b0 FB68     		ldr	r3, [r7, #12]
 651 02b2 1B68     		ldr	r3, [r3]
 652 02b4 5A1C     		adds	r2, r3, #1
 653 02b6 FB68     		ldr	r3, [r7, #12]
 654 02b8 1A60     		str	r2, [r3]
 655              	.L22:
 203:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 656              		.loc 1 203 0 is_stmt 0 discriminator 1
 657 02ba FB68     		ldr	r3, [r7, #12]
 658 02bc 1A68     		ldr	r2, [r3]
 659 02be 7B68     		ldr	r3, [r7, #4]
 660 02c0 9A42     		cmp	r2, r3
 661 02c2 07D2     		bcs	.L39
 203:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 662              		.loc 1 203 0 discriminator 2
 663 02c4 FB68     		ldr	r3, [r7, #12]
 664 02c6 1B68     		ldr	r3, [r3]
 665 02c8 BA68     		ldr	r2, [r7, #8]
 666 02ca 1344     		add	r3, r3, r2
 667 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668 02ce 002B     		cmp	r3, #0
 669 02d0 7FF4A6AE 		bne	.L40
 670              	.L39:
 258:.\source\bsw\json/jsmn.h ****       }
 259:.\source\bsw\json/jsmn.h ****     }
 260:.\source\bsw\json/jsmn.h ****   }
 261:.\source\bsw\json/jsmn.h ****   parser->pos = start;
 671              		.loc 1 261 0 is_stmt 1
 672 02d4 BA69     		ldr	r2, [r7, #24]
 673 02d6 FB68     		ldr	r3, [r7, #12]
 674 02d8 1A60     		str	r2, [r3]
 262:.\source\bsw\json/jsmn.h ****   return JSMN_ERROR_PART;
 675              		.loc 1 262 0
 676 02da 6FF00203 		mvn	r3, #2
 677              	.L25:
 263:.\source\bsw\json/jsmn.h **** }
 678              		.loc 1 263 0
 679 02de 1846     		mov	r0, r3
 680 02e0 2037     		adds	r7, r7, #32
 681              		.cfi_def_cfa_offset 8
 682 02e2 BD46     		mov	sp, r7
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 02e4 80BD     		pop	{r7, pc}
 686              		.cfi_endproc
 687              	.LFE3:
 688              		.size	jsmn_parse_string, .-jsmn_parse_string
 689 02e6 00BF     		.section	.text.jsmn_init,"ax",%progbits
 690              		.align	2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 18


 691              		.global	jsmn_init
 692              		.thumb
 693              		.thumb_func
 694              		.type	jsmn_init, %function
 695              	jsmn_init:
 696              	.LFB4:
 697              		.file 2 "jsmn.c"
   1:jsmn.c        **** /* ========================================
   2:jsmn.c        ****  *
   3:jsmn.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:jsmn.c        ****  * All Rights Reserved
   5:jsmn.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:jsmn.c        ****  *
   7:jsmn.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:jsmn.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:jsmn.c        ****  *
  10:jsmn.c        ****  * ========================================
  11:jsmn.c        **** */
  12:jsmn.c        **** #include "jsmn.h"
  13:jsmn.c        **** 
  14:jsmn.c        **** 
  15:jsmn.c        **** /**
  16:jsmn.c        ****  * Creates a new parser based over a given buffer with an array of tokens
  17:jsmn.c        ****  * available.
  18:jsmn.c        ****  */
  19:jsmn.c        **** JSMN_API void jsmn_init(jsmn_parser *parser) {
 698              		.loc 2 19 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 710 0006 7860     		str	r0, [r7, #4]
  20:jsmn.c        ****   parser->pos = 0;
 711              		.loc 2 20 0
 712 0008 7B68     		ldr	r3, [r7, #4]
 713 000a 0022     		movs	r2, #0
 714 000c 1A60     		str	r2, [r3]
  21:jsmn.c        ****   parser->toknext = 0;
 715              		.loc 2 21 0
 716 000e 7B68     		ldr	r3, [r7, #4]
 717 0010 0022     		movs	r2, #0
 718 0012 5A60     		str	r2, [r3, #4]
  22:jsmn.c        ****   parser->toksuper = -1;
 719              		.loc 2 22 0
 720 0014 7B68     		ldr	r3, [r7, #4]
 721 0016 4FF0FF32 		mov	r2, #-1
 722 001a 9A60     		str	r2, [r3, #8]
  23:jsmn.c        **** }
 723              		.loc 2 23 0
 724 001c 00BF     		nop
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 19


 725 001e 0C37     		adds	r7, r7, #12
 726              		.cfi_def_cfa_offset 4
 727 0020 BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0022 80BC     		pop	{r7}
 731              		.cfi_restore 7
 732              		.cfi_def_cfa_offset 0
 733 0024 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE4:
 736              		.size	jsmn_init, .-jsmn_init
 737 0026 00BF     		.section	.text.jsmn_parse,"ax",%progbits
 738              		.align	2
 739              		.global	jsmn_parse
 740              		.thumb
 741              		.thumb_func
 742              		.type	jsmn_parse, %function
 743              	jsmn_parse:
 744              	.LFB5:
  24:jsmn.c        **** 
  25:jsmn.c        **** /**
  26:jsmn.c        ****  * Parse JSON string and fill tokens.
  27:jsmn.c        ****  */
  28:jsmn.c        **** JSMN_API int jsmn_parse(jsmn_parser *parser, const char *js, const size_t len,
  29:jsmn.c        ****                         jsmntok_t *tokens, const unsigned int num_tokens) {
 745              		.loc 2 29 0
 746              		.cfi_startproc
 747              		@ args = 4, pretend = 0, frame = 40
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 8CB0     		sub	sp, sp, #48
 754              		.cfi_def_cfa_offset 56
 755 0004 02AF     		add	r7, sp, #8
 756              		.cfi_def_cfa 7, 48
 757 0006 F860     		str	r0, [r7, #12]
 758 0008 B960     		str	r1, [r7, #8]
 759 000a 7A60     		str	r2, [r7, #4]
 760 000c 3B60     		str	r3, [r7]
  30:jsmn.c        ****   int r;
  31:jsmn.c        ****   int i;
  32:jsmn.c        ****   jsmntok_t *token;
  33:jsmn.c        ****   int count = parser->toknext;
 761              		.loc 2 33 0
 762 000e FB68     		ldr	r3, [r7, #12]
 763 0010 5B68     		ldr	r3, [r3, #4]
 764 0012 3B62     		str	r3, [r7, #32]
  34:jsmn.c        **** 
  35:jsmn.c        ****   for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
 765              		.loc 2 35 0
 766 0014 5FE1     		b	.L44
 767              	.L85:
 768              	.LBB4:
  36:jsmn.c        ****     char c;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 20


  37:jsmn.c        ****     jsmntype_t type;
  38:jsmn.c        **** 
  39:jsmn.c        ****     c = js[parser->pos];
 769              		.loc 2 39 0
 770 0016 FB68     		ldr	r3, [r7, #12]
 771 0018 1B68     		ldr	r3, [r3]
 772 001a BA68     		ldr	r2, [r7, #8]
 773 001c 1344     		add	r3, r3, r2
 774 001e 1B78     		ldrb	r3, [r3]
 775 0020 FB77     		strb	r3, [r7, #31]
  40:jsmn.c        ****     switch (c) {
 776              		.loc 2 40 0
 777 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 778 0024 2C2B     		cmp	r3, #44
 779 0026 00F0DD80 		beq	.L46
 780 002a 2C2B     		cmp	r3, #44
 781 002c 10DC     		bgt	.L47
 782 002e 0D2B     		cmp	r3, #13
 783 0030 00F04181 		beq	.L90
 784 0034 0D2B     		cmp	r3, #13
 785 0036 04DC     		bgt	.L49
 786 0038 093B     		subs	r3, r3, #9
 787 003a 012B     		cmp	r3, #1
 788 003c 00F21981 		bhi	.L45
  41:jsmn.c        ****     case '{':
  42:jsmn.c        ****     case '[':
  43:jsmn.c        ****       count++;
  44:jsmn.c        ****       if (tokens == NULL) {
  45:jsmn.c        ****         break;
  46:jsmn.c        ****       }
  47:jsmn.c        ****       token = jsmn_alloc_token(parser, tokens, num_tokens);
  48:jsmn.c        ****       if (token == NULL) {
  49:jsmn.c        ****         return JSMN_ERROR_NOMEM;
  50:jsmn.c        ****       }
  51:jsmn.c        ****       if (parser->toksuper != -1) {
  52:jsmn.c        ****         jsmntok_t *t = &tokens[parser->toksuper];
  53:jsmn.c        **** #ifdef JSMN_STRICT
  54:jsmn.c        ****         /* In strict mode an object or array can't become a key */
  55:jsmn.c        ****         if (t->type == JSMN_OBJECT) {
  56:jsmn.c        ****           return JSMN_ERROR_INVAL;
  57:jsmn.c        ****         }
  58:jsmn.c        **** #endif
  59:jsmn.c        ****         t->size++;
  60:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
  61:jsmn.c        ****         token->parent = parser->toksuper;
  62:jsmn.c        **** #endif
  63:jsmn.c        ****       }
  64:jsmn.c        ****       token->type = (c == '{' ? JSMN_OBJECT : JSMN_ARRAY);
  65:jsmn.c        ****       token->start = parser->pos;
  66:jsmn.c        ****       parser->toksuper = parser->toknext - 1;
  67:jsmn.c        ****       break;
  68:jsmn.c        ****     case '}':
  69:jsmn.c        ****     case ']':
  70:jsmn.c        ****       if (tokens == NULL) {
  71:jsmn.c        ****         break;
  72:jsmn.c        ****       }
  73:jsmn.c        ****       type = (c == '}' ? JSMN_OBJECT : JSMN_ARRAY);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 21


  74:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
  75:jsmn.c        ****       if (parser->toknext < 1) {
  76:jsmn.c        ****         return JSMN_ERROR_INVAL;
  77:jsmn.c        ****       }
  78:jsmn.c        ****       token = &tokens[parser->toknext - 1];
  79:jsmn.c        ****       for (;;) {
  80:jsmn.c        ****         if (token->start != -1 && token->end == -1) {
  81:jsmn.c        ****           if (token->type != type) {
  82:jsmn.c        ****             return JSMN_ERROR_INVAL;
  83:jsmn.c        ****           }
  84:jsmn.c        ****           token->end = parser->pos + 1;
  85:jsmn.c        ****           parser->toksuper = token->parent;
  86:jsmn.c        ****           break;
  87:jsmn.c        ****         }
  88:jsmn.c        ****         if (token->parent == -1) {
  89:jsmn.c        ****           if (token->type != type || parser->toksuper == -1) {
  90:jsmn.c        ****             return JSMN_ERROR_INVAL;
  91:jsmn.c        ****           }
  92:jsmn.c        ****           break;
  93:jsmn.c        ****         }
  94:jsmn.c        ****         token = &tokens[token->parent];
  95:jsmn.c        ****       }
  96:jsmn.c        **** #else
  97:jsmn.c        ****       for (i = parser->toknext - 1; i >= 0; i--) {
  98:jsmn.c        ****         token = &tokens[i];
  99:jsmn.c        ****         if (token->start != -1 && token->end == -1) {
 100:jsmn.c        ****           if (token->type != type) {
 101:jsmn.c        ****             return JSMN_ERROR_INVAL;
 102:jsmn.c        ****           }
 103:jsmn.c        ****           parser->toksuper = -1;
 104:jsmn.c        ****           token->end = parser->pos + 1;
 105:jsmn.c        ****           break;
 106:jsmn.c        ****         }
 107:jsmn.c        ****       }
 108:jsmn.c        ****       /* Error if unmatched closing bracket */
 109:jsmn.c        ****       if (i == -1) {
 110:jsmn.c        ****         return JSMN_ERROR_INVAL;
 111:jsmn.c        ****       }
 112:jsmn.c        ****       for (; i >= 0; i--) {
 113:jsmn.c        ****         token = &tokens[i];
 114:jsmn.c        ****         if (token->start != -1 && token->end == -1) {
 115:jsmn.c        ****           parser->toksuper = i;
 116:jsmn.c        ****           break;
 117:jsmn.c        ****         }
 118:jsmn.c        ****       }
 119:jsmn.c        **** #endif
 120:jsmn.c        ****       break;
 121:jsmn.c        ****     case '\"':
 122:jsmn.c        ****       r = jsmn_parse_string(parser, js, len, tokens, num_tokens);
 123:jsmn.c        ****       if (r < 0) {
 124:jsmn.c        ****         return r;
 125:jsmn.c        ****       }
 126:jsmn.c        ****       count++;
 127:jsmn.c        ****       if (parser->toksuper != -1 && tokens != NULL) {
 128:jsmn.c        ****         tokens[parser->toksuper].size++;
 129:jsmn.c        ****       }
 130:jsmn.c        ****       break;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 22


 131:jsmn.c        ****     case '\t':
 132:jsmn.c        ****     case '\r':
 133:jsmn.c        ****     case '\n':
 134:jsmn.c        ****     case ' ':
 135:jsmn.c        ****       break;
 789              		.loc 2 135 0
 790 0040 39E1     		b	.L90
 791              	.L49:
  40:jsmn.c        ****     switch (c) {
 792              		.loc 2 40 0
 793 0042 202B     		cmp	r3, #32
 794 0044 00F03781 		beq	.L90
 795 0048 222B     		cmp	r3, #34
 796 004a 00F0A180 		beq	.L50
 797 004e 10E1     		b	.L45
 798              	.L47:
 799 0050 5D2B     		cmp	r3, #93
 800 0052 43D0     		beq	.L51
 801 0054 5D2B     		cmp	r3, #93
 802 0056 05DC     		bgt	.L52
 803 0058 3A2B     		cmp	r3, #58
 804 005a 00F0BC80 		beq	.L53
 805 005e 5B2B     		cmp	r3, #91
 806 0060 05D0     		beq	.L54
 807 0062 06E1     		b	.L45
 808              	.L52:
 809 0064 7B2B     		cmp	r3, #123
 810 0066 02D0     		beq	.L54
 811 0068 7D2B     		cmp	r3, #125
 812 006a 37D0     		beq	.L51
 813 006c 01E1     		b	.L45
 814              	.L54:
  43:jsmn.c        ****       if (tokens == NULL) {
 815              		.loc 2 43 0
 816 006e 3B6A     		ldr	r3, [r7, #32]
 817 0070 0133     		adds	r3, r3, #1
 818 0072 3B62     		str	r3, [r7, #32]
  44:jsmn.c        ****         break;
 819              		.loc 2 44 0
 820 0074 3B68     		ldr	r3, [r7]
 821 0076 002B     		cmp	r3, #0
 822 0078 00F01F81 		beq	.L91
  47:jsmn.c        ****       if (token == NULL) {
 823              		.loc 2 47 0
 824 007c 3A6B     		ldr	r2, [r7, #48]
 825 007e 3968     		ldr	r1, [r7]
 826 0080 F868     		ldr	r0, [r7, #12]
 827 0082 FFF7FEFF 		bl	jsmn_alloc_token
 828 0086 B861     		str	r0, [r7, #24]
  48:jsmn.c        ****         return JSMN_ERROR_NOMEM;
 829              		.loc 2 48 0
 830 0088 BB69     		ldr	r3, [r7, #24]
 831 008a 002B     		cmp	r3, #0
 832 008c 02D1     		bne	.L57
  49:jsmn.c        ****       }
 833              		.loc 2 49 0
 834 008e 4FF0FF33 		mov	r3, #-1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 23


 835 0092 4FE1     		b	.L58
 836              	.L57:
  51:jsmn.c        ****         jsmntok_t *t = &tokens[parser->toksuper];
 837              		.loc 2 51 0
 838 0094 FB68     		ldr	r3, [r7, #12]
 839 0096 9B68     		ldr	r3, [r3, #8]
 840 0098 B3F1FF3F 		cmp	r3, #-1
 841 009c 0AD0     		beq	.L59
 842              	.LBB5:
  52:jsmn.c        **** #ifdef JSMN_STRICT
 843              		.loc 2 52 0
 844 009e FB68     		ldr	r3, [r7, #12]
 845 00a0 9B68     		ldr	r3, [r3, #8]
 846 00a2 1B01     		lsls	r3, r3, #4
 847 00a4 3A68     		ldr	r2, [r7]
 848 00a6 1344     		add	r3, r3, r2
 849 00a8 3B61     		str	r3, [r7, #16]
  59:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
 850              		.loc 2 59 0
 851 00aa 3B69     		ldr	r3, [r7, #16]
 852 00ac DB68     		ldr	r3, [r3, #12]
 853 00ae 5A1C     		adds	r2, r3, #1
 854 00b0 3B69     		ldr	r3, [r7, #16]
 855 00b2 DA60     		str	r2, [r3, #12]
 856              	.L59:
 857              	.LBE5:
  64:jsmn.c        ****       token->start = parser->pos;
 858              		.loc 2 64 0
 859 00b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 860 00b6 7B2B     		cmp	r3, #123
 861 00b8 01D1     		bne	.L60
  64:jsmn.c        ****       token->start = parser->pos;
 862              		.loc 2 64 0 is_stmt 0 discriminator 1
 863 00ba 0122     		movs	r2, #1
 864 00bc 00E0     		b	.L61
 865              	.L60:
  64:jsmn.c        ****       token->start = parser->pos;
 866              		.loc 2 64 0 discriminator 2
 867 00be 0222     		movs	r2, #2
 868              	.L61:
  64:jsmn.c        ****       token->start = parser->pos;
 869              		.loc 2 64 0 discriminator 4
 870 00c0 BB69     		ldr	r3, [r7, #24]
 871 00c2 1A70     		strb	r2, [r3]
  65:jsmn.c        ****       parser->toksuper = parser->toknext - 1;
 872              		.loc 2 65 0 is_stmt 1 discriminator 4
 873 00c4 FB68     		ldr	r3, [r7, #12]
 874 00c6 1B68     		ldr	r3, [r3]
 875 00c8 1A46     		mov	r2, r3
 876 00ca BB69     		ldr	r3, [r7, #24]
 877 00cc 5A60     		str	r2, [r3, #4]
  66:jsmn.c        ****       break;
 878              		.loc 2 66 0 discriminator 4
 879 00ce FB68     		ldr	r3, [r7, #12]
 880 00d0 5B68     		ldr	r3, [r3, #4]
 881 00d2 013B     		subs	r3, r3, #1
 882 00d4 1A46     		mov	r2, r3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 24


 883 00d6 FB68     		ldr	r3, [r7, #12]
 884 00d8 9A60     		str	r2, [r3, #8]
  67:jsmn.c        ****     case '}':
 885              		.loc 2 67 0 discriminator 4
 886 00da F7E0     		b	.L56
 887              	.L51:
  70:jsmn.c        ****         break;
 888              		.loc 2 70 0
 889 00dc 3B68     		ldr	r3, [r7]
 890 00de 002B     		cmp	r3, #0
 891 00e0 00F0ED80 		beq	.L92
  73:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
 892              		.loc 2 73 0
 893 00e4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 894 00e6 7D2B     		cmp	r3, #125
 895 00e8 01D1     		bne	.L63
  73:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
 896              		.loc 2 73 0 is_stmt 0 discriminator 1
 897 00ea 0123     		movs	r3, #1
 898 00ec 00E0     		b	.L64
 899              	.L63:
  73:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
 900              		.loc 2 73 0 discriminator 2
 901 00ee 0223     		movs	r3, #2
 902              	.L64:
  73:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
 903              		.loc 2 73 0 discriminator 4
 904 00f0 BB77     		strb	r3, [r7, #30]
  97:jsmn.c        ****         token = &tokens[i];
 905              		.loc 2 97 0 is_stmt 1 discriminator 4
 906 00f2 FB68     		ldr	r3, [r7, #12]
 907 00f4 5B68     		ldr	r3, [r3, #4]
 908 00f6 013B     		subs	r3, r3, #1
 909 00f8 7B62     		str	r3, [r7, #36]
 910 00fa 24E0     		b	.L65
 911              	.L69:
  98:jsmn.c        ****         if (token->start != -1 && token->end == -1) {
 912              		.loc 2 98 0
 913 00fc 7B6A     		ldr	r3, [r7, #36]
 914 00fe 1B01     		lsls	r3, r3, #4
 915 0100 3A68     		ldr	r2, [r7]
 916 0102 1344     		add	r3, r3, r2
 917 0104 BB61     		str	r3, [r7, #24]
  99:jsmn.c        ****           if (token->type != type) {
 918              		.loc 2 99 0
 919 0106 BB69     		ldr	r3, [r7, #24]
 920 0108 5B68     		ldr	r3, [r3, #4]
 921 010a B3F1FF3F 		cmp	r3, #-1
 922 010e 17D0     		beq	.L66
  99:jsmn.c        ****           if (token->type != type) {
 923              		.loc 2 99 0 is_stmt 0 discriminator 1
 924 0110 BB69     		ldr	r3, [r7, #24]
 925 0112 9B68     		ldr	r3, [r3, #8]
 926 0114 B3F1FF3F 		cmp	r3, #-1
 927 0118 12D1     		bne	.L66
 100:jsmn.c        ****             return JSMN_ERROR_INVAL;
 928              		.loc 2 100 0 is_stmt 1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 25


 929 011a BB69     		ldr	r3, [r7, #24]
 930 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 011e BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 932 0120 9A42     		cmp	r2, r3
 933 0122 02D0     		beq	.L67
 101:jsmn.c        ****           }
 934              		.loc 2 101 0
 935 0124 6FF00103 		mvn	r3, #1
 936 0128 04E1     		b	.L58
 937              	.L67:
 103:jsmn.c        ****           token->end = parser->pos + 1;
 938              		.loc 2 103 0
 939 012a FB68     		ldr	r3, [r7, #12]
 940 012c 4FF0FF32 		mov	r2, #-1
 941 0130 9A60     		str	r2, [r3, #8]
 104:jsmn.c        ****           break;
 942              		.loc 2 104 0
 943 0132 FB68     		ldr	r3, [r7, #12]
 944 0134 1B68     		ldr	r3, [r3]
 945 0136 0133     		adds	r3, r3, #1
 946 0138 1A46     		mov	r2, r3
 947 013a BB69     		ldr	r3, [r7, #24]
 948 013c 9A60     		str	r2, [r3, #8]
 105:jsmn.c        ****         }
 949              		.loc 2 105 0
 950 013e 05E0     		b	.L68
 951              	.L66:
  97:jsmn.c        ****         token = &tokens[i];
 952              		.loc 2 97 0 discriminator 2
 953 0140 7B6A     		ldr	r3, [r7, #36]
 954 0142 013B     		subs	r3, r3, #1
 955 0144 7B62     		str	r3, [r7, #36]
 956              	.L65:
  97:jsmn.c        ****         token = &tokens[i];
 957              		.loc 2 97 0 is_stmt 0 discriminator 1
 958 0146 7B6A     		ldr	r3, [r7, #36]
 959 0148 002B     		cmp	r3, #0
 960 014a D7DA     		bge	.L69
 961              	.L68:
 109:jsmn.c        ****         return JSMN_ERROR_INVAL;
 962              		.loc 2 109 0 is_stmt 1
 963 014c 7B6A     		ldr	r3, [r7, #36]
 964 014e B3F1FF3F 		cmp	r3, #-1
 965 0152 19D1     		bne	.L71
 110:jsmn.c        ****       }
 966              		.loc 2 110 0
 967 0154 6FF00103 		mvn	r3, #1
 968 0158 ECE0     		b	.L58
 969              	.L74:
 113:jsmn.c        ****         if (token->start != -1 && token->end == -1) {
 970              		.loc 2 113 0
 971 015a 7B6A     		ldr	r3, [r7, #36]
 972 015c 1B01     		lsls	r3, r3, #4
 973 015e 3A68     		ldr	r2, [r7]
 974 0160 1344     		add	r3, r3, r2
 975 0162 BB61     		str	r3, [r7, #24]
 114:jsmn.c        ****           parser->toksuper = i;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 26


 976              		.loc 2 114 0
 977 0164 BB69     		ldr	r3, [r7, #24]
 978 0166 5B68     		ldr	r3, [r3, #4]
 979 0168 B3F1FF3F 		cmp	r3, #-1
 980 016c 09D0     		beq	.L72
 114:jsmn.c        ****           parser->toksuper = i;
 981              		.loc 2 114 0 is_stmt 0 discriminator 1
 982 016e BB69     		ldr	r3, [r7, #24]
 983 0170 9B68     		ldr	r3, [r3, #8]
 984 0172 B3F1FF3F 		cmp	r3, #-1
 985 0176 04D1     		bne	.L72
 115:jsmn.c        ****           break;
 986              		.loc 2 115 0 is_stmt 1
 987 0178 FB68     		ldr	r3, [r7, #12]
 988 017a 7A6A     		ldr	r2, [r7, #36]
 989 017c 9A60     		str	r2, [r3, #8]
 116:jsmn.c        ****         }
 990              		.loc 2 116 0
 991 017e 00BF     		nop
 120:jsmn.c        ****     case '\"':
 992              		.loc 2 120 0
 993 0180 A4E0     		b	.L56
 994              	.L72:
 112:jsmn.c        ****         token = &tokens[i];
 995              		.loc 2 112 0
 996 0182 7B6A     		ldr	r3, [r7, #36]
 997 0184 013B     		subs	r3, r3, #1
 998 0186 7B62     		str	r3, [r7, #36]
 999              	.L71:
 112:jsmn.c        ****         token = &tokens[i];
 1000              		.loc 2 112 0 is_stmt 0 discriminator 1
 1001 0188 7B6A     		ldr	r3, [r7, #36]
 1002 018a 002B     		cmp	r3, #0
 1003 018c E5DA     		bge	.L74
 120:jsmn.c        ****     case '\"':
 1004              		.loc 2 120 0 is_stmt 1
 1005 018e 9DE0     		b	.L56
 1006              	.L50:
 122:jsmn.c        ****       if (r < 0) {
 1007              		.loc 2 122 0
 1008 0190 3B6B     		ldr	r3, [r7, #48]
 1009 0192 0093     		str	r3, [sp]
 1010 0194 3B68     		ldr	r3, [r7]
 1011 0196 7A68     		ldr	r2, [r7, #4]
 1012 0198 B968     		ldr	r1, [r7, #8]
 1013 019a F868     		ldr	r0, [r7, #12]
 1014 019c FFF7FEFF 		bl	jsmn_parse_string
 1015 01a0 7861     		str	r0, [r7, #20]
 123:jsmn.c        ****         return r;
 1016              		.loc 2 123 0
 1017 01a2 7B69     		ldr	r3, [r7, #20]
 1018 01a4 002B     		cmp	r3, #0
 1019 01a6 01DA     		bge	.L75
 124:jsmn.c        ****       }
 1020              		.loc 2 124 0
 1021 01a8 7B69     		ldr	r3, [r7, #20]
 1022 01aa C3E0     		b	.L58
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 27


 1023              	.L75:
 126:jsmn.c        ****       if (parser->toksuper != -1 && tokens != NULL) {
 1024              		.loc 2 126 0
 1025 01ac 3B6A     		ldr	r3, [r7, #32]
 1026 01ae 0133     		adds	r3, r3, #1
 1027 01b0 3B62     		str	r3, [r7, #32]
 127:jsmn.c        ****         tokens[parser->toksuper].size++;
 1028              		.loc 2 127 0
 1029 01b2 FB68     		ldr	r3, [r7, #12]
 1030 01b4 9B68     		ldr	r3, [r3, #8]
 1031 01b6 B3F1FF3F 		cmp	r3, #-1
 1032 01ba 00F08280 		beq	.L93
 127:jsmn.c        ****         tokens[parser->toksuper].size++;
 1033              		.loc 2 127 0 is_stmt 0 discriminator 1
 1034 01be 3B68     		ldr	r3, [r7]
 1035 01c0 002B     		cmp	r3, #0
 1036 01c2 7ED0     		beq	.L93
 128:jsmn.c        ****       }
 1037              		.loc 2 128 0 is_stmt 1
 1038 01c4 FB68     		ldr	r3, [r7, #12]
 1039 01c6 9B68     		ldr	r3, [r3, #8]
 1040 01c8 1B01     		lsls	r3, r3, #4
 1041 01ca 3A68     		ldr	r2, [r7]
 1042 01cc 1344     		add	r3, r3, r2
 1043 01ce DA68     		ldr	r2, [r3, #12]
 1044 01d0 0132     		adds	r2, r2, #1
 1045 01d2 DA60     		str	r2, [r3, #12]
 130:jsmn.c        ****     case '\t':
 1046              		.loc 2 130 0
 1047 01d4 75E0     		b	.L93
 1048              	.L53:
 136:jsmn.c        ****     case ':':
 137:jsmn.c        ****       parser->toksuper = parser->toknext - 1;
 1049              		.loc 2 137 0
 1050 01d6 FB68     		ldr	r3, [r7, #12]
 1051 01d8 5B68     		ldr	r3, [r3, #4]
 1052 01da 013B     		subs	r3, r3, #1
 1053 01dc 1A46     		mov	r2, r3
 1054 01de FB68     		ldr	r3, [r7, #12]
 1055 01e0 9A60     		str	r2, [r3, #8]
 138:jsmn.c        ****       break;
 1056              		.loc 2 138 0
 1057 01e2 73E0     		b	.L56
 1058              	.L46:
 139:jsmn.c        ****     case ',':
 140:jsmn.c        ****       if (tokens != NULL && parser->toksuper != -1 &&
 1059              		.loc 2 140 0
 1060 01e4 3B68     		ldr	r3, [r7]
 1061 01e6 002B     		cmp	r3, #0
 1062 01e8 6DD0     		beq	.L94
 1063              		.loc 2 140 0 is_stmt 0 discriminator 1
 1064 01ea FB68     		ldr	r3, [r7, #12]
 1065 01ec 9B68     		ldr	r3, [r3, #8]
 1066 01ee B3F1FF3F 		cmp	r3, #-1
 1067 01f2 68D0     		beq	.L94
 141:jsmn.c        ****           tokens[parser->toksuper].type != JSMN_ARRAY &&
 1068              		.loc 2 141 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 28


 1069 01f4 FB68     		ldr	r3, [r7, #12]
 1070 01f6 9B68     		ldr	r3, [r3, #8]
 1071 01f8 1B01     		lsls	r3, r3, #4
 1072 01fa 3A68     		ldr	r2, [r7]
 1073 01fc 1344     		add	r3, r3, r2
 1074 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 140:jsmn.c        ****           tokens[parser->toksuper].type != JSMN_ARRAY &&
 1075              		.loc 2 140 0 discriminator 2
 1076 0200 022B     		cmp	r3, #2
 1077 0202 60D0     		beq	.L94
 142:jsmn.c        ****           tokens[parser->toksuper].type != JSMN_OBJECT) {
 1078              		.loc 2 142 0
 1079 0204 FB68     		ldr	r3, [r7, #12]
 1080 0206 9B68     		ldr	r3, [r3, #8]
 1081 0208 1B01     		lsls	r3, r3, #4
 1082 020a 3A68     		ldr	r2, [r7]
 1083 020c 1344     		add	r3, r3, r2
 1084 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 141:jsmn.c        ****           tokens[parser->toksuper].type != JSMN_ARRAY &&
 1085              		.loc 2 141 0
 1086 0210 012B     		cmp	r3, #1
 1087 0212 58D0     		beq	.L94
 143:jsmn.c        **** #ifdef JSMN_PARENT_LINKS
 144:jsmn.c        ****         parser->toksuper = tokens[parser->toksuper].parent;
 145:jsmn.c        **** #else
 146:jsmn.c        ****         for (i = parser->toknext - 1; i >= 0; i--) {
 1088              		.loc 2 146 0
 1089 0214 FB68     		ldr	r3, [r7, #12]
 1090 0216 5B68     		ldr	r3, [r3, #4]
 1091 0218 013B     		subs	r3, r3, #1
 1092 021a 7B62     		str	r3, [r7, #36]
 1093 021c 25E0     		b	.L78
 1094              	.L81:
 147:jsmn.c        ****           if (tokens[i].type == JSMN_ARRAY || tokens[i].type == JSMN_OBJECT) {
 1095              		.loc 2 147 0
 1096 021e 7B6A     		ldr	r3, [r7, #36]
 1097 0220 1B01     		lsls	r3, r3, #4
 1098 0222 3A68     		ldr	r2, [r7]
 1099 0224 1344     		add	r3, r3, r2
 1100 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 0228 022B     		cmp	r3, #2
 1102 022a 06D0     		beq	.L79
 1103              		.loc 2 147 0 is_stmt 0 discriminator 1
 1104 022c 7B6A     		ldr	r3, [r7, #36]
 1105 022e 1B01     		lsls	r3, r3, #4
 1106 0230 3A68     		ldr	r2, [r7]
 1107 0232 1344     		add	r3, r3, r2
 1108 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1109 0236 012B     		cmp	r3, #1
 1110 0238 14D1     		bne	.L80
 1111              	.L79:
 148:jsmn.c        ****             if (tokens[i].start != -1 && tokens[i].end == -1) {
 1112              		.loc 2 148 0 is_stmt 1
 1113 023a 7B6A     		ldr	r3, [r7, #36]
 1114 023c 1B01     		lsls	r3, r3, #4
 1115 023e 3A68     		ldr	r2, [r7]
 1116 0240 1344     		add	r3, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 29


 1117 0242 5B68     		ldr	r3, [r3, #4]
 1118 0244 B3F1FF3F 		cmp	r3, #-1
 1119 0248 0CD0     		beq	.L80
 1120              		.loc 2 148 0 is_stmt 0 discriminator 1
 1121 024a 7B6A     		ldr	r3, [r7, #36]
 1122 024c 1B01     		lsls	r3, r3, #4
 1123 024e 3A68     		ldr	r2, [r7]
 1124 0250 1344     		add	r3, r3, r2
 1125 0252 9B68     		ldr	r3, [r3, #8]
 1126 0254 B3F1FF3F 		cmp	r3, #-1
 1127 0258 04D1     		bne	.L80
 149:jsmn.c        ****               parser->toksuper = i;
 1128              		.loc 2 149 0 is_stmt 1
 1129 025a FB68     		ldr	r3, [r7, #12]
 1130 025c 7A6A     		ldr	r2, [r7, #36]
 1131 025e 9A60     		str	r2, [r3, #8]
 150:jsmn.c        ****               break;
 1132              		.loc 2 150 0
 1133 0260 00BF     		nop
 151:jsmn.c        ****             }
 152:jsmn.c        ****           }
 153:jsmn.c        ****         }
 154:jsmn.c        **** #endif
 155:jsmn.c        ****       }
 156:jsmn.c        ****       break;
 1134              		.loc 2 156 0
 1135 0262 30E0     		b	.L94
 1136              	.L80:
 146:jsmn.c        ****           if (tokens[i].type == JSMN_ARRAY || tokens[i].type == JSMN_OBJECT) {
 1137              		.loc 2 146 0 discriminator 2
 1138 0264 7B6A     		ldr	r3, [r7, #36]
 1139 0266 013B     		subs	r3, r3, #1
 1140 0268 7B62     		str	r3, [r7, #36]
 1141              	.L78:
 146:jsmn.c        ****           if (tokens[i].type == JSMN_ARRAY || tokens[i].type == JSMN_OBJECT) {
 1142              		.loc 2 146 0 is_stmt 0 discriminator 1
 1143 026a 7B6A     		ldr	r3, [r7, #36]
 1144 026c 002B     		cmp	r3, #0
 1145 026e D6DA     		bge	.L81
 1146              		.loc 2 156 0 is_stmt 1
 1147 0270 29E0     		b	.L94
 1148              	.L45:
 157:jsmn.c        **** #ifdef JSMN_STRICT
 158:jsmn.c        ****     /* In strict mode primitives are: numbers and booleans */
 159:jsmn.c        ****     case '-':
 160:jsmn.c        ****     case '0':
 161:jsmn.c        ****     case '1':
 162:jsmn.c        ****     case '2':
 163:jsmn.c        ****     case '3':
 164:jsmn.c        ****     case '4':
 165:jsmn.c        ****     case '5':
 166:jsmn.c        ****     case '6':
 167:jsmn.c        ****     case '7':
 168:jsmn.c        ****     case '8':
 169:jsmn.c        ****     case '9':
 170:jsmn.c        ****     case 't':
 171:jsmn.c        ****     case 'f':
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 30


 172:jsmn.c        ****     case 'n':
 173:jsmn.c        ****       /* And they must not be keys of the object */
 174:jsmn.c        ****       if (tokens != NULL && parser->toksuper != -1) {
 175:jsmn.c        ****         const jsmntok_t *t = &tokens[parser->toksuper];
 176:jsmn.c        ****         if (t->type == JSMN_OBJECT ||
 177:jsmn.c        ****             (t->type == JSMN_STRING && t->size != 0)) {
 178:jsmn.c        ****           return JSMN_ERROR_INVAL;
 179:jsmn.c        ****         }
 180:jsmn.c        ****       }
 181:jsmn.c        **** #else
 182:jsmn.c        ****     /* In non-strict mode every unquoted value is a primitive */
 183:jsmn.c        ****     default:
 184:jsmn.c        **** #endif
 185:jsmn.c        ****       r = jsmn_parse_primitive(parser, js, len, tokens, num_tokens);
 1149              		.loc 2 185 0
 1150 0272 3B6B     		ldr	r3, [r7, #48]
 1151 0274 0093     		str	r3, [sp]
 1152 0276 3B68     		ldr	r3, [r7]
 1153 0278 7A68     		ldr	r2, [r7, #4]
 1154 027a B968     		ldr	r1, [r7, #8]
 1155 027c F868     		ldr	r0, [r7, #12]
 1156 027e FFF7FEFF 		bl	jsmn_parse_primitive
 1157 0282 7861     		str	r0, [r7, #20]
 186:jsmn.c        ****       if (r < 0) {
 1158              		.loc 2 186 0
 1159 0284 7B69     		ldr	r3, [r7, #20]
 1160 0286 002B     		cmp	r3, #0
 1161 0288 01DA     		bge	.L82
 187:jsmn.c        ****         return r;
 1162              		.loc 2 187 0
 1163 028a 7B69     		ldr	r3, [r7, #20]
 1164 028c 52E0     		b	.L58
 1165              	.L82:
 188:jsmn.c        ****       }
 189:jsmn.c        ****       count++;
 1166              		.loc 2 189 0
 1167 028e 3B6A     		ldr	r3, [r7, #32]
 1168 0290 0133     		adds	r3, r3, #1
 1169 0292 3B62     		str	r3, [r7, #32]
 190:jsmn.c        ****       if (parser->toksuper != -1 && tokens != NULL) {
 1170              		.loc 2 190 0
 1171 0294 FB68     		ldr	r3, [r7, #12]
 1172 0296 9B68     		ldr	r3, [r3, #8]
 1173 0298 B3F1FF3F 		cmp	r3, #-1
 1174 029c 15D0     		beq	.L95
 1175              		.loc 2 190 0 is_stmt 0 discriminator 1
 1176 029e 3B68     		ldr	r3, [r7]
 1177 02a0 002B     		cmp	r3, #0
 1178 02a2 12D0     		beq	.L95
 191:jsmn.c        ****         tokens[parser->toksuper].size++;
 1179              		.loc 2 191 0 is_stmt 1
 1180 02a4 FB68     		ldr	r3, [r7, #12]
 1181 02a6 9B68     		ldr	r3, [r3, #8]
 1182 02a8 1B01     		lsls	r3, r3, #4
 1183 02aa 3A68     		ldr	r2, [r7]
 1184 02ac 1344     		add	r3, r3, r2
 1185 02ae DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 31


 1186 02b0 0132     		adds	r2, r2, #1
 1187 02b2 DA60     		str	r2, [r3, #12]
 192:jsmn.c        ****       }
 193:jsmn.c        ****       break;
 1188              		.loc 2 193 0
 1189 02b4 09E0     		b	.L95
 1190              	.L90:
 135:jsmn.c        ****     case ':':
 1191              		.loc 2 135 0
 1192 02b6 00BF     		nop
 1193 02b8 08E0     		b	.L56
 1194              	.L91:
  45:jsmn.c        ****       }
 1195              		.loc 2 45 0
 1196 02ba 00BF     		nop
 1197 02bc 06E0     		b	.L56
 1198              	.L92:
  71:jsmn.c        ****       }
 1199              		.loc 2 71 0
 1200 02be 00BF     		nop
 1201 02c0 04E0     		b	.L56
 1202              	.L93:
 130:jsmn.c        ****     case '\t':
 1203              		.loc 2 130 0
 1204 02c2 00BF     		nop
 1205 02c4 02E0     		b	.L56
 1206              	.L94:
 156:jsmn.c        **** #ifdef JSMN_STRICT
 1207              		.loc 2 156 0
 1208 02c6 00BF     		nop
 1209 02c8 00E0     		b	.L56
 1210              	.L95:
 1211              		.loc 2 193 0
 1212 02ca 00BF     		nop
 1213              	.L56:
 1214              	.LBE4:
  35:jsmn.c        ****     char c;
 1215              		.loc 2 35 0
 1216 02cc FB68     		ldr	r3, [r7, #12]
 1217 02ce 1B68     		ldr	r3, [r3]
 1218 02d0 5A1C     		adds	r2, r3, #1
 1219 02d2 FB68     		ldr	r3, [r7, #12]
 1220 02d4 1A60     		str	r2, [r3]
 1221              	.L44:
  35:jsmn.c        ****     char c;
 1222              		.loc 2 35 0 is_stmt 0 discriminator 1
 1223 02d6 FB68     		ldr	r3, [r7, #12]
 1224 02d8 1A68     		ldr	r2, [r3]
 1225 02da 7B68     		ldr	r3, [r7, #4]
 1226 02dc 9A42     		cmp	r2, r3
 1227 02de 07D2     		bcs	.L84
  35:jsmn.c        ****     char c;
 1228              		.loc 2 35 0 discriminator 2
 1229 02e0 FB68     		ldr	r3, [r7, #12]
 1230 02e2 1B68     		ldr	r3, [r3]
 1231 02e4 BA68     		ldr	r2, [r7, #8]
 1232 02e6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 32


 1233 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 02ea 002B     		cmp	r3, #0
 1235 02ec 7FF493AE 		bne	.L85
 1236              	.L84:
 194:jsmn.c        **** 
 195:jsmn.c        **** #ifdef JSMN_STRICT
 196:jsmn.c        ****     /* Unexpected char in strict mode */
 197:jsmn.c        ****     default:
 198:jsmn.c        ****       return JSMN_ERROR_INVAL;
 199:jsmn.c        **** #endif
 200:jsmn.c        ****     }
 201:jsmn.c        ****   }
 202:jsmn.c        **** 
 203:jsmn.c        ****   if (tokens != NULL) {
 1237              		.loc 2 203 0 is_stmt 1
 1238 02f0 3B68     		ldr	r3, [r7]
 1239 02f2 002B     		cmp	r3, #0
 1240 02f4 1DD0     		beq	.L86
 204:jsmn.c        ****     for (i = parser->toknext - 1; i >= 0; i--) {
 1241              		.loc 2 204 0
 1242 02f6 FB68     		ldr	r3, [r7, #12]
 1243 02f8 5B68     		ldr	r3, [r3, #4]
 1244 02fa 013B     		subs	r3, r3, #1
 1245 02fc 7B62     		str	r3, [r7, #36]
 1246 02fe 15E0     		b	.L87
 1247              	.L89:
 205:jsmn.c        ****       /* Unmatched opened object or array */
 206:jsmn.c        ****       if (tokens[i].start != -1 && tokens[i].end == -1) {
 1248              		.loc 2 206 0
 1249 0300 7B6A     		ldr	r3, [r7, #36]
 1250 0302 1B01     		lsls	r3, r3, #4
 1251 0304 3A68     		ldr	r2, [r7]
 1252 0306 1344     		add	r3, r3, r2
 1253 0308 5B68     		ldr	r3, [r3, #4]
 1254 030a B3F1FF3F 		cmp	r3, #-1
 1255 030e 0AD0     		beq	.L88
 1256              		.loc 2 206 0 is_stmt 0 discriminator 1
 1257 0310 7B6A     		ldr	r3, [r7, #36]
 1258 0312 1B01     		lsls	r3, r3, #4
 1259 0314 3A68     		ldr	r2, [r7]
 1260 0316 1344     		add	r3, r3, r2
 1261 0318 9B68     		ldr	r3, [r3, #8]
 1262 031a B3F1FF3F 		cmp	r3, #-1
 1263 031e 02D1     		bne	.L88
 207:jsmn.c        ****         return JSMN_ERROR_PART;
 1264              		.loc 2 207 0 is_stmt 1
 1265 0320 6FF00203 		mvn	r3, #2
 1266 0324 06E0     		b	.L58
 1267              	.L88:
 204:jsmn.c        ****     for (i = parser->toknext - 1; i >= 0; i--) {
 1268              		.loc 2 204 0 discriminator 2
 1269 0326 7B6A     		ldr	r3, [r7, #36]
 1270 0328 013B     		subs	r3, r3, #1
 1271 032a 7B62     		str	r3, [r7, #36]
 1272              	.L87:
 204:jsmn.c        ****     for (i = parser->toknext - 1; i >= 0; i--) {
 1273              		.loc 2 204 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 33


 1274 032c 7B6A     		ldr	r3, [r7, #36]
 1275 032e 002B     		cmp	r3, #0
 1276 0330 E6DA     		bge	.L89
 1277              	.L86:
 208:jsmn.c        ****       }
 209:jsmn.c        ****     }
 210:jsmn.c        ****   }
 211:jsmn.c        **** 
 212:jsmn.c        ****   return count;
 1278              		.loc 2 212 0 is_stmt 1
 1279 0332 3B6A     		ldr	r3, [r7, #32]
 1280              	.L58:
 213:jsmn.c        **** }
 1281              		.loc 2 213 0
 1282 0334 1846     		mov	r0, r3
 1283 0336 2837     		adds	r7, r7, #40
 1284              		.cfi_def_cfa_offset 8
 1285 0338 BD46     		mov	sp, r7
 1286              		.cfi_def_cfa_register 13
 1287              		@ sp needed
 1288 033a 80BD     		pop	{r7, pc}
 1289              		.cfi_endproc
 1290              	.LFE5:
 1291              		.size	jsmn_parse, .-jsmn_parse
 1292              		.text
 1293              	.Letext0:
 1294              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1295              		.section	.debug_info,"",%progbits
 1296              	.Ldebug_info0:
 1297 0000 24040000 		.4byte	0x424
 1298 0004 0400     		.2byte	0x4
 1299 0006 00000000 		.4byte	.Ldebug_abbrev0
 1300 000a 04       		.byte	0x4
 1301 000b 01       		.uleb128 0x1
 1302 000c 07000000 		.4byte	.LASF32
 1303 0010 0C       		.byte	0xc
 1304 0011 00000000 		.4byte	.LASF33
 1305 0015 52010000 		.4byte	.LASF34
 1306 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1307 001d 00000000 		.4byte	0
 1308 0021 00000000 		.4byte	.Ldebug_line0
 1309 0025 02       		.uleb128 0x2
 1310 0026 04       		.byte	0x4
 1311 0027 05       		.byte	0x5
 1312 0028 696E7400 		.ascii	"int\000"
 1313 002c 03       		.uleb128 0x3
 1314 002d 1A010000 		.4byte	.LASF9
 1315 0031 03       		.byte	0x3
 1316 0032 D8       		.byte	0xd8
 1317 0033 37000000 		.4byte	0x37
 1318 0037 04       		.uleb128 0x4
 1319 0038 04       		.byte	0x4
 1320 0039 07       		.byte	0x7
 1321 003a BF010000 		.4byte	.LASF0
 1322 003e 04       		.uleb128 0x4
 1323 003f 08       		.byte	0x8
 1324 0040 05       		.byte	0x5
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 34


 1325 0041 EA010000 		.4byte	.LASF1
 1326 0045 04       		.uleb128 0x4
 1327 0046 08       		.byte	0x8
 1328 0047 04       		.byte	0x4
 1329 0048 3E020000 		.4byte	.LASF2
 1330 004c 05       		.uleb128 0x5
 1331 004d 01       		.byte	0x1
 1332 004e 77000000 		.4byte	0x77
 1333 0052 01       		.byte	0x1
 1334 0053 2E       		.byte	0x2e
 1335 0054 77000000 		.4byte	0x77
 1336 0058 06       		.uleb128 0x6
 1337 0059 EE000000 		.4byte	.LASF3
 1338 005d 00       		.byte	0
 1339 005e 06       		.uleb128 0x6
 1340 005f A4000000 		.4byte	.LASF4
 1341 0063 01       		.byte	0x1
 1342 0064 06       		.uleb128 0x6
 1343 0065 21010000 		.4byte	.LASF5
 1344 0069 02       		.byte	0x2
 1345 006a 06       		.uleb128 0x6
 1346 006b D3010000 		.4byte	.LASF6
 1347 006f 04       		.byte	0x4
 1348 0070 06       		.uleb128 0x6
 1349 0071 7C020000 		.4byte	.LASF7
 1350 0075 08       		.byte	0x8
 1351 0076 00       		.byte	0
 1352 0077 04       		.uleb128 0x4
 1353 0078 01       		.byte	0x1
 1354 0079 08       		.byte	0x8
 1355 007a E0000000 		.4byte	.LASF8
 1356 007e 03       		.uleb128 0x3
 1357 007f 36010000 		.4byte	.LASF10
 1358 0083 01       		.byte	0x1
 1359 0084 34       		.byte	0x34
 1360 0085 4C000000 		.4byte	0x4c
 1361 0089 07       		.uleb128 0x7
 1362 008a 19020000 		.4byte	.LASF35
 1363 008e 01       		.byte	0x1
 1364 008f AC000000 		.4byte	0xac
 1365 0093 01       		.byte	0x1
 1366 0094 36       		.byte	0x36
 1367 0095 AC000000 		.4byte	0xac
 1368 0099 08       		.uleb128 0x8
 1369 009a 56020000 		.4byte	.LASF11
 1370 009e 7F       		.sleb128 -1
 1371 009f 08       		.uleb128 0x8
 1372 00a0 AE010000 		.4byte	.LASF12
 1373 00a4 7E       		.sleb128 -2
 1374 00a5 08       		.uleb128 0x8
 1375 00a6 6C020000 		.4byte	.LASF13
 1376 00aa 7D       		.sleb128 -3
 1377 00ab 00       		.byte	0
 1378 00ac 04       		.uleb128 0x4
 1379 00ad 01       		.byte	0x1
 1380 00ae 06       		.byte	0x6
 1381 00af 4A020000 		.4byte	.LASF14
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 35


 1382 00b3 09       		.uleb128 0x9
 1383 00b4 12010000 		.4byte	.LASF19
 1384 00b8 10       		.byte	0x10
 1385 00b9 01       		.byte	0x1
 1386 00ba 45       		.byte	0x45
 1387 00bb F0000000 		.4byte	0xf0
 1388 00bf 0A       		.uleb128 0xa
 1389 00c0 08020000 		.4byte	.LASF15
 1390 00c4 01       		.byte	0x1
 1391 00c5 46       		.byte	0x46
 1392 00c6 7E000000 		.4byte	0x7e
 1393 00ca 00       		.byte	0
 1394 00cb 0A       		.uleb128 0xa
 1395 00cc B0000000 		.4byte	.LASF16
 1396 00d0 01       		.byte	0x1
 1397 00d1 47       		.byte	0x47
 1398 00d2 25000000 		.4byte	0x25
 1399 00d6 04       		.byte	0x4
 1400 00d7 0B       		.uleb128 0xb
 1401 00d8 656E6400 		.ascii	"end\000"
 1402 00dc 01       		.byte	0x1
 1403 00dd 48       		.byte	0x48
 1404 00de 25000000 		.4byte	0x25
 1405 00e2 08       		.byte	0x8
 1406 00e3 0A       		.uleb128 0xa
 1407 00e4 67020000 		.4byte	.LASF17
 1408 00e8 01       		.byte	0x1
 1409 00e9 49       		.byte	0x49
 1410 00ea 25000000 		.4byte	0x25
 1411 00ee 0C       		.byte	0xc
 1412 00ef 00       		.byte	0
 1413 00f0 03       		.uleb128 0x3
 1414 00f1 2C010000 		.4byte	.LASF18
 1415 00f5 01       		.byte	0x1
 1416 00f6 4D       		.byte	0x4d
 1417 00f7 B3000000 		.4byte	0xb3
 1418 00fb 09       		.uleb128 0x9
 1419 00fc 0D020000 		.4byte	.LASF20
 1420 0100 0C       		.byte	0xc
 1421 0101 01       		.byte	0x1
 1422 0102 53       		.byte	0x53
 1423 0103 2C010000 		.4byte	0x12c
 1424 0107 0B       		.uleb128 0xb
 1425 0108 706F7300 		.ascii	"pos\000"
 1426 010c 01       		.byte	0x1
 1427 010d 54       		.byte	0x54
 1428 010e 37000000 		.4byte	0x37
 1429 0112 00       		.byte	0
 1430 0113 0A       		.uleb128 0xa
 1431 0114 B6000000 		.4byte	.LASF21
 1432 0118 01       		.byte	0x1
 1433 0119 55       		.byte	0x55
 1434 011a 37000000 		.4byte	0x37
 1435 011e 04       		.byte	0x4
 1436 011f 0A       		.uleb128 0xa
 1437 0120 95000000 		.4byte	.LASF22
 1438 0124 01       		.byte	0x1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 36


 1439 0125 56       		.byte	0x56
 1440 0126 25000000 		.4byte	0x25
 1441 012a 08       		.byte	0x8
 1442 012b 00       		.byte	0
 1443 012c 03       		.uleb128 0x3
 1444 012d 0D020000 		.4byte	.LASF20
 1445 0131 01       		.byte	0x1
 1446 0132 57       		.byte	0x57
 1447 0133 FB000000 		.4byte	0xfb
 1448 0137 0C       		.uleb128 0xc
 1449 0138 C4000000 		.4byte	.LASF27
 1450 013c 01       		.byte	0x1
 1451 013d 6A       		.byte	0x6a
 1452 013e 89010000 		.4byte	0x189
 1453 0142 00000000 		.4byte	.LFB0
 1454 0146 4E000000 		.4byte	.LFE0-.LFB0
 1455 014a 01       		.uleb128 0x1
 1456 014b 9C       		.byte	0x9c
 1457 014c 89010000 		.4byte	0x189
 1458 0150 0D       		.uleb128 0xd
 1459 0151 4B010000 		.4byte	.LASF23
 1460 0155 01       		.byte	0x1
 1461 0156 6A       		.byte	0x6a
 1462 0157 8F010000 		.4byte	0x18f
 1463 015b 02       		.uleb128 0x2
 1464 015c 91       		.byte	0x91
 1465 015d 6C       		.sleb128 -20
 1466 015e 0D       		.uleb128 0xd
 1467 015f CC010000 		.4byte	.LASF24
 1468 0163 01       		.byte	0x1
 1469 0164 6A       		.byte	0x6a
 1470 0165 89010000 		.4byte	0x189
 1471 0169 02       		.uleb128 0x2
 1472 016a 91       		.byte	0x91
 1473 016b 68       		.sleb128 -24
 1474 016c 0D       		.uleb128 0xd
 1475 016d DF010000 		.4byte	.LASF25
 1476 0171 01       		.byte	0x1
 1477 0172 6B       		.byte	0x6b
 1478 0173 95010000 		.4byte	0x195
 1479 0177 02       		.uleb128 0x2
 1480 0178 91       		.byte	0x91
 1481 0179 64       		.sleb128 -28
 1482 017a 0E       		.uleb128 0xe
 1483 017b 746F6B00 		.ascii	"tok\000"
 1484 017f 01       		.byte	0x1
 1485 0180 6C       		.byte	0x6c
 1486 0181 89010000 		.4byte	0x189
 1487 0185 02       		.uleb128 0x2
 1488 0186 91       		.byte	0x91
 1489 0187 74       		.sleb128 -12
 1490 0188 00       		.byte	0
 1491 0189 0F       		.uleb128 0xf
 1492 018a 04       		.byte	0x4
 1493 018b F0000000 		.4byte	0xf0
 1494 018f 0F       		.uleb128 0xf
 1495 0190 04       		.byte	0x4
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 37


 1496 0191 2C010000 		.4byte	0x12c
 1497 0195 10       		.uleb128 0x10
 1498 0196 2C000000 		.4byte	0x2c
 1499 019a 11       		.uleb128 0x11
 1500 019b F8010000 		.4byte	.LASF36
 1501 019f 01       		.byte	0x1
 1502 01a0 7C       		.byte	0x7c
 1503 01a1 00000000 		.4byte	.LFB1
 1504 01a5 32000000 		.4byte	.LFE1-.LFB1
 1505 01a9 01       		.uleb128 0x1
 1506 01aa 9C       		.byte	0x9c
 1507 01ab E8010000 		.4byte	0x1e8
 1508 01af 0D       		.uleb128 0xd
 1509 01b0 33020000 		.4byte	.LASF26
 1510 01b4 01       		.byte	0x1
 1511 01b5 7C       		.byte	0x7c
 1512 01b6 89010000 		.4byte	0x189
 1513 01ba 02       		.uleb128 0x2
 1514 01bb 91       		.byte	0x91
 1515 01bc 74       		.sleb128 -12
 1516 01bd 0D       		.uleb128 0xd
 1517 01be 08020000 		.4byte	.LASF15
 1518 01c2 01       		.byte	0x1
 1519 01c3 7C       		.byte	0x7c
 1520 01c4 E8010000 		.4byte	0x1e8
 1521 01c8 02       		.uleb128 0x2
 1522 01c9 91       		.byte	0x91
 1523 01ca 73       		.sleb128 -13
 1524 01cb 0D       		.uleb128 0xd
 1525 01cc B0000000 		.4byte	.LASF16
 1526 01d0 01       		.byte	0x1
 1527 01d1 7D       		.byte	0x7d
 1528 01d2 ED010000 		.4byte	0x1ed
 1529 01d6 02       		.uleb128 0x2
 1530 01d7 91       		.byte	0x91
 1531 01d8 6C       		.sleb128 -20
 1532 01d9 12       		.uleb128 0x12
 1533 01da 656E6400 		.ascii	"end\000"
 1534 01de 01       		.byte	0x1
 1535 01df 7D       		.byte	0x7d
 1536 01e0 ED010000 		.4byte	0x1ed
 1537 01e4 02       		.uleb128 0x2
 1538 01e5 91       		.byte	0x91
 1539 01e6 68       		.sleb128 -24
 1540 01e7 00       		.byte	0
 1541 01e8 10       		.uleb128 0x10
 1542 01e9 7E000000 		.4byte	0x7e
 1543 01ed 10       		.uleb128 0x10
 1544 01ee 25000000 		.4byte	0x25
 1545 01f2 13       		.uleb128 0x13
 1546 01f3 FD000000 		.4byte	.LASF28
 1547 01f7 01       		.byte	0x1
 1548 01f8 87       		.byte	0x87
 1549 01f9 25000000 		.4byte	0x25
 1550 01fd 00000000 		.4byte	.LFB2
 1551 0201 F0000000 		.4byte	.LFE2-.LFB2
 1552 0205 01       		.uleb128 0x1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 38


 1553 0206 9C       		.byte	0x9c
 1554 0207 78020000 		.4byte	0x278
 1555 020b 0D       		.uleb128 0xd
 1556 020c 4B010000 		.4byte	.LASF23
 1557 0210 01       		.byte	0x1
 1558 0211 87       		.byte	0x87
 1559 0212 8F010000 		.4byte	0x18f
 1560 0216 02       		.uleb128 0x2
 1561 0217 91       		.byte	0x91
 1562 0218 6C       		.sleb128 -20
 1563 0219 12       		.uleb128 0x12
 1564 021a 6A7300   		.ascii	"js\000"
 1565 021d 01       		.byte	0x1
 1566 021e 87       		.byte	0x87
 1567 021f 78020000 		.4byte	0x278
 1568 0223 02       		.uleb128 0x2
 1569 0224 91       		.byte	0x91
 1570 0225 68       		.sleb128 -24
 1571 0226 12       		.uleb128 0x12
 1572 0227 6C656E00 		.ascii	"len\000"
 1573 022b 01       		.byte	0x1
 1574 022c 88       		.byte	0x88
 1575 022d 95010000 		.4byte	0x195
 1576 0231 02       		.uleb128 0x2
 1577 0232 91       		.byte	0x91
 1578 0233 64       		.sleb128 -28
 1579 0234 0D       		.uleb128 0xd
 1580 0235 CC010000 		.4byte	.LASF24
 1581 0239 01       		.byte	0x1
 1582 023a 88       		.byte	0x88
 1583 023b 89010000 		.4byte	0x189
 1584 023f 02       		.uleb128 0x2
 1585 0240 91       		.byte	0x91
 1586 0241 60       		.sleb128 -32
 1587 0242 0D       		.uleb128 0xd
 1588 0243 DF010000 		.4byte	.LASF25
 1589 0247 01       		.byte	0x1
 1590 0248 89       		.byte	0x89
 1591 0249 95010000 		.4byte	0x195
 1592 024d 02       		.uleb128 0x2
 1593 024e 91       		.byte	0x91
 1594 024f 00       		.sleb128 0
 1595 0250 14       		.uleb128 0x14
 1596 0251 33020000 		.4byte	.LASF26
 1597 0255 01       		.byte	0x1
 1598 0256 8A       		.byte	0x8a
 1599 0257 89010000 		.4byte	0x189
 1600 025b 02       		.uleb128 0x2
 1601 025c 91       		.byte	0x91
 1602 025d 70       		.sleb128 -16
 1603 025e 14       		.uleb128 0x14
 1604 025f B0000000 		.4byte	.LASF16
 1605 0263 01       		.byte	0x1
 1606 0264 8B       		.byte	0x8b
 1607 0265 25000000 		.4byte	0x25
 1608 0269 02       		.uleb128 0x2
 1609 026a 91       		.byte	0x91
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 39


 1610 026b 74       		.sleb128 -12
 1611 026c 15       		.uleb128 0x15
 1612 026d BE000000 		.4byte	.LASF37
 1613 0271 01       		.byte	0x1
 1614 0272 AC       		.byte	0xac
 1615 0273 9C000000 		.4byte	.L11
 1616 0277 00       		.byte	0
 1617 0278 0F       		.uleb128 0xf
 1618 0279 04       		.byte	0x4
 1619 027a 85020000 		.4byte	0x285
 1620 027e 04       		.uleb128 0x4
 1621 027f 01       		.byte	0x1
 1622 0280 08       		.byte	0x8
 1623 0281 39020000 		.4byte	.LASF29
 1624 0285 10       		.uleb128 0x10
 1625 0286 7E020000 		.4byte	0x27e
 1626 028a 13       		.uleb128 0x13
 1627 028b 21020000 		.4byte	.LASF30
 1628 028f 01       		.byte	0x1
 1629 0290 C1       		.byte	0xc1
 1630 0291 25000000 		.4byte	0x25
 1631 0295 00000000 		.4byte	.LFB3
 1632 0299 E6020000 		.4byte	.LFE3-.LFB3
 1633 029d 01       		.uleb128 0x1
 1634 029e 9C       		.byte	0x9c
 1635 029f 31030000 		.4byte	0x331
 1636 02a3 0D       		.uleb128 0xd
 1637 02a4 4B010000 		.4byte	.LASF23
 1638 02a8 01       		.byte	0x1
 1639 02a9 C1       		.byte	0xc1
 1640 02aa 8F010000 		.4byte	0x18f
 1641 02ae 02       		.uleb128 0x2
 1642 02af 91       		.byte	0x91
 1643 02b0 64       		.sleb128 -28
 1644 02b1 12       		.uleb128 0x12
 1645 02b2 6A7300   		.ascii	"js\000"
 1646 02b5 01       		.byte	0x1
 1647 02b6 C1       		.byte	0xc1
 1648 02b7 78020000 		.4byte	0x278
 1649 02bb 02       		.uleb128 0x2
 1650 02bc 91       		.byte	0x91
 1651 02bd 60       		.sleb128 -32
 1652 02be 12       		.uleb128 0x12
 1653 02bf 6C656E00 		.ascii	"len\000"
 1654 02c3 01       		.byte	0x1
 1655 02c4 C2       		.byte	0xc2
 1656 02c5 95010000 		.4byte	0x195
 1657 02c9 02       		.uleb128 0x2
 1658 02ca 91       		.byte	0x91
 1659 02cb 5C       		.sleb128 -36
 1660 02cc 0D       		.uleb128 0xd
 1661 02cd CC010000 		.4byte	.LASF24
 1662 02d1 01       		.byte	0x1
 1663 02d2 C2       		.byte	0xc2
 1664 02d3 89010000 		.4byte	0x189
 1665 02d7 02       		.uleb128 0x2
 1666 02d8 91       		.byte	0x91
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 40


 1667 02d9 58       		.sleb128 -40
 1668 02da 0D       		.uleb128 0xd
 1669 02db DF010000 		.4byte	.LASF25
 1670 02df 01       		.byte	0x1
 1671 02e0 C3       		.byte	0xc3
 1672 02e1 95010000 		.4byte	0x195
 1673 02e5 02       		.uleb128 0x2
 1674 02e6 91       		.byte	0x91
 1675 02e7 00       		.sleb128 0
 1676 02e8 14       		.uleb128 0x14
 1677 02e9 33020000 		.4byte	.LASF26
 1678 02ed 01       		.byte	0x1
 1679 02ee C4       		.byte	0xc4
 1680 02ef 89010000 		.4byte	0x189
 1681 02f3 02       		.uleb128 0x2
 1682 02f4 91       		.byte	0x91
 1683 02f5 68       		.sleb128 -24
 1684 02f6 14       		.uleb128 0x14
 1685 02f7 B0000000 		.4byte	.LASF16
 1686 02fb 01       		.byte	0x1
 1687 02fc C6       		.byte	0xc6
 1688 02fd 25000000 		.4byte	0x25
 1689 0301 02       		.uleb128 0x2
 1690 0302 91       		.byte	0x91
 1691 0303 70       		.sleb128 -16
 1692 0304 16       		.uleb128 0x16
 1693 0305 20000000 		.4byte	.LBB2
 1694 0309 90020000 		.4byte	.LBE2-.LBB2
 1695 030d 0E       		.uleb128 0xe
 1696 030e 6300     		.ascii	"c\000"
 1697 0310 01       		.byte	0x1
 1698 0311 CC       		.byte	0xcc
 1699 0312 7E020000 		.4byte	0x27e
 1700 0316 02       		.uleb128 0x2
 1701 0317 91       		.byte	0x91
 1702 0318 6F       		.sleb128 -17
 1703 0319 16       		.uleb128 0x16
 1704 031a 84000000 		.4byte	.LBB3
 1705 031e 2C020000 		.4byte	.LBE3-.LBB3
 1706 0322 0E       		.uleb128 0xe
 1707 0323 6900     		.ascii	"i\000"
 1708 0325 01       		.byte	0x1
 1709 0326 E1       		.byte	0xe1
 1710 0327 25000000 		.4byte	0x25
 1711 032b 02       		.uleb128 0x2
 1712 032c 91       		.byte	0x91
 1713 032d 74       		.sleb128 -12
 1714 032e 00       		.byte	0
 1715 032f 00       		.byte	0
 1716 0330 00       		.byte	0
 1717 0331 17       		.uleb128 0x17
 1718 0332 41010000 		.4byte	.LASF38
 1719 0336 02       		.byte	0x2
 1720 0337 13       		.byte	0x13
 1721 0338 00000000 		.4byte	.LFB4
 1722 033c 26000000 		.4byte	.LFE4-.LFB4
 1723 0340 01       		.uleb128 0x1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 41


 1724 0341 9C       		.byte	0x9c
 1725 0342 55030000 		.4byte	0x355
 1726 0346 0D       		.uleb128 0xd
 1727 0347 4B010000 		.4byte	.LASF23
 1728 034b 02       		.byte	0x2
 1729 034c 13       		.byte	0x13
 1730 034d 8F010000 		.4byte	0x18f
 1731 0351 02       		.uleb128 0x2
 1732 0352 91       		.byte	0x91
 1733 0353 74       		.sleb128 -12
 1734 0354 00       		.byte	0
 1735 0355 18       		.uleb128 0x18
 1736 0356 D5000000 		.4byte	.LASF39
 1737 035a 02       		.byte	0x2
 1738 035b 1C       		.byte	0x1c
 1739 035c 25000000 		.4byte	0x25
 1740 0360 00000000 		.4byte	.LFB5
 1741 0364 3C030000 		.4byte	.LFE5-.LFB5
 1742 0368 01       		.uleb128 0x1
 1743 0369 9C       		.byte	0x9c
 1744 036a 22040000 		.4byte	0x422
 1745 036e 0D       		.uleb128 0xd
 1746 036f 4B010000 		.4byte	.LASF23
 1747 0373 02       		.byte	0x2
 1748 0374 1C       		.byte	0x1c
 1749 0375 8F010000 		.4byte	0x18f
 1750 0379 02       		.uleb128 0x2
 1751 037a 91       		.byte	0x91
 1752 037b 5C       		.sleb128 -36
 1753 037c 12       		.uleb128 0x12
 1754 037d 6A7300   		.ascii	"js\000"
 1755 0380 02       		.byte	0x2
 1756 0381 1C       		.byte	0x1c
 1757 0382 78020000 		.4byte	0x278
 1758 0386 02       		.uleb128 0x2
 1759 0387 91       		.byte	0x91
 1760 0388 58       		.sleb128 -40
 1761 0389 12       		.uleb128 0x12
 1762 038a 6C656E00 		.ascii	"len\000"
 1763 038e 02       		.byte	0x2
 1764 038f 1C       		.byte	0x1c
 1765 0390 95010000 		.4byte	0x195
 1766 0394 02       		.uleb128 0x2
 1767 0395 91       		.byte	0x91
 1768 0396 54       		.sleb128 -44
 1769 0397 0D       		.uleb128 0xd
 1770 0398 CC010000 		.4byte	.LASF24
 1771 039c 02       		.byte	0x2
 1772 039d 1D       		.byte	0x1d
 1773 039e 89010000 		.4byte	0x189
 1774 03a2 02       		.uleb128 0x2
 1775 03a3 91       		.byte	0x91
 1776 03a4 50       		.sleb128 -48
 1777 03a5 0D       		.uleb128 0xd
 1778 03a6 DF010000 		.4byte	.LASF25
 1779 03aa 02       		.byte	0x2
 1780 03ab 1D       		.byte	0x1d
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 42


 1781 03ac 22040000 		.4byte	0x422
 1782 03b0 02       		.uleb128 0x2
 1783 03b1 91       		.byte	0x91
 1784 03b2 00       		.sleb128 0
 1785 03b3 0E       		.uleb128 0xe
 1786 03b4 7200     		.ascii	"r\000"
 1787 03b6 02       		.byte	0x2
 1788 03b7 1E       		.byte	0x1e
 1789 03b8 25000000 		.4byte	0x25
 1790 03bc 02       		.uleb128 0x2
 1791 03bd 91       		.byte	0x91
 1792 03be 64       		.sleb128 -28
 1793 03bf 0E       		.uleb128 0xe
 1794 03c0 6900     		.ascii	"i\000"
 1795 03c2 02       		.byte	0x2
 1796 03c3 1F       		.byte	0x1f
 1797 03c4 25000000 		.4byte	0x25
 1798 03c8 02       		.uleb128 0x2
 1799 03c9 91       		.byte	0x91
 1800 03ca 74       		.sleb128 -12
 1801 03cb 14       		.uleb128 0x14
 1802 03cc 33020000 		.4byte	.LASF26
 1803 03d0 02       		.byte	0x2
 1804 03d1 20       		.byte	0x20
 1805 03d2 89010000 		.4byte	0x189
 1806 03d6 02       		.uleb128 0x2
 1807 03d7 91       		.byte	0x91
 1808 03d8 68       		.sleb128 -24
 1809 03d9 14       		.uleb128 0x14
 1810 03da 9E000000 		.4byte	.LASF31
 1811 03de 02       		.byte	0x2
 1812 03df 21       		.byte	0x21
 1813 03e0 25000000 		.4byte	0x25
 1814 03e4 02       		.uleb128 0x2
 1815 03e5 91       		.byte	0x91
 1816 03e6 70       		.sleb128 -16
 1817 03e7 16       		.uleb128 0x16
 1818 03e8 16000000 		.4byte	.LBB4
 1819 03ec B6020000 		.4byte	.LBE4-.LBB4
 1820 03f0 0E       		.uleb128 0xe
 1821 03f1 6300     		.ascii	"c\000"
 1822 03f3 02       		.byte	0x2
 1823 03f4 24       		.byte	0x24
 1824 03f5 7E020000 		.4byte	0x27e
 1825 03f9 02       		.uleb128 0x2
 1826 03fa 91       		.byte	0x91
 1827 03fb 6F       		.sleb128 -17
 1828 03fc 14       		.uleb128 0x14
 1829 03fd 08020000 		.4byte	.LASF15
 1830 0401 02       		.byte	0x2
 1831 0402 25       		.byte	0x25
 1832 0403 7E000000 		.4byte	0x7e
 1833 0407 02       		.uleb128 0x2
 1834 0408 91       		.byte	0x91
 1835 0409 6E       		.sleb128 -18
 1836 040a 16       		.uleb128 0x16
 1837 040b 9E000000 		.4byte	.LBB5
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 43


 1838 040f 16000000 		.4byte	.LBE5-.LBB5
 1839 0413 0E       		.uleb128 0xe
 1840 0414 7400     		.ascii	"t\000"
 1841 0416 02       		.byte	0x2
 1842 0417 34       		.byte	0x34
 1843 0418 89010000 		.4byte	0x189
 1844 041c 02       		.uleb128 0x2
 1845 041d 91       		.byte	0x91
 1846 041e 60       		.sleb128 -32
 1847 041f 00       		.byte	0
 1848 0420 00       		.byte	0
 1849 0421 00       		.byte	0
 1850 0422 10       		.uleb128 0x10
 1851 0423 37000000 		.4byte	0x37
 1852 0427 00       		.byte	0
 1853              		.section	.debug_abbrev,"",%progbits
 1854              	.Ldebug_abbrev0:
 1855 0000 01       		.uleb128 0x1
 1856 0001 11       		.uleb128 0x11
 1857 0002 01       		.byte	0x1
 1858 0003 25       		.uleb128 0x25
 1859 0004 0E       		.uleb128 0xe
 1860 0005 13       		.uleb128 0x13
 1861 0006 0B       		.uleb128 0xb
 1862 0007 03       		.uleb128 0x3
 1863 0008 0E       		.uleb128 0xe
 1864 0009 1B       		.uleb128 0x1b
 1865 000a 0E       		.uleb128 0xe
 1866 000b 55       		.uleb128 0x55
 1867 000c 17       		.uleb128 0x17
 1868 000d 11       		.uleb128 0x11
 1869 000e 01       		.uleb128 0x1
 1870 000f 10       		.uleb128 0x10
 1871 0010 17       		.uleb128 0x17
 1872 0011 00       		.byte	0
 1873 0012 00       		.byte	0
 1874 0013 02       		.uleb128 0x2
 1875 0014 24       		.uleb128 0x24
 1876 0015 00       		.byte	0
 1877 0016 0B       		.uleb128 0xb
 1878 0017 0B       		.uleb128 0xb
 1879 0018 3E       		.uleb128 0x3e
 1880 0019 0B       		.uleb128 0xb
 1881 001a 03       		.uleb128 0x3
 1882 001b 08       		.uleb128 0x8
 1883 001c 00       		.byte	0
 1884 001d 00       		.byte	0
 1885 001e 03       		.uleb128 0x3
 1886 001f 16       		.uleb128 0x16
 1887 0020 00       		.byte	0
 1888 0021 03       		.uleb128 0x3
 1889 0022 0E       		.uleb128 0xe
 1890 0023 3A       		.uleb128 0x3a
 1891 0024 0B       		.uleb128 0xb
 1892 0025 3B       		.uleb128 0x3b
 1893 0026 0B       		.uleb128 0xb
 1894 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 44


 1895 0028 13       		.uleb128 0x13
 1896 0029 00       		.byte	0
 1897 002a 00       		.byte	0
 1898 002b 04       		.uleb128 0x4
 1899 002c 24       		.uleb128 0x24
 1900 002d 00       		.byte	0
 1901 002e 0B       		.uleb128 0xb
 1902 002f 0B       		.uleb128 0xb
 1903 0030 3E       		.uleb128 0x3e
 1904 0031 0B       		.uleb128 0xb
 1905 0032 03       		.uleb128 0x3
 1906 0033 0E       		.uleb128 0xe
 1907 0034 00       		.byte	0
 1908 0035 00       		.byte	0
 1909 0036 05       		.uleb128 0x5
 1910 0037 04       		.uleb128 0x4
 1911 0038 01       		.byte	0x1
 1912 0039 0B       		.uleb128 0xb
 1913 003a 0B       		.uleb128 0xb
 1914 003b 49       		.uleb128 0x49
 1915 003c 13       		.uleb128 0x13
 1916 003d 3A       		.uleb128 0x3a
 1917 003e 0B       		.uleb128 0xb
 1918 003f 3B       		.uleb128 0x3b
 1919 0040 0B       		.uleb128 0xb
 1920 0041 01       		.uleb128 0x1
 1921 0042 13       		.uleb128 0x13
 1922 0043 00       		.byte	0
 1923 0044 00       		.byte	0
 1924 0045 06       		.uleb128 0x6
 1925 0046 28       		.uleb128 0x28
 1926 0047 00       		.byte	0
 1927 0048 03       		.uleb128 0x3
 1928 0049 0E       		.uleb128 0xe
 1929 004a 1C       		.uleb128 0x1c
 1930 004b 0B       		.uleb128 0xb
 1931 004c 00       		.byte	0
 1932 004d 00       		.byte	0
 1933 004e 07       		.uleb128 0x7
 1934 004f 04       		.uleb128 0x4
 1935 0050 01       		.byte	0x1
 1936 0051 03       		.uleb128 0x3
 1937 0052 0E       		.uleb128 0xe
 1938 0053 0B       		.uleb128 0xb
 1939 0054 0B       		.uleb128 0xb
 1940 0055 49       		.uleb128 0x49
 1941 0056 13       		.uleb128 0x13
 1942 0057 3A       		.uleb128 0x3a
 1943 0058 0B       		.uleb128 0xb
 1944 0059 3B       		.uleb128 0x3b
 1945 005a 0B       		.uleb128 0xb
 1946 005b 01       		.uleb128 0x1
 1947 005c 13       		.uleb128 0x13
 1948 005d 00       		.byte	0
 1949 005e 00       		.byte	0
 1950 005f 08       		.uleb128 0x8
 1951 0060 28       		.uleb128 0x28
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 45


 1952 0061 00       		.byte	0
 1953 0062 03       		.uleb128 0x3
 1954 0063 0E       		.uleb128 0xe
 1955 0064 1C       		.uleb128 0x1c
 1956 0065 0D       		.uleb128 0xd
 1957 0066 00       		.byte	0
 1958 0067 00       		.byte	0
 1959 0068 09       		.uleb128 0x9
 1960 0069 13       		.uleb128 0x13
 1961 006a 01       		.byte	0x1
 1962 006b 03       		.uleb128 0x3
 1963 006c 0E       		.uleb128 0xe
 1964 006d 0B       		.uleb128 0xb
 1965 006e 0B       		.uleb128 0xb
 1966 006f 3A       		.uleb128 0x3a
 1967 0070 0B       		.uleb128 0xb
 1968 0071 3B       		.uleb128 0x3b
 1969 0072 0B       		.uleb128 0xb
 1970 0073 01       		.uleb128 0x1
 1971 0074 13       		.uleb128 0x13
 1972 0075 00       		.byte	0
 1973 0076 00       		.byte	0
 1974 0077 0A       		.uleb128 0xa
 1975 0078 0D       		.uleb128 0xd
 1976 0079 00       		.byte	0
 1977 007a 03       		.uleb128 0x3
 1978 007b 0E       		.uleb128 0xe
 1979 007c 3A       		.uleb128 0x3a
 1980 007d 0B       		.uleb128 0xb
 1981 007e 3B       		.uleb128 0x3b
 1982 007f 0B       		.uleb128 0xb
 1983 0080 49       		.uleb128 0x49
 1984 0081 13       		.uleb128 0x13
 1985 0082 38       		.uleb128 0x38
 1986 0083 0B       		.uleb128 0xb
 1987 0084 00       		.byte	0
 1988 0085 00       		.byte	0
 1989 0086 0B       		.uleb128 0xb
 1990 0087 0D       		.uleb128 0xd
 1991 0088 00       		.byte	0
 1992 0089 03       		.uleb128 0x3
 1993 008a 08       		.uleb128 0x8
 1994 008b 3A       		.uleb128 0x3a
 1995 008c 0B       		.uleb128 0xb
 1996 008d 3B       		.uleb128 0x3b
 1997 008e 0B       		.uleb128 0xb
 1998 008f 49       		.uleb128 0x49
 1999 0090 13       		.uleb128 0x13
 2000 0091 38       		.uleb128 0x38
 2001 0092 0B       		.uleb128 0xb
 2002 0093 00       		.byte	0
 2003 0094 00       		.byte	0
 2004 0095 0C       		.uleb128 0xc
 2005 0096 2E       		.uleb128 0x2e
 2006 0097 01       		.byte	0x1
 2007 0098 03       		.uleb128 0x3
 2008 0099 0E       		.uleb128 0xe
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 46


 2009 009a 3A       		.uleb128 0x3a
 2010 009b 0B       		.uleb128 0xb
 2011 009c 3B       		.uleb128 0x3b
 2012 009d 0B       		.uleb128 0xb
 2013 009e 27       		.uleb128 0x27
 2014 009f 19       		.uleb128 0x19
 2015 00a0 49       		.uleb128 0x49
 2016 00a1 13       		.uleb128 0x13
 2017 00a2 11       		.uleb128 0x11
 2018 00a3 01       		.uleb128 0x1
 2019 00a4 12       		.uleb128 0x12
 2020 00a5 06       		.uleb128 0x6
 2021 00a6 40       		.uleb128 0x40
 2022 00a7 18       		.uleb128 0x18
 2023 00a8 9742     		.uleb128 0x2117
 2024 00aa 19       		.uleb128 0x19
 2025 00ab 01       		.uleb128 0x1
 2026 00ac 13       		.uleb128 0x13
 2027 00ad 00       		.byte	0
 2028 00ae 00       		.byte	0
 2029 00af 0D       		.uleb128 0xd
 2030 00b0 05       		.uleb128 0x5
 2031 00b1 00       		.byte	0
 2032 00b2 03       		.uleb128 0x3
 2033 00b3 0E       		.uleb128 0xe
 2034 00b4 3A       		.uleb128 0x3a
 2035 00b5 0B       		.uleb128 0xb
 2036 00b6 3B       		.uleb128 0x3b
 2037 00b7 0B       		.uleb128 0xb
 2038 00b8 49       		.uleb128 0x49
 2039 00b9 13       		.uleb128 0x13
 2040 00ba 02       		.uleb128 0x2
 2041 00bb 18       		.uleb128 0x18
 2042 00bc 00       		.byte	0
 2043 00bd 00       		.byte	0
 2044 00be 0E       		.uleb128 0xe
 2045 00bf 34       		.uleb128 0x34
 2046 00c0 00       		.byte	0
 2047 00c1 03       		.uleb128 0x3
 2048 00c2 08       		.uleb128 0x8
 2049 00c3 3A       		.uleb128 0x3a
 2050 00c4 0B       		.uleb128 0xb
 2051 00c5 3B       		.uleb128 0x3b
 2052 00c6 0B       		.uleb128 0xb
 2053 00c7 49       		.uleb128 0x49
 2054 00c8 13       		.uleb128 0x13
 2055 00c9 02       		.uleb128 0x2
 2056 00ca 18       		.uleb128 0x18
 2057 00cb 00       		.byte	0
 2058 00cc 00       		.byte	0
 2059 00cd 0F       		.uleb128 0xf
 2060 00ce 0F       		.uleb128 0xf
 2061 00cf 00       		.byte	0
 2062 00d0 0B       		.uleb128 0xb
 2063 00d1 0B       		.uleb128 0xb
 2064 00d2 49       		.uleb128 0x49
 2065 00d3 13       		.uleb128 0x13
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 47


 2066 00d4 00       		.byte	0
 2067 00d5 00       		.byte	0
 2068 00d6 10       		.uleb128 0x10
 2069 00d7 26       		.uleb128 0x26
 2070 00d8 00       		.byte	0
 2071 00d9 49       		.uleb128 0x49
 2072 00da 13       		.uleb128 0x13
 2073 00db 00       		.byte	0
 2074 00dc 00       		.byte	0
 2075 00dd 11       		.uleb128 0x11
 2076 00de 2E       		.uleb128 0x2e
 2077 00df 01       		.byte	0x1
 2078 00e0 03       		.uleb128 0x3
 2079 00e1 0E       		.uleb128 0xe
 2080 00e2 3A       		.uleb128 0x3a
 2081 00e3 0B       		.uleb128 0xb
 2082 00e4 3B       		.uleb128 0x3b
 2083 00e5 0B       		.uleb128 0xb
 2084 00e6 27       		.uleb128 0x27
 2085 00e7 19       		.uleb128 0x19
 2086 00e8 11       		.uleb128 0x11
 2087 00e9 01       		.uleb128 0x1
 2088 00ea 12       		.uleb128 0x12
 2089 00eb 06       		.uleb128 0x6
 2090 00ec 40       		.uleb128 0x40
 2091 00ed 18       		.uleb128 0x18
 2092 00ee 9742     		.uleb128 0x2117
 2093 00f0 19       		.uleb128 0x19
 2094 00f1 01       		.uleb128 0x1
 2095 00f2 13       		.uleb128 0x13
 2096 00f3 00       		.byte	0
 2097 00f4 00       		.byte	0
 2098 00f5 12       		.uleb128 0x12
 2099 00f6 05       		.uleb128 0x5
 2100 00f7 00       		.byte	0
 2101 00f8 03       		.uleb128 0x3
 2102 00f9 08       		.uleb128 0x8
 2103 00fa 3A       		.uleb128 0x3a
 2104 00fb 0B       		.uleb128 0xb
 2105 00fc 3B       		.uleb128 0x3b
 2106 00fd 0B       		.uleb128 0xb
 2107 00fe 49       		.uleb128 0x49
 2108 00ff 13       		.uleb128 0x13
 2109 0100 02       		.uleb128 0x2
 2110 0101 18       		.uleb128 0x18
 2111 0102 00       		.byte	0
 2112 0103 00       		.byte	0
 2113 0104 13       		.uleb128 0x13
 2114 0105 2E       		.uleb128 0x2e
 2115 0106 01       		.byte	0x1
 2116 0107 03       		.uleb128 0x3
 2117 0108 0E       		.uleb128 0xe
 2118 0109 3A       		.uleb128 0x3a
 2119 010a 0B       		.uleb128 0xb
 2120 010b 3B       		.uleb128 0x3b
 2121 010c 0B       		.uleb128 0xb
 2122 010d 27       		.uleb128 0x27
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 48


 2123 010e 19       		.uleb128 0x19
 2124 010f 49       		.uleb128 0x49
 2125 0110 13       		.uleb128 0x13
 2126 0111 11       		.uleb128 0x11
 2127 0112 01       		.uleb128 0x1
 2128 0113 12       		.uleb128 0x12
 2129 0114 06       		.uleb128 0x6
 2130 0115 40       		.uleb128 0x40
 2131 0116 18       		.uleb128 0x18
 2132 0117 9642     		.uleb128 0x2116
 2133 0119 19       		.uleb128 0x19
 2134 011a 01       		.uleb128 0x1
 2135 011b 13       		.uleb128 0x13
 2136 011c 00       		.byte	0
 2137 011d 00       		.byte	0
 2138 011e 14       		.uleb128 0x14
 2139 011f 34       		.uleb128 0x34
 2140 0120 00       		.byte	0
 2141 0121 03       		.uleb128 0x3
 2142 0122 0E       		.uleb128 0xe
 2143 0123 3A       		.uleb128 0x3a
 2144 0124 0B       		.uleb128 0xb
 2145 0125 3B       		.uleb128 0x3b
 2146 0126 0B       		.uleb128 0xb
 2147 0127 49       		.uleb128 0x49
 2148 0128 13       		.uleb128 0x13
 2149 0129 02       		.uleb128 0x2
 2150 012a 18       		.uleb128 0x18
 2151 012b 00       		.byte	0
 2152 012c 00       		.byte	0
 2153 012d 15       		.uleb128 0x15
 2154 012e 0A       		.uleb128 0xa
 2155 012f 00       		.byte	0
 2156 0130 03       		.uleb128 0x3
 2157 0131 0E       		.uleb128 0xe
 2158 0132 3A       		.uleb128 0x3a
 2159 0133 0B       		.uleb128 0xb
 2160 0134 3B       		.uleb128 0x3b
 2161 0135 0B       		.uleb128 0xb
 2162 0136 11       		.uleb128 0x11
 2163 0137 01       		.uleb128 0x1
 2164 0138 00       		.byte	0
 2165 0139 00       		.byte	0
 2166 013a 16       		.uleb128 0x16
 2167 013b 0B       		.uleb128 0xb
 2168 013c 01       		.byte	0x1
 2169 013d 11       		.uleb128 0x11
 2170 013e 01       		.uleb128 0x1
 2171 013f 12       		.uleb128 0x12
 2172 0140 06       		.uleb128 0x6
 2173 0141 00       		.byte	0
 2174 0142 00       		.byte	0
 2175 0143 17       		.uleb128 0x17
 2176 0144 2E       		.uleb128 0x2e
 2177 0145 01       		.byte	0x1
 2178 0146 3F       		.uleb128 0x3f
 2179 0147 19       		.uleb128 0x19
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 49


 2180 0148 03       		.uleb128 0x3
 2181 0149 0E       		.uleb128 0xe
 2182 014a 3A       		.uleb128 0x3a
 2183 014b 0B       		.uleb128 0xb
 2184 014c 3B       		.uleb128 0x3b
 2185 014d 0B       		.uleb128 0xb
 2186 014e 27       		.uleb128 0x27
 2187 014f 19       		.uleb128 0x19
 2188 0150 11       		.uleb128 0x11
 2189 0151 01       		.uleb128 0x1
 2190 0152 12       		.uleb128 0x12
 2191 0153 06       		.uleb128 0x6
 2192 0154 40       		.uleb128 0x40
 2193 0155 18       		.uleb128 0x18
 2194 0156 9742     		.uleb128 0x2117
 2195 0158 19       		.uleb128 0x19
 2196 0159 01       		.uleb128 0x1
 2197 015a 13       		.uleb128 0x13
 2198 015b 00       		.byte	0
 2199 015c 00       		.byte	0
 2200 015d 18       		.uleb128 0x18
 2201 015e 2E       		.uleb128 0x2e
 2202 015f 01       		.byte	0x1
 2203 0160 3F       		.uleb128 0x3f
 2204 0161 19       		.uleb128 0x19
 2205 0162 03       		.uleb128 0x3
 2206 0163 0E       		.uleb128 0xe
 2207 0164 3A       		.uleb128 0x3a
 2208 0165 0B       		.uleb128 0xb
 2209 0166 3B       		.uleb128 0x3b
 2210 0167 0B       		.uleb128 0xb
 2211 0168 27       		.uleb128 0x27
 2212 0169 19       		.uleb128 0x19
 2213 016a 49       		.uleb128 0x49
 2214 016b 13       		.uleb128 0x13
 2215 016c 11       		.uleb128 0x11
 2216 016d 01       		.uleb128 0x1
 2217 016e 12       		.uleb128 0x12
 2218 016f 06       		.uleb128 0x6
 2219 0170 40       		.uleb128 0x40
 2220 0171 18       		.uleb128 0x18
 2221 0172 9642     		.uleb128 0x2116
 2222 0174 19       		.uleb128 0x19
 2223 0175 01       		.uleb128 0x1
 2224 0176 13       		.uleb128 0x13
 2225 0177 00       		.byte	0
 2226 0178 00       		.byte	0
 2227 0179 00       		.byte	0
 2228              		.section	.debug_aranges,"",%progbits
 2229 0000 44000000 		.4byte	0x44
 2230 0004 0200     		.2byte	0x2
 2231 0006 00000000 		.4byte	.Ldebug_info0
 2232 000a 04       		.byte	0x4
 2233 000b 00       		.byte	0
 2234 000c 0000     		.2byte	0
 2235 000e 0000     		.2byte	0
 2236 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 50


 2237 0014 4E000000 		.4byte	.LFE0-.LFB0
 2238 0018 00000000 		.4byte	.LFB1
 2239 001c 32000000 		.4byte	.LFE1-.LFB1
 2240 0020 00000000 		.4byte	.LFB2
 2241 0024 F0000000 		.4byte	.LFE2-.LFB2
 2242 0028 00000000 		.4byte	.LFB3
 2243 002c E6020000 		.4byte	.LFE3-.LFB3
 2244 0030 00000000 		.4byte	.LFB4
 2245 0034 26000000 		.4byte	.LFE4-.LFB4
 2246 0038 00000000 		.4byte	.LFB5
 2247 003c 3C030000 		.4byte	.LFE5-.LFB5
 2248 0040 00000000 		.4byte	0
 2249 0044 00000000 		.4byte	0
 2250              		.section	.debug_ranges,"",%progbits
 2251              	.Ldebug_ranges0:
 2252 0000 00000000 		.4byte	.LFB0
 2253 0004 4E000000 		.4byte	.LFE0
 2254 0008 00000000 		.4byte	.LFB1
 2255 000c 32000000 		.4byte	.LFE1
 2256 0010 00000000 		.4byte	.LFB2
 2257 0014 F0000000 		.4byte	.LFE2
 2258 0018 00000000 		.4byte	.LFB3
 2259 001c E6020000 		.4byte	.LFE3
 2260 0020 00000000 		.4byte	.LFB4
 2261 0024 26000000 		.4byte	.LFE4
 2262 0028 00000000 		.4byte	.LFB5
 2263 002c 3C030000 		.4byte	.LFE5
 2264 0030 00000000 		.4byte	0
 2265 0034 00000000 		.4byte	0
 2266              		.section	.debug_line,"",%progbits
 2267              	.Ldebug_line0:
 2268 0000 FD020000 		.section	.debug_str,"MS",%progbits,1
 2268      0200BB00 
 2268      00000201 
 2268      FB0E0D00 
 2268      01010101 
 2269              	.LASF33:
 2270 0000 6A736D6E 		.ascii	"jsmn.c\000"
 2270      2E6300
 2271              	.LASF32:
 2272 0007 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2272      43313120 
 2272      352E342E 
 2272      31203230 
 2272      31363036 
 2273 003a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2273      20726576 
 2273      6973696F 
 2273      6E203233 
 2273      37373135 
 2274 006d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2274      66756E63 
 2274      74696F6E 
 2274      2D736563 
 2274      74696F6E 
 2275              	.LASF22:
 2276 0095 746F6B73 		.ascii	"toksuper\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 51


 2276      75706572 
 2276      00
 2277              	.LASF31:
 2278 009e 636F756E 		.ascii	"count\000"
 2278      7400
 2279              	.LASF4:
 2280 00a4 4A534D4E 		.ascii	"JSMN_OBJECT\000"
 2280      5F4F424A 
 2280      45435400 
 2281              	.LASF16:
 2282 00b0 73746172 		.ascii	"start\000"
 2282      7400
 2283              	.LASF21:
 2284 00b6 746F6B6E 		.ascii	"toknext\000"
 2284      65787400 
 2285              	.LASF37:
 2286 00be 666F756E 		.ascii	"found\000"
 2286      6400
 2287              	.LASF27:
 2288 00c4 6A736D6E 		.ascii	"jsmn_alloc_token\000"
 2288      5F616C6C 
 2288      6F635F74 
 2288      6F6B656E 
 2288      00
 2289              	.LASF39:
 2290 00d5 6A736D6E 		.ascii	"jsmn_parse\000"
 2290      5F706172 
 2290      736500
 2291              	.LASF8:
 2292 00e0 756E7369 		.ascii	"unsigned char\000"
 2292      676E6564 
 2292      20636861 
 2292      7200
 2293              	.LASF3:
 2294 00ee 4A534D4E 		.ascii	"JSMN_UNDEFINED\000"
 2294      5F554E44 
 2294      4546494E 
 2294      454400
 2295              	.LASF28:
 2296 00fd 6A736D6E 		.ascii	"jsmn_parse_primitive\000"
 2296      5F706172 
 2296      73655F70 
 2296      72696D69 
 2296      74697665 
 2297              	.LASF19:
 2298 0112 6A736D6E 		.ascii	"jsmntok\000"
 2298      746F6B00 
 2299              	.LASF9:
 2300 011a 73697A65 		.ascii	"size_t\000"
 2300      5F7400
 2301              	.LASF5:
 2302 0121 4A534D4E 		.ascii	"JSMN_ARRAY\000"
 2302      5F415252 
 2302      415900
 2303              	.LASF18:
 2304 012c 6A736D6E 		.ascii	"jsmntok_t\000"
 2304      746F6B5F 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 52


 2304      7400
 2305              	.LASF10:
 2306 0136 6A736D6E 		.ascii	"jsmntype_t\000"
 2306      74797065 
 2306      5F7400
 2307              	.LASF38:
 2308 0141 6A736D6E 		.ascii	"jsmn_init\000"
 2308      5F696E69 
 2308      7400
 2309              	.LASF23:
 2310 014b 70617273 		.ascii	"parser\000"
 2310      657200
 2311              	.LASF34:
 2312 0152 433A5C55 		.ascii	"C:\\Users\\schmi\\OneDrive\\Dokumente\\PSoC Creator"
 2312      73657273 
 2312      5C736368 
 2312      6D695C4F 
 2312      6E654472 
 2313 0180 5C4A736F 		.ascii	"\\JsonParserLAB3\\holidayProject\\setUpEnv.cydsn\000"
 2313      6E506172 
 2313      7365724C 
 2313      4142335C 
 2313      686F6C69 
 2314              	.LASF12:
 2315 01ae 4A534D4E 		.ascii	"JSMN_ERROR_INVAL\000"
 2315      5F455252 
 2315      4F525F49 
 2315      4E56414C 
 2315      00
 2316              	.LASF0:
 2317 01bf 756E7369 		.ascii	"unsigned int\000"
 2317      676E6564 
 2317      20696E74 
 2317      00
 2318              	.LASF24:
 2319 01cc 746F6B65 		.ascii	"tokens\000"
 2319      6E7300
 2320              	.LASF6:
 2321 01d3 4A534D4E 		.ascii	"JSMN_STRING\000"
 2321      5F535452 
 2321      494E4700 
 2322              	.LASF25:
 2323 01df 6E756D5F 		.ascii	"num_tokens\000"
 2323      746F6B65 
 2323      6E7300
 2324              	.LASF1:
 2325 01ea 6C6F6E67 		.ascii	"long long int\000"
 2325      206C6F6E 
 2325      6720696E 
 2325      7400
 2326              	.LASF36:
 2327 01f8 6A736D6E 		.ascii	"jsmn_fill_token\000"
 2327      5F66696C 
 2327      6C5F746F 
 2327      6B656E00 
 2328              	.LASF15:
 2329 0208 74797065 		.ascii	"type\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccJ6kb1p.s 			page 53


 2329      00
 2330              	.LASF20:
 2331 020d 6A736D6E 		.ascii	"jsmn_parser\000"
 2331      5F706172 
 2331      73657200 
 2332              	.LASF35:
 2333 0219 6A736D6E 		.ascii	"jsmnerr\000"
 2333      65727200 
 2334              	.LASF30:
 2335 0221 6A736D6E 		.ascii	"jsmn_parse_string\000"
 2335      5F706172 
 2335      73655F73 
 2335      7472696E 
 2335      6700
 2336              	.LASF26:
 2337 0233 746F6B65 		.ascii	"token\000"
 2337      6E00
 2338              	.LASF29:
 2339 0239 63686172 		.ascii	"char\000"
 2339      00
 2340              	.LASF2:
 2341 023e 6C6F6E67 		.ascii	"long double\000"
 2341      20646F75 
 2341      626C6500 
 2342              	.LASF14:
 2343 024a 7369676E 		.ascii	"signed char\000"
 2343      65642063 
 2343      68617200 
 2344              	.LASF11:
 2345 0256 4A534D4E 		.ascii	"JSMN_ERROR_NOMEM\000"
 2345      5F455252 
 2345      4F525F4E 
 2345      4F4D454D 
 2345      00
 2346              	.LASF17:
 2347 0267 73697A65 		.ascii	"size\000"
 2347      00
 2348              	.LASF13:
 2349 026c 4A534D4E 		.ascii	"JSMN_ERROR_PART\000"
 2349      5F455252 
 2349      4F525F50 
 2349      41525400 
 2350              	.LASF7:
 2351 027c 4A534D4E 		.ascii	"JSMN_PRIMITIVE\000"
 2351      5F505249 
 2351      4D495449 
 2351      564500
 2352              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
