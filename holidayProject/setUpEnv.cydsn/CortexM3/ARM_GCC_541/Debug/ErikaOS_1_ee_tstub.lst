ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_tstub.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_as_set_execution_context,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_as_set_execution_context, %function
  24              	EE_as_set_execution_context:
  25              	.LFB41:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * CVS: $Id: ee_common.h,v 1.7 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                             Kernel Constants
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* invalid TID */
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_NIL          ((EE_TID)-1)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* maximum value for EE_UREG (used in EE_th_resource_last) */
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_UREG_MINUS1  ((EE_UREG)-1)
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** The Kernel constants like NIL and other thread statuses are defined
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** in the following sections:
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - invalid see 13.2.4
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - thread statuses see 13.2.4
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Moreover, the user must specify (into types.h) in a fashion like
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    #define identifier unique_number
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the following identifiers:
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource identifiers declared with the macro
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      DeclareResource (13.4.2.1)
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The task identifiers declared with the macro TASK(TaskName) (13.2.5)
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource (RES_SCHEDULER) MUST have the maximum ceiling possible
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      for Tasks
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For the Extended status and ORTI support:
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_TASK maximum number of tasks (used in TaskActivate
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_RESOURCE maximum number of resources
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_ALARM maximum number of alarms
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For TASK/ALARM Autostart support:
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_APPMODE maximum number of Application modes (typically
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      >0, because there is always the mode OSDEFAULTAPPMODE.
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Types
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priority type */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPRIO
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPRIO EE_UREG
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* status type */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the status type, that usually was an used configurable type, is set
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    by the OO Standard (Bindings specification, paragraph 3.2) to be
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    unsigned char. */
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPESTATUS
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPESTATUS EE_UREG
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pending activation type */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPENACT
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPENACT EE_UREG
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* event mask type */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEEVENTMASK
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEEVENTMASK EE_UREG
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pair type (signed!) */
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPAIR
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPAIR EE_SREG
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* application mode type */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEAPPMODE
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEAPPMODE EE_UREG
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* service id type */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEOSSERVICEID
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEOSSERVICEID EE_UINT8
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* resource id type */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPERESOURCE
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPERESOURCE EE_UREG
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter id type */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTER
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTER EE_UREG
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter object id type */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 4


 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTEROBJECT
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTEROBJECT  EE_UREG
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* alarm id type */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEALARM
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEALARM EE_TYPECOUNTEROBJECT
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* action id type */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEACTION
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEACTION EE_UREG
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter tick type */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPETICK
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK EE_UREG
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies the OS-Application. */
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID                ApplicationType;
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_OSAPPLICATION ((ApplicationType)-1)
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define KERNEL_OSAPPLICATION  ((ApplicationType)0U)
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Maximum number of pending activations */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPENACT   EE_th_rnact_max[EE_MAX_TASK];
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priorities (NB: they are bit fields!!!) */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_ready_prio[EE_MAX_TASK];
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_dispatch_prio[EE_MAX_TASK];
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_TASK_NAME[EE_MAX_TASK];
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_EVENT_NAME[EE_MAX_EVENT];
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_ALARM_NAME[EE_MAX_ALARM];
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_RESOURCE_NAME[EE_MAX_RESOURCE];
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_RESOURCE_ID[EE_MAX_RESOURCE];
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_EVENT_ID[EE_MAX_EVENT];
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_ALARM_ID[EE_MAX_ALARM];
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*uthra changes*/
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Variables defined by the application
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread status, all initialized to SUSPENDED */
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPESTATUS EE_th_status[EE_MAX_TASK];
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 5


 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* next: is used for:
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the stacked queue
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - WaitEvent (?)
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the ready queue (BCC1, ECC1)
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    all initialized with EE_NIL
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_next[EE_MAX_TASK];
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * remaining nact: init= maximum pending activations of a Task
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * =1 for BCC1 and ECC1, >= 0 for BCC2 and ECC2
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * all initialized with 1 (ECC2, BCC2: or with a value >1)
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPENACT   EE_th_rnact[EE_MAX_TASK];
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_CHAINTASK__
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The next task to be activated after a ChainTask. initvalue=all EE_NIL */
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_terminate_nextask[EE_MAX_TASK];
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The first stacked task (initvalue = EE_NIL) */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID       EE_stkfirst;
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* First task in the ready queue (initvalue = EE_NIL) */
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_rq_first;
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  __OO_BCC1__ || __OO_ECC1__ */
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* System ceiling (initvalue = 0) */
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_sys_ceiling;
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ready queue implementation:
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - 16 priorities
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 6


 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - we use a queue for each priority. Head and tail are stored in an array
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - each queue contains pairs (Task ID, next)
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - the number of pairs is the sum of all the possible activations
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   of all the tasks (in that way, an activation will never fail due
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   to the lack of a pair)
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - to know which queue have to be used, a bit mask is used to do a fast
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   lookup (the 8 bit lookup table is defined into ee_lookup.c)
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* bit mask with 16 or 8 priority levels (Initvalue = 0) */
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_BCC2__)
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT8 EE_TYPE_RQ_MASK;
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT16 EE_TYPE_RQ_MASK;
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following data structure gives the link between a task and its
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority queue.  The values of this data structure are the same of
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_ready_prio, except that they are not stored as bitfields
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: each TID = x such that th_ready_prio[TID]= 1<<x
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_rq_link[EE_MAX_TASK];
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The priority queues  (initvalue: all -1;
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number of elements: 8(BCC2) or 16(ECC2) ) */
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_head[EE_RQ_QUEUES_HEAD_SIZE];
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_tail[EE_RQ_QUEUES_TAIL_SIZE];
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The pairs that are enqueued into the priority queues */
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* initvalue: something like {1,2,3,4,5,...,-1}.
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of elements is equal to the sum of the elements of
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_th_rnact */
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_pairs_next[EE_RQ_PAIRS_NEXT_SIZE];
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* init value=0 (no init value); the number of elements is equal to the
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    sum of the elements of EE_th_rnact */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID      EE_rq_pairs_tid[EE_RQ_PAIRS_TID_SIZE];
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 7


 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RQ priority Mask */
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPE_RQ_MASK EE_rq_bitmask;
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a list of unused pairs */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_free; /* pointer to a free pair; initvalue=0 */
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Event handling */
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: To save memory space, Extended tasks should have the smallest
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number into the task data structures. In that way, the following
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    data structures can be sized to exactly the number of the extended
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    tasks */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread events already active; these events are set using the
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    SetEvent primitive. initvalue = 0 */
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_active[EE_MAX_TASK];
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread wait mask. this is the event mask the task is waiting using
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    WaitEvent. A task IS waiting only if the value in this array IS != 0.
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    initvalue = 0 */
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_waitmask[EE_MAX_TASK];
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this structure contains a flag that is 1 if a thread has been
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    suspended using EE_hal_stkchange. In that case, the task have to
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be wakened again using the same function. initvalue = 0
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_th_waswaiting[EE_MAX_TASK];
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* just a flag: this flag is 1 if the task is an extended task, 0 otherwise */
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Please note that this flag is defined both in STANDARD and in
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EXTENDED status. The need for this flag in standard status is
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    because task activations of an extended task clears its pending
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    event mask. */
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEBOOL EE_th_is_extended[EE_MAX_TASK];
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 8


 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resources data structures */
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resource ceiling */
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO   EE_resource_ceiling[EE_MAX_RESOURCE];
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ISR2 priority tied to an resource */
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEISR2PRIO  EE_resource_isr2_priority[EE_MAX_RESOURCE];
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: There is no constraint on the index that is assigned
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    RES_SCHEDULER!!! */
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old resource ceiling */
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_resource_oldceiling[EE_MAX_RESOURCE];
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* New data structures to handle resource sharing with isr2 and isr2 hardware
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority ceiling. */
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old ISR2 priority */
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEISR2PRIO  EE_isr2_oldpriority[EE_MAX_RESOURCE];
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ORTI_RES_ISLOCKED__))
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status or when using ORTI with resources; for each
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    resource, a flag is allocated to see if the resource is locked or
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not.  Note that this information cannot be easily knew from the
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    previous two data structures. initvalue=0
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_resource_locked[EE_MAX_RESOURCE];
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_EXTENDED_STATUS__ || __OO_ORTI_RES_ISLOCKED__ */
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ISR2_RESOURCES__))
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 9


 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status; for each task, we allocate a data
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    structure that keeps track of the order in which every task has
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    allocated a resource. This is needed to return a meaningful
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    E_OS_NOFUNC error in the ReleaseResource call. */
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the last resource that the task has locked. This array
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    contains one entry for each task.  Initvalue= all -1. at runtime,
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    it points to the first item in the EE_resource_stack data structure */
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_MAX_ISR2_WITH_RESOURCES
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK];
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* !EE_MAX_ISR2_WITH_RESOURCES */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK + EE_MAX_ISR2_WITH_RESOURCES];
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !EE_MAX_ISR2_WITH_RESOURCES */
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this array is used to store a list of resources locked by a
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    task. there is one entry for each resource, initvalue = -1. the
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    list of resources locked by a task is ended by -1. */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_resource_stack[EE_MAX_RESOURCE];
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ || __OO_ISR2_RESOURCES__ */
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_NO_RESOURCES__ */
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(EE_MAX_ISR2_WITH_RESOURCES)) && (!defined(EE_AS_USER_SPINLOCKS__))
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2_WITH_RESOURCES > 0)
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Array to hold corresponding isr2 nesting levels */
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2_WITH_RESOURCES];
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* (EE_MAX_ISR2_WITH_RESOURCES > 0) && !EE_AS_USER_SPINLOCKS__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #elif defined (EE_MAX_ISR2)
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2 > 0)
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2];
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_ISR2 > 0 */
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the stub that have to be put into the EE_th_body array */
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern void EE_oo_thread_stub(void);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 10


 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* see top of the file */
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.2 Task management
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.1 Data types                                                       */
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies a task. */
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID TaskType;
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of TaskType. */
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID *TaskRefType;
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies the state of a task. */
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS TaskStateType;
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of the data type TaskStateType. */
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS *TaskStateRefType;
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ISR2 management
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies an interrupt service routine (ISR). */
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID ISRType;
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ISR ((ISRType)-1)
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.4 Constants                                                        */
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state running. */
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define RUNNING   ((EE_TYPESTATUS)0U)
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state waiting. */
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define WAITING   ((EE_TYPESTATUS)1U)
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state ready. */
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define READY     ((EE_TYPESTATUS)2U)
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state suspended. */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define SUSPENDED ((EE_TYPESTATUS)3U)
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.4 Resource management
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.4.1 Data types                                                       */
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 11


 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPERESOURCE ResourceType;
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.5 Event control
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.5.1 Data types                                                       */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK EventMaskType;
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK *EventMaskRefType;
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.6 Counters & Alarms
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents count values in ticks. */
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPETICK TickType;
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type TickType. */
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef TickType *TickRefType;
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_CPU_CLOCK
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of ms in number of ticks at the CPU
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     clock frequency **/
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MILLI_TO_CPU_TICKS(X_MS) EE_MILLI_TO_TICKS(X_MS, EE_CPU_CLOCK)
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of us in number of ticks of a given
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     frequency **/
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MICRO_TO_CPU_TICKS(X_US) EE_MICRO_TO_TICKS(X_US, EE_CPU_CLOCK)
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_CPU_CLOCK */
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Alarms Handling */
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Used to handle some corner cases with TickType */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK_HALF_VALUE ((((EE_TYPETICK)-1) >> 1) + 1U)
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.6.1 Data types                                                       */
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* A structure for storage of counter characteristics. */
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType maxallowedvalue; /* Maximum possible allowed count value in
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                ticks */
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType ticksperbase;    /* Number of hardware ticks required to reach a
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                counter-specific (significant) unit. */
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_EXTENDED_STATUS__
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType mincycle; /* Smallest allowed value for the cycle-parameter
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         of SetRelAlarm/SetAbsAlarm) (only for systems
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         with extended status) */
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ */
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } AlarmBaseType;
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type AlarmBaseType. */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 12


 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef AlarmBaseType *AlarmBaseRefType;
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represent a counter object ID. */
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTEROBJECT  CounterObjectType;
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter object ID */
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER_OBJECT  ((CounterObjectType)-1)
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an action ID. */
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEACTION ActionType;
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an alarm ID. */
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEALARM AlarmType;
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid alarm */
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ALARM ((AlarmType)-1)
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This is an additional data type that represents a counter ID. */
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTER CounterType;
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter */
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER ((CounterType)-1)
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: depends on configuration */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        maxallowedvalue;
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        ticksperbase;
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        mincycle;
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this counter belong to. */
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType ApplID;
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_ROM_type;
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: {0, -1} */
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          value;  /**< current value of the counter */
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType first;  /**< first object queued on the counter */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_RAM_type;
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Add supplementary support info for hardware counters */
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType microsecondspertick;
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_hw_ROM_type;
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter objects */
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ALARM,
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_SCHEDULETABLE
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_kind_type;
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_counter_object_kind_type CounterObjectKindType;
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 13


 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The counter this counter is linked to */
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType           c;
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** ID specialized Id (In Alarm or Schedule Tables List) */
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType     spec_id;
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** Which kind of Counter Object is this */
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectKindType kind;
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_ROM_type;
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TYPEBOOL       used;     /**< a flag that is 1 when the alarm is armed */
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          cntcycle; /**< cycle for periodic alarms */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          delta;    /**< delta expiration time (into a queue!) */
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType next;     /**< next counter object in the delta queue */
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_RAM_type;
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter object actions */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_TASK      = 0U,
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_EVENT     = 1U,
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_COUNTER   = 2U,
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_CALLBACK  = 3U
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_kind_type;
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_action_kind_type ActionKindType;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** This data structure represent an counter object action */
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionKindType    action_kind;
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TaskType          action_task;
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EventMaskType     action_mask;
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_VOID_CALLBACK  f;
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Counter to increment when the alarm expire.*/
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType       inccount;
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_ROM_type;
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the action that have to be executed when this alarm expire */
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionType        action_id;
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this alarm belong to. */
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType   ApplID;
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_alarm_ROM_type;
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This array contains, for each counter, the characteristics of the counter.
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The initialization value is implementation dependent */
 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_ROM_SIZE)
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if EE_COUNTER_ROM_SIZE > 0
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_ROM_type EE_counter_ROM[EE_COUNTER_ROM_SIZE];
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 14


 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Add supplementary support info for HARDWARE counters.
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    This array contains, for each HARDWARE counter, the supplementary
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    characteristics of the counter.The initialization value is implementation
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    dependent */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_hw_ROM_type
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_counter_hw_ROM[EE_COUNTER_HW_ROM_SIZE];
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the fixed part of a counter object.
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm or the schedule table represented by this
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_object_ROM_type
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_ROM[EE_COUNTER_OBJECTS_ROM_SIZE];
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part represent the list of the configured actions.
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarms and the schedule tables have been
 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ACTION_ROM_SIZE)
 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ACTION_ROM_SIZE > 0)
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_action_ROM_type EE_oo_action_ROM[EE_ACTION_ROM_SIZE];
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this is the fixed part of the configuration of an alarm
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm have been configured */
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ALARM_ROM_SIZE)
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ALARM_ROM_SIZE > 0)
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_alarm_ROM_type   EE_alarm_ROM[EE_ALARM_ROM_SIZE];
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the RAM part of a counter.
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initialization value = an array of {0,-1} elements */
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_RAM_type       EE_counter_RAM[EE_MAX_COUNTER];
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the variable part of a counter object.
 766:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: all zeros. Note that setting the next value to 0 and
 767:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not -1 does not give problems because used=0; the next field will
 768:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be set by counter_object_insert when inserting the alarm in the queue */
 769:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 770:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 771:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_object_RAM_type
 772:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_RAM[EE_COUNTER_OBJECTS_ROM_SIZE];
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 15


 773:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 774:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 775:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 776:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 777:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 778:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 779:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 780:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 781:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 782:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 783:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 784:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 785:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.7 Operating system execution control
 786:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 787:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 788:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.7.1 Data types                                                       */
 789:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 790:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 791:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type represents the application mode. */
 792:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEAPPMODE AppModeType;
 793:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 794:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 795:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 796:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 797:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 798:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 3.2 (Bindings). StatusType is an unsigned char */
 799:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef STATUSTYPEDEFINED
 800:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define STATUSTYPEDEFINED
 801:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef unsigned char StatusType;
 802:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OK                        ((StatusType)0U)
 803:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 804:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 805:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ACCESS                 ((StatusType)1U)
 806:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CALLEVEL               ((StatusType)2U)
 807:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ID                     ((StatusType)3U)
 808:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_LIMIT                  ((StatusType)4U)
 809:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NOFUNC                 ((StatusType)5U)
 810:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_RESOURCE               ((StatusType)6U)
 811:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STATE                  ((StatusType)7U)
 812:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_VALUE                  ((StatusType)8U)
 813:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SERVICEID              ((StatusType)9U)
 814:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ILLEGAL_ADDRESS        ((StatusType)10U)
 815:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_MISSINGEND             ((StatusType)11U)
 816:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_DISABLEDINT            ((StatusType)12U)
 817:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STACKFAULT             ((StatusType)13U)
 818:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PARAM_POINTER          ((StatusType)14U)
 819:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_MEMORY      ((StatusType)15U)
 820:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_TIME        ((StatusType)16U)
 821:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_ARRIVAL     ((StatusType)17U)
 822:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_LOCKED      ((StatusType)18U)
 823:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_EXCEPTION   ((StatusType)19U)
 824:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Spinlocks errors */
 825:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SPINLOCK               ((StatusType)20U)
 826:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_INTERFERENCE_DEADLOCK  ((StatusType)21U)
 827:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NESTING_DEADLOCK       ((StatusType)22U)
 828:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RPC errors */
 829:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CORE                   ((StatusType)23U)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 16


 830:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 831:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Implementation specific errors: they must start with E_OS_SYS_ */
 832:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Error during StartOS */
 833:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SYS_INIT               ((StatusType)24U)
 834:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 835:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 836:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ORTI support
 837:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 838:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 839:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 840:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 841:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 842:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_START_SEC_VAR_NOINIT
 843:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 844:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 845:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 846:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_LASTERROR__
 847:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 848:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a lasterror value that can be used with ORTI */
 849:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern StatusType EE_ORTI_lasterror;
 850:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Macro to set lasterror value that can be used with ORTI */
 851:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_lasterror ( StatusType err ) {
 852:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_lasterror = err;
 853:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 854:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_LASTERROR__ */
 855:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 856:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_ORTI_set_lasterror(ERR) ((void)0)
 857:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif  /* __OO_ORTI_LASTERROR__ */
 858:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 859:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the last OO service called by the application.  SERVICETRACE IDs
 860:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are even numbers. The LSBit is used as a flag and it is set to 1
 861:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    when the servce is entered, to 0 at exit.
 862:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 863:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 864:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ACTIVATETASK              2U
 865:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TERMINATETASK             4U
 866:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CHAINTASK                 6U
 867:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SCHEDULE                  8U
 868:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKID                 10U
 869:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKSTATE              12U
 870:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_DISABLEALLINTERRUPTS      14U
 871:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ENABLEALLINTERRUPTS       16U
 872:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDALLINTERRUPTS      18U
 873:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEALLINTERRUPTS       20U
 874:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDOSINTERRUPTS       22U
 875:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEOSINTERRUPTS        24U
 876:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETRESOURCE               26U
 877:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RELEASERESOURCE           28U
 878:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETEVENT                  30U
 879:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CLEAREVENT                32U
 880:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETEVENT                  34U
 881:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITEVENT                 36U
 882:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARMBASE              38U
 883:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARM                  40U
 884:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETRELALARM               42U
 885:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETABSALARM               44U
 886:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CANCELALARM               46U
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 17


 887:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETACTIVEAPPLICATIONMODE  48U
 888:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_STARTOS                   50U
 889:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SHUTDOWNOS                52U
 890:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_FORCESCHEDULE             54U
 891:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INCREMENTCOUNTER          56U
 892:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETCOUNTERVALUE           58U
 893:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETELAPSEDVALUE           60U
 894:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 895:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
 896:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INITSEM                   62U
 897:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITSEM                   64U
 898:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TRYWAITSEM                66U
 899:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_POSTSEM                   68U
 900:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETVALUESEM               70U
 901:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   72U
 902:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_SEM__ */
 903:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   62U
 904:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
 905:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 906:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_SERVICETRACE__
 907:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern volatile EE_UINT8 EE_ORTI_servicetrace;
 908:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 909:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void EE_ORTI_set_service(EE_UINT8 srv)
 910:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 911:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_servicetrace = srv;
 912:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_USE_OTM__
 913:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_send_otm_servicetrace(srv);
 914:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ORTI_USE_OTM__ */
 915:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 916:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 917:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_SERVICETRACE__ */
 918:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 919:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service(EE_UINT8 srv) {}
 920:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 921:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* else __OO_ORTI_SERVICETRACE__ */
 922:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 923:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 924:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 925:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 926:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_STOP_SEC_VAR_NOINIT
 927:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 928:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 929:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 930:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Mapping for ORTI service In and Out */
 931:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_in (EE_UINT8 id)
 932:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 933:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id + 1U);
 934:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 935:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 936:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_out (EE_UINT8 id)
 937:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 938:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id);
 939:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 940:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 941:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 942:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 943:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 18


 944:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 945:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 946:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 947:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 948:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_PRIORITY__
 949:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This flag enables the visualization of the current task priority in ORTI
 950:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    debuggers. */
 951:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 952:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority and that is the priority
 953:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    that is read by the ORTI debugger
 954:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: the ready priority set for the task
 955:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 956:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_th_priority[EE_MAX_TASK];
 957:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 958:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority saved when a task
 959:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked a resource. It works because a resource can be
 960:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked only by one task at a time.
 961:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    InitValue: all 0
 962:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 963:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 964:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_resource_oldpriority[EE_MAX_RESOURCE];
 965:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_RESOURCE && EE_MAX_RESOURCE > 0U */
 966:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 967:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp)
 968:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 969:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_th_priority[tmp] = EE_th_dispatch_prio[tmp];
 970:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 971:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 972:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index,
 973:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_TYPEPRIO prio)
 974:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 975:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_ORTI_th_priority[index] = prio;
 976:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 977:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 978:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp) {}
 979:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index, EE_TYPEPRIO prio) {}
 980:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_ORTI_PRIORITY__ */
 981:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 982:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 983:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 984:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 985:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 986:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 987:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 988:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 989:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Semaphores
 990:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 991:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 992:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Semaphores are not part of the OSEK API, please refer to the EE
 993:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    reference manual */
 994:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constants                                                               */
 995:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 996:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 997:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the maximum unsigned integer */
 998:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MAX_SEM_COUNTER ((EE_UREG)-1)
 999:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1000:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data types                                                              */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 19


1001:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
1002:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
1003:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1004:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_TYPESEM {
1005:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG   count;
1006:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_ECC1__) || defined(__OO_ECC2__)
1007:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    first;
1008:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    last;
1009:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
1010:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1011:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1012:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
1013:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct EE_TYPESEM  SemType;
1014:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1015:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
1016:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef SemType *SemRefType;
1017:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1018:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
1019:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1020:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
1021:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Autostart Features inside StartOS()
1022:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
1023:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1024:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: Autostart uses the symbol EE_MAX_APPMODE that represents
1025:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of different application modes in the system. */
1026:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1027:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_TASK__
1028:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1029:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for tasks.
1030:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1031:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of tasks that have to be automatically
1032:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      activated at startup for a given application mode.
1033:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1034:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - task contains the list of TIDs that have to be activated for a
1035:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1036:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1037:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1038:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_task_type {
1039:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG nt;
1040:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TID (*task)[]; /* pointer to array of TIDs */
1041:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1042:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1043:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1044:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1045:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_task_type
1046:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_task_data[EE_MAX_APPMODE];
1047:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1048:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1049:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1050:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_ALARM__
1051:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1052:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for alarms.
1053:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1054:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of alarms that have to be automatically
1055:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      set at startup for a given application mode.
1056:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1057:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - alarm contains the list of Alarm IDs that have to be activated for a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 20


1058:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1059:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1060:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1061:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_alarm_type {
1062:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG na;
1063:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TYPEALARM (*alarm)[];
1064:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1065:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1066:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1067:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1068:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_alarm_type
1069:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_alarm_data[EE_MAX_APPMODE];
1070:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1071:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each Alarm that is activated there should be an item in these
1072:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    arrays that contains the cycle and increment values that have to be
1073:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    used when activating a given alarm ID. Note that cycle/increment
1074:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are unique for each alarm activation time.
1075:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The size of these two arrays is MAXALARM.
1076:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1077:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_increment[EE_MAX_ALARM];
1078:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_cycle[EE_MAX_ALARM];
1079:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1080:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1081:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __MSRP__
1082:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*******************************************************************************
1083:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *               Autosar Multicore support Type Declarations
1084:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ******************************************************************************/
1085:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*  The following type declarations are added here and not inside AS kernel
1086:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     because i need "TryToGetSpinlockType *" to completely define EE_os_param
1087:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     type (used inside Error parameters structure).
1088:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     The problem is that theoretically there is not in C such a thing as
1089:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     "standard pointer dimension" but each pointer COULD HAVE his own dimension
1090:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     (it never happens... Actually the 99% of architectures has pointer and
1091:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     value registers with same dimension). */
1092:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1093:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOREID CoreIdType;
1094:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1095:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_USER_SPINLOCKS__
1096:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESPIN   SpinlockIdType;
1097:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_SPINLOCK ((SpinlockIdType)-1)
1098:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1099:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_NOSUCCESS = 0x0,
1101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_SUCCESS
1102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } TryToGetSpinlockType;
1103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  EE_AS_USER_SPINLOCKS__ */
1104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __MSRP__ */
1105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*[OS088] If an OS-Application makes a service call from the wrong context AND
1107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   is currently not inside a Category 1 ISR the Operating System module shall
1108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   not perform the requested action (the service call shall have no effect),
1109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   and return E_OS_CALLEVEL (see [12], section 13.1) or the "invalid value" of
1110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   the service. (BSW11009, BSW11013) */
1111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef OS-Application contexts enum used to implement Autosar OS O0S88
1112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     requirement */
1113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Kernel_Context,
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 21


1115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TASK_Context,
1116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ISR2_Context,
1117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ErrorHook_Context,
1118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ProtectionHook_Context,
1119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PreTaskHook_Context,
1120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PostTaskHook_Context,
1121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   StartupHook_Context,
1122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ShutdownHook_Context,
1123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   AlarmCallback_Context,
1124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Idle_Context
1125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_TYPECONTEXT;
1126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SERVICE_PROTECTION__
1128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
1131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
1132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @var used by the kernel to flag in witch context is executing */
1136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPECONTEXT EE_as_execution_context;
1137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
1141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ EE_TYPECONTEXT  EE_as_get_execution_context( void )
1145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   return EE_as_execution_context;
1147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx )
1151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_as_execution_context = ctx;
1153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* EE_SERVICE_PROTECTION__ */
1155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_as_get_execution_context()     Kernel_Context
1156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx ) {
  27              		.loc 1 1157 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 0346     		mov	r3, r0
  40 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 22


1158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Unusefull operation to meet Linters requirements */
1159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   (void)ctx;
1160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
  41              		.loc 1 1160 0
  42 000a 00BF     		nop
  43 000c 0C37     		adds	r7, r7, #12
  44              		.cfi_def_cfa_offset 4
  45 000e BD46     		mov	sp, r7
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 0010 80BC     		pop	{r7}
  49              		.cfi_restore 7
  50              		.cfi_def_cfa_offset 0
  51 0012 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE41:
  54              		.size	EE_as_set_execution_context, .-EE_as_set_execution_context
  55              		.section	.text.EE_stk_queryfirst,"ax",%progbits
  56              		.align	2
  57              		.thumb
  58              		.thumb_func
  59              		.type	EE_stk_queryfirst, %function
  60              	EE_stk_queryfirst:
  61              	.LFB53:
  62              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 23


  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 24


  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 25


 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 26


 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
  63              		.loc 2 239 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 80B4     		push	{r7}
  69              		.cfi_def_cfa_offset 4
  70              		.cfi_offset 7, -4
  71 0002 00AF     		add	r7, sp, #0
  72              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  73              		.loc 2 240 0
  74 0004 024B     		ldr	r3, .L4
  75 0006 1B68     		ldr	r3, [r3]
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
  76              		.loc 2 241 0
  77 0008 1846     		mov	r0, r3
  78 000a BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000c 80BC     		pop	{r7}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 27


  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 000e 7047     		bx	lr
  85              	.L5:
  86              		.align	2
  87              	.L4:
  88 0010 00000000 		.word	EE_stkfirst
  89              		.cfi_endproc
  90              	.LFE53:
  91              		.size	EE_stk_queryfirst, .-EE_stk_queryfirst
  92              		.section	.text.EE_oo_call_PreTaskHook,"ax",%progbits
  93              		.align	2
  94              		.thumb
  95              		.thumb_func
  96              		.type	EE_oo_call_PreTaskHook, %function
  97              	EE_oo_call_PreTaskHook:
  98              	.LFB57:
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 28


 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 29


 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 30


 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
  99              		.loc 2 398 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 00AF     		add	r7, sp, #0
 108              		.cfi_def_cfa_register 7
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 109              		.loc 2 400 0
 110 0004 0120     		movs	r0, #1
 111 0006 FFF7FEFF 		bl	EE_as_set_execution_context
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 112              		.loc 2 401 0
 113 000a 00BF     		nop
 114 000c 80BD     		pop	{r7, pc}
 115              		.cfi_endproc
 116              	.LFE57:
 117              		.size	EE_oo_call_PreTaskHook, .-EE_oo_call_PreTaskHook
 118 000e 00BF     		.section	.text.EE_oo_thread_stub,"ax",%progbits
 119              		.align	2
 120              		.global	EE_oo_thread_stub
 121              		.thumb
 122              		.thumb_func
 123              		.type	EE_oo_thread_stub, %function
 124              	EE_oo_thread_stub:
 125              	.LFB70:
 126              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_tstub.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * independent module, the terms and conditions of the license of that
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 31


  24:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * CVS: $Id: ee_tstub.c,v 1.1 2005/07/16 12:23:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** /* TerminateStub:
  56:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****    - This is the function that is called as the "real thread body" of 
  57:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****      an OO task.
  58:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****    - This function is not called if a task use only a terminate_task at 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****      the end of the thread. In some architectures, this can lead 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****      to some stack savings...
  61:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** */
  62:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  64:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #include "trcKernelPort.h"
  65:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #endif
  66:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #ifndef __PRIVATE_THREADSTUB__
  68:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** void EE_oo_thread_stub(void)
  69:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** {
 127              		.loc 3 69 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131 0000 98B5     		push	{r3, r4, r7, lr}
 132              		.cfi_def_cfa_offset 16
 133              		.cfi_offset 3, -16
 134              		.cfi_offset 4, -12
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 32


 138              		.cfi_def_cfa_register 7
  70:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   register EE_TID temp;
  71:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  72:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  73:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
  74:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
  75:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** #endif
  76:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   EE_oo_call_PreTaskHook();
 139              		.loc 3 77 0
 140 0004 FFF7FEFF 		bl	EE_oo_call_PreTaskHook
  78:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  79:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   temp = EE_stk_queryfirst();
 141              		.loc 3 79 0
 142 0008 FFF7FEFF 		bl	EE_stk_queryfirst
 143 000c 0446     		mov	r4, r0
  80:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   EE_hal_terminate_savestk(temp);
 144              		.loc 3 81 0
 145 000e 2046     		mov	r0, r4
 146 0010 FFF7FEFF 		bl	EE_hal_terminate_savestk
  82:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** 
  83:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   /* NOTE:
  84:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****      It is not specified if at this point the system runs or not 
  85:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****      with interrupts disabled.
  86:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c ****   */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_tstub.c **** }
 147              		.loc 3 87 0
 148 0014 00BF     		nop
 149 0016 98BD     		pop	{r3, r4, r7, pc}
 150              		.cfi_endproc
 151              	.LFE70:
 152              		.size	EE_oo_thread_stub, .-EE_oo_thread_stub
 153              		.text
 154              	.Letext0:
 155              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 156              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 157              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 158              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
 159              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 160              		.section	.debug_info,"",%progbits
 161              	.Ldebug_info0:
 162 0000 8F040000 		.4byte	0x48f
 163 0004 0400     		.2byte	0x4
 164 0006 00000000 		.4byte	.Ldebug_abbrev0
 165 000a 04       		.byte	0x4
 166 000b 01       		.uleb128 0x1
 167 000c A0000000 		.4byte	.LASF74
 168 0010 0C       		.byte	0xc
 169 0011 58050000 		.4byte	.LASF75
 170 0015 04040000 		.4byte	.LASF76
 171 0019 00000000 		.4byte	.Ldebug_ranges0+0
 172 001d 00000000 		.4byte	0
 173 0021 00000000 		.4byte	.Ldebug_line0
 174 0025 02       		.uleb128 0x2
 175 0026 01       		.byte	0x1
 176 0027 06       		.byte	0x6
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 33


 177 0028 56030000 		.4byte	.LASF0
 178 002c 02       		.uleb128 0x2
 179 002d 01       		.byte	0x1
 180 002e 08       		.byte	0x8
 181 002f 2F030000 		.4byte	.LASF1
 182 0033 02       		.uleb128 0x2
 183 0034 02       		.byte	0x2
 184 0035 05       		.byte	0x5
 185 0036 7E000000 		.4byte	.LASF2
 186 003a 02       		.uleb128 0x2
 187 003b 02       		.byte	0x2
 188 003c 07       		.byte	0x7
 189 003d D3030000 		.4byte	.LASF3
 190 0041 02       		.uleb128 0x2
 191 0042 04       		.byte	0x4
 192 0043 05       		.byte	0x5
 193 0044 6B020000 		.4byte	.LASF4
 194 0048 02       		.uleb128 0x2
 195 0049 04       		.byte	0x4
 196 004a 07       		.byte	0x7
 197 004b AA040000 		.4byte	.LASF5
 198 004f 02       		.uleb128 0x2
 199 0050 08       		.byte	0x8
 200 0051 05       		.byte	0x5
 201 0052 1B020000 		.4byte	.LASF6
 202 0056 02       		.uleb128 0x2
 203 0057 08       		.byte	0x8
 204 0058 07       		.byte	0x7
 205 0059 62030000 		.4byte	.LASF7
 206 005d 03       		.uleb128 0x3
 207 005e 04       		.byte	0x4
 208 005f 05       		.byte	0x5
 209 0060 696E7400 		.ascii	"int\000"
 210 0064 02       		.uleb128 0x2
 211 0065 04       		.byte	0x4
 212 0066 07       		.byte	0x7
 213 0067 8B030000 		.4byte	.LASF8
 214 006b 02       		.uleb128 0x2
 215 006c 08       		.byte	0x8
 216 006d 04       		.byte	0x4
 217 006e FF020000 		.4byte	.LASF9
 218 0072 04       		.uleb128 0x4
 219 0073 29020000 		.4byte	.LASF10
 220 0077 04       		.byte	0x4
 221 0078 3F       		.byte	0x3f
 222 0079 25000000 		.4byte	0x25
 223 007d 04       		.uleb128 0x4
 224 007e 60040000 		.4byte	.LASF11
 225 0082 04       		.byte	0x4
 226 0083 52       		.byte	0x52
 227 0084 3A000000 		.4byte	0x3a
 228 0088 04       		.uleb128 0x4
 229 0089 BD030000 		.4byte	.LASF12
 230 008d 04       		.byte	0x4
 231 008e 53       		.byte	0x53
 232 008f 5D000000 		.4byte	0x5d
 233 0093 04       		.uleb128 0x4
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 34


 234 0094 5B010000 		.4byte	.LASF13
 235 0098 04       		.byte	0x4
 236 0099 54       		.byte	0x54
 237 009a 64000000 		.4byte	0x64
 238 009e 04       		.uleb128 0x4
 239 009f 22000000 		.4byte	.LASF14
 240 00a3 05       		.byte	0x5
 241 00a4 4D       		.byte	0x4d
 242 00a5 93000000 		.4byte	0x93
 243 00a9 04       		.uleb128 0x4
 244 00aa 2E010000 		.4byte	.LASF15
 245 00ae 05       		.byte	0x5
 246 00af 4F       		.byte	0x4f
 247 00b0 93000000 		.4byte	0x93
 248 00b4 04       		.uleb128 0x4
 249 00b5 BC040000 		.4byte	.LASF16
 250 00b9 05       		.byte	0x5
 251 00ba 54       		.byte	0x54
 252 00bb 9E000000 		.4byte	0x9e
 253 00bf 04       		.uleb128 0x4
 254 00c0 83010000 		.4byte	.LASF17
 255 00c4 05       		.byte	0x5
 256 00c5 78       		.byte	0x78
 257 00c6 88000000 		.4byte	0x88
 258 00ca 05       		.uleb128 0x5
 259 00cb 4A020000 		.4byte	.LASF18
 260 00cf 01       		.byte	0x1
 261 00d0 1101     		.2byte	0x111
 262 00d2 7D000000 		.4byte	0x7d
 263 00d6 05       		.uleb128 0x5
 264 00d7 D5020000 		.4byte	.LASF19
 265 00db 01       		.byte	0x1
 266 00dc 3502     		.2byte	0x235
 267 00de 9E000000 		.4byte	0x9e
 268 00e2 05       		.uleb128 0x5
 269 00e3 ED020000 		.4byte	.LASF20
 270 00e7 01       		.byte	0x1
 271 00e8 5D02     		.2byte	0x25d
 272 00ea 9E000000 		.4byte	0x9e
 273 00ee 05       		.uleb128 0x5
 274 00ef 2B050000 		.4byte	.LASF21
 275 00f3 01       		.byte	0x1
 276 00f4 6C02     		.2byte	0x26c
 277 00f6 9E000000 		.4byte	0x9e
 278 00fa 06       		.uleb128 0x6
 279 00fb 0C       		.byte	0xc
 280 00fc 01       		.byte	0x1
 281 00fd 7202     		.2byte	0x272
 282 00ff 2B010000 		.4byte	0x12b
 283 0103 07       		.uleb128 0x7
 284 0104 74020000 		.4byte	.LASF22
 285 0108 01       		.byte	0x1
 286 0109 7302     		.2byte	0x273
 287 010b D6000000 		.4byte	0xd6
 288 010f 00       		.byte	0
 289 0110 07       		.uleb128 0x7
 290 0111 59000000 		.4byte	.LASF23
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 35


 291 0115 01       		.byte	0x1
 292 0116 7402     		.2byte	0x274
 293 0118 D6000000 		.4byte	0xd6
 294 011c 04       		.byte	0x4
 295 011d 07       		.uleb128 0x7
 296 011e 8A010000 		.4byte	.LASF24
 297 0122 01       		.byte	0x1
 298 0123 7502     		.2byte	0x275
 299 0125 D6000000 		.4byte	0xd6
 300 0129 08       		.byte	0x8
 301 012a 00       		.byte	0
 302 012b 05       		.uleb128 0x5
 303 012c A2020000 		.4byte	.LASF25
 304 0130 01       		.byte	0x1
 305 0131 7A02     		.2byte	0x27a
 306 0133 FA000000 		.4byte	0xfa
 307 0137 06       		.uleb128 0x6
 308 0138 08       		.byte	0x8
 309 0139 01       		.byte	0x1
 310 013a 7D02     		.2byte	0x27d
 311 013c 5B010000 		.4byte	0x15b
 312 0140 07       		.uleb128 0x7
 313 0141 93010000 		.4byte	.LASF26
 314 0145 01       		.byte	0x1
 315 0146 7E02     		.2byte	0x27e
 316 0148 D6000000 		.4byte	0xd6
 317 014c 00       		.byte	0
 318 014d 07       		.uleb128 0x7
 319 014e D0050000 		.4byte	.LASF27
 320 0152 01       		.byte	0x1
 321 0153 7F02     		.2byte	0x27f
 322 0155 E2000000 		.4byte	0xe2
 323 0159 04       		.byte	0x4
 324 015a 00       		.byte	0
 325 015b 05       		.uleb128 0x5
 326 015c F7010000 		.4byte	.LASF28
 327 0160 01       		.byte	0x1
 328 0161 8002     		.2byte	0x280
 329 0163 37010000 		.4byte	0x137
 330 0167 08       		.uleb128 0x8
 331 0168 01       		.byte	0x1
 332 0169 2C000000 		.4byte	0x2c
 333 016d 01       		.byte	0x1
 334 016e 8A02     		.2byte	0x28a
 335 0170 81010000 		.4byte	0x181
 336 0174 09       		.uleb128 0x9
 337 0175 FF040000 		.4byte	.LASF29
 338 0179 00       		.byte	0
 339 017a 09       		.uleb128 0x9
 340 017b 5A020000 		.4byte	.LASF30
 341 017f 01       		.byte	0x1
 342 0180 00       		.byte	0
 343 0181 05       		.uleb128 0x5
 344 0182 C3010000 		.4byte	.LASF31
 345 0186 01       		.byte	0x1
 346 0187 8D02     		.2byte	0x28d
 347 0189 67010000 		.4byte	0x167
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 36


 348 018d 05       		.uleb128 0x5
 349 018e 45010000 		.4byte	.LASF32
 350 0192 01       		.byte	0x1
 351 0193 9002     		.2byte	0x290
 352 0195 81010000 		.4byte	0x181
 353 0199 06       		.uleb128 0x6
 354 019a 0C       		.byte	0xc
 355 019b 01       		.byte	0x1
 356 019c 9402     		.2byte	0x294
 357 019e C8010000 		.4byte	0x1c8
 358 01a2 0A       		.uleb128 0xa
 359 01a3 6300     		.ascii	"c\000"
 360 01a5 01       		.byte	0x1
 361 01a6 9602     		.2byte	0x296
 362 01a8 EE000000 		.4byte	0xee
 363 01ac 00       		.byte	0
 364 01ad 07       		.uleb128 0x7
 365 01ae 80040000 		.4byte	.LASF33
 366 01b2 01       		.byte	0x1
 367 01b3 9802     		.2byte	0x298
 368 01b5 E2000000 		.4byte	0xe2
 369 01b9 04       		.byte	0x4
 370 01ba 07       		.uleb128 0x7
 371 01bb 00000000 		.4byte	.LASF34
 372 01bf 01       		.byte	0x1
 373 01c0 9A02     		.2byte	0x29a
 374 01c2 8D010000 		.4byte	0x18d
 375 01c6 08       		.byte	0x8
 376 01c7 00       		.byte	0
 377 01c8 05       		.uleb128 0x5
 378 01c9 E6030000 		.4byte	.LASF35
 379 01cd 01       		.byte	0x1
 380 01ce 9B02     		.2byte	0x29b
 381 01d0 99010000 		.4byte	0x199
 382 01d4 06       		.uleb128 0x6
 383 01d5 10       		.byte	0x10
 384 01d6 01       		.byte	0x1
 385 01d7 9F02     		.2byte	0x29f
 386 01d9 12020000 		.4byte	0x212
 387 01dd 07       		.uleb128 0x7
 388 01de 1D050000 		.4byte	.LASF36
 389 01e2 01       		.byte	0x1
 390 01e3 A002     		.2byte	0x2a0
 391 01e5 B4000000 		.4byte	0xb4
 392 01e9 00       		.byte	0
 393 01ea 07       		.uleb128 0x7
 394 01eb 96050000 		.4byte	.LASF37
 395 01ef 01       		.byte	0x1
 396 01f0 A102     		.2byte	0x2a1
 397 01f2 D6000000 		.4byte	0xd6
 398 01f6 04       		.byte	0x4
 399 01f7 07       		.uleb128 0x7
 400 01f8 9A000000 		.4byte	.LASF38
 401 01fc 01       		.byte	0x1
 402 01fd A202     		.2byte	0x2a2
 403 01ff D6000000 		.4byte	0xd6
 404 0203 08       		.byte	0x8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 37


 405 0204 07       		.uleb128 0x7
 406 0205 BE050000 		.4byte	.LASF39
 407 0209 01       		.byte	0x1
 408 020a A302     		.2byte	0x2a3
 409 020c E2000000 		.4byte	0xe2
 410 0210 0C       		.byte	0xc
 411 0211 00       		.byte	0
 412 0212 05       		.uleb128 0x5
 413 0213 84020000 		.4byte	.LASF40
 414 0217 01       		.byte	0x1
 415 0218 A402     		.2byte	0x2a4
 416 021a D4010000 		.4byte	0x1d4
 417 021e 08       		.uleb128 0x8
 418 021f 01       		.byte	0x1
 419 0220 2C000000 		.4byte	0x2c
 420 0224 01       		.byte	0x1
 421 0225 5904     		.2byte	0x459
 422 0227 6E020000 		.4byte	0x26e
 423 022b 09       		.uleb128 0x9
 424 022c 05000000 		.4byte	.LASF41
 425 0230 00       		.byte	0
 426 0231 09       		.uleb128 0x9
 427 0232 C6030000 		.4byte	.LASF42
 428 0236 01       		.byte	0x1
 429 0237 09       		.uleb128 0x9
 430 0238 76010000 		.4byte	.LASF43
 431 023c 02       		.byte	0x2
 432 023d 09       		.uleb128 0x9
 433 023e 88000000 		.4byte	.LASF44
 434 0242 03       		.byte	0x3
 435 0243 09       		.uleb128 0x9
 436 0244 D4040000 		.4byte	.LASF45
 437 0248 04       		.byte	0x4
 438 0249 09       		.uleb128 0x9
 439 024a EB040000 		.4byte	.LASF46
 440 024e 05       		.byte	0x5
 441 024f 09       		.uleb128 0x9
 442 0250 08050000 		.4byte	.LASF47
 443 0254 06       		.byte	0x6
 444 0255 09       		.uleb128 0x9
 445 0256 AA050000 		.4byte	.LASF48
 446 025a 07       		.byte	0x7
 447 025b 09       		.uleb128 0x9
 448 025c 1A030000 		.4byte	.LASF49
 449 0260 08       		.byte	0x8
 450 0261 09       		.uleb128 0x9
 451 0262 6A040000 		.4byte	.LASF50
 452 0266 09       		.byte	0x9
 453 0267 09       		.uleb128 0x9
 454 0268 0E020000 		.4byte	.LASF51
 455 026c 0A       		.byte	0xa
 456 026d 00       		.byte	0
 457 026e 05       		.uleb128 0x5
 458 026f 36010000 		.4byte	.LASF52
 459 0273 01       		.byte	0x1
 460 0274 6504     		.2byte	0x465
 461 0276 1E020000 		.4byte	0x21e
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 38


 462 027a 0B       		.uleb128 0xb
 463 027b B9020000 		.4byte	.LASF77
 464 027f 01       		.byte	0x1
 465 0280 8404     		.2byte	0x484
 466 0282 00000000 		.4byte	.LFB41
 467 0286 14000000 		.4byte	.LFE41-.LFB41
 468 028a 01       		.uleb128 0x1
 469 028b 9C       		.byte	0x9c
 470 028c A0020000 		.4byte	0x2a0
 471 0290 0C       		.uleb128 0xc
 472 0291 63747800 		.ascii	"ctx\000"
 473 0295 01       		.byte	0x1
 474 0296 8504     		.2byte	0x485
 475 0298 6E020000 		.4byte	0x26e
 476 029c 02       		.uleb128 0x2
 477 029d 91       		.byte	0x91
 478 029e 77       		.sleb128 -9
 479 029f 00       		.byte	0
 480 02a0 0D       		.uleb128 0xd
 481 02a1 79030000 		.4byte	.LASF78
 482 02a5 02       		.byte	0x2
 483 02a6 EE       		.byte	0xee
 484 02a7 BF000000 		.4byte	0xbf
 485 02ab 00000000 		.4byte	.LFB53
 486 02af 14000000 		.4byte	.LFE53-.LFB53
 487 02b3 01       		.uleb128 0x1
 488 02b4 9C       		.byte	0x9c
 489 02b5 0E       		.uleb128 0xe
 490 02b6 42000000 		.4byte	.LASF79
 491 02ba 02       		.byte	0x2
 492 02bb 8D01     		.2byte	0x18d
 493 02bd 00000000 		.4byte	.LFB57
 494 02c1 0E000000 		.4byte	.LFE57-.LFB57
 495 02c5 01       		.uleb128 0x1
 496 02c6 9C       		.byte	0x9c
 497 02c7 0F       		.uleb128 0xf
 498 02c8 84050000 		.4byte	.LASF80
 499 02cc 03       		.byte	0x3
 500 02cd 44       		.byte	0x44
 501 02ce 00000000 		.4byte	.LFB70
 502 02d2 18000000 		.4byte	.LFE70-.LFB70
 503 02d6 01       		.uleb128 0x1
 504 02d7 9C       		.byte	0x9c
 505 02d8 EA020000 		.4byte	0x2ea
 506 02dc 10       		.uleb128 0x10
 507 02dd 79000000 		.4byte	.LASF81
 508 02e1 03       		.byte	0x3
 509 02e2 46       		.byte	0x46
 510 02e3 BF000000 		.4byte	0xbf
 511 02e7 01       		.uleb128 0x1
 512 02e8 54       		.byte	0x54
 513 02e9 00       		.byte	0
 514 02ea 11       		.uleb128 0x11
 515 02eb E2010000 		.4byte	.LASF53
 516 02ef 06       		.byte	0x6
 517 02f0 44       		.byte	0x44
 518 02f1 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 39


 519 02f5 11       		.uleb128 0x11
 520 02f6 A4030000 		.4byte	.LASF54
 521 02fa 07       		.byte	0x7
 522 02fb 48       		.byte	0x48
 523 02fc BF000000 		.4byte	0xbf
 524 0300 12       		.uleb128 0x12
 525 0301 17030000 		.4byte	0x317
 526 0305 10030000 		.4byte	0x310
 527 0309 13       		.uleb128 0x13
 528 030a 10030000 		.4byte	0x310
 529 030e 03       		.byte	0x3
 530 030f 00       		.byte	0
 531 0310 02       		.uleb128 0x2
 532 0311 04       		.byte	0x4
 533 0312 07       		.byte	0x7
 534 0313 22050000 		.4byte	.LASF55
 535 0317 14       		.uleb128 0x14
 536 0318 9E000000 		.4byte	0x9e
 537 031c 11       		.uleb128 0x11
 538 031d 65010000 		.4byte	.LASF56
 539 0321 01       		.byte	0x1
 540 0322 B2       		.byte	0xb2
 541 0323 27030000 		.4byte	0x327
 542 0327 14       		.uleb128 0x14
 543 0328 00030000 		.4byte	0x300
 544 032c 11       		.uleb128 0x11
 545 032d 44050000 		.4byte	.LASF57
 546 0331 01       		.byte	0x1
 547 0332 B3       		.byte	0xb3
 548 0333 37030000 		.4byte	0x337
 549 0337 14       		.uleb128 0x14
 550 0338 00030000 		.4byte	0x300
 551 033c 12       		.uleb128 0x12
 552 033d 9E000000 		.4byte	0x9e
 553 0341 4C030000 		.4byte	0x34c
 554 0345 13       		.uleb128 0x13
 555 0346 10030000 		.4byte	0x310
 556 034a 03       		.byte	0x3
 557 034b 00       		.byte	0
 558 034c 11       		.uleb128 0x11
 559 034d 37050000 		.4byte	.LASF58
 560 0351 01       		.byte	0x1
 561 0352 CA       		.byte	0xca
 562 0353 3C030000 		.4byte	0x33c
 563 0357 12       		.uleb128 0x12
 564 0358 BF000000 		.4byte	0xbf
 565 035c 67030000 		.4byte	0x367
 566 0360 13       		.uleb128 0x13
 567 0361 10030000 		.4byte	0x310
 568 0365 03       		.byte	0x3
 569 0366 00       		.byte	0
 570 0367 11       		.uleb128 0x11
 571 0368 9F050000 		.4byte	.LASF59
 572 036c 01       		.byte	0x1
 573 036d D2       		.byte	0xd2
 574 036e 57030000 		.4byte	0x357
 575 0372 11       		.uleb128 0x11
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 40


 576 0373 98030000 		.4byte	.LASF60
 577 0377 01       		.byte	0x1
 578 0378 DA       		.byte	0xda
 579 0379 3C030000 		.4byte	0x33c
 580 037d 11       		.uleb128 0x11
 581 037e C8040000 		.4byte	.LASF61
 582 0382 01       		.byte	0x1
 583 0383 E2       		.byte	0xe2
 584 0384 BF000000 		.4byte	0xbf
 585 0388 11       		.uleb128 0x11
 586 0389 DE020000 		.4byte	.LASF62
 587 038d 01       		.byte	0x1
 588 038e F7       		.byte	0xf7
 589 038f 9E000000 		.4byte	0x9e
 590 0393 15       		.uleb128 0x15
 591 0394 14000000 		.4byte	.LASF63
 592 0398 01       		.byte	0x1
 593 0399 3F01     		.2byte	0x13f
 594 039b CA000000 		.4byte	0xca
 595 039f 15       		.uleb128 0x15
 596 03a0 66000000 		.4byte	.LASF64
 597 03a4 01       		.byte	0x1
 598 03a5 5C01     		.2byte	0x15c
 599 03a7 3C030000 		.4byte	0x33c
 600 03ab 12       		.uleb128 0x12
 601 03ac B4000000 		.4byte	0xb4
 602 03b0 BB030000 		.4byte	0x3bb
 603 03b4 13       		.uleb128 0x13
 604 03b5 10030000 		.4byte	0x310
 605 03b9 03       		.byte	0x3
 606 03ba 00       		.byte	0
 607 03bb 15       		.uleb128 0x15
 608 03bc 99010000 		.4byte	.LASF65
 609 03c0 01       		.byte	0x1
 610 03c1 6701     		.2byte	0x167
 611 03c3 AB030000 		.4byte	0x3ab
 612 03c7 12       		.uleb128 0x12
 613 03c8 D7030000 		.4byte	0x3d7
 614 03cc D7030000 		.4byte	0x3d7
 615 03d0 13       		.uleb128 0x13
 616 03d1 10030000 		.4byte	0x310
 617 03d5 00       		.byte	0
 618 03d6 00       		.byte	0
 619 03d7 14       		.uleb128 0x14
 620 03d8 2B010000 		.4byte	0x12b
 621 03dc 15       		.uleb128 0x15
 622 03dd 0B030000 		.4byte	.LASF66
 623 03e1 01       		.byte	0x1
 624 03e2 CA02     		.2byte	0x2ca
 625 03e4 E8030000 		.4byte	0x3e8
 626 03e8 14       		.uleb128 0x14
 627 03e9 C7030000 		.4byte	0x3c7
 628 03ed 12       		.uleb128 0x12
 629 03ee FD030000 		.4byte	0x3fd
 630 03f2 FD030000 		.4byte	0x3fd
 631 03f6 13       		.uleb128 0x13
 632 03f7 10030000 		.4byte	0x310
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 41


 633 03fb 00       		.byte	0
 634 03fc 00       		.byte	0
 635 03fd 14       		.uleb128 0x14
 636 03fe C8010000 		.4byte	0x1c8
 637 0402 15       		.uleb128 0x15
 638 0403 AA010000 		.4byte	.LASF67
 639 0407 01       		.byte	0x1
 640 0408 DD02     		.2byte	0x2dd
 641 040a 0E040000 		.4byte	0x40e
 642 040e 14       		.uleb128 0x14
 643 040f ED030000 		.4byte	0x3ed
 644 0413 12       		.uleb128 0x12
 645 0414 5B010000 		.4byte	0x15b
 646 0418 23040000 		.4byte	0x423
 647 041c 13       		.uleb128 0x13
 648 041d 10030000 		.4byte	0x310
 649 0421 00       		.byte	0
 650 0422 00       		.byte	0
 651 0423 15       		.uleb128 0x15
 652 0424 88040000 		.4byte	.LASF68
 653 0428 01       		.byte	0x1
 654 0429 FB02     		.2byte	0x2fb
 655 042b 13040000 		.4byte	0x413
 656 042f 12       		.uleb128 0x12
 657 0430 12020000 		.4byte	0x212
 658 0434 3F040000 		.4byte	0x43f
 659 0438 13       		.uleb128 0x13
 660 0439 10030000 		.4byte	0x310
 661 043d 00       		.byte	0
 662 043e 00       		.byte	0
 663 043f 15       		.uleb128 0x15
 664 0440 3D030000 		.4byte	.LASF69
 665 0444 01       		.byte	0x1
 666 0445 0403     		.2byte	0x304
 667 0447 2F040000 		.4byte	0x42f
 668 044b 11       		.uleb128 0x11
 669 044c 2A000000 		.4byte	.LASF70
 670 0450 08       		.byte	0x8
 671 0451 40       		.byte	0x40
 672 0452 9E000000 		.4byte	0x9e
 673 0456 11       		.uleb128 0x11
 674 0457 31020000 		.4byte	.LASF71
 675 045b 08       		.byte	0x8
 676 045c 47       		.byte	0x47
 677 045d A9000000 		.4byte	0xa9
 678 0461 11       		.uleb128 0x11
 679 0462 97040000 		.4byte	.LASF72
 680 0466 08       		.byte	0x8
 681 0467 4A       		.byte	0x4a
 682 0468 9E000000 		.4byte	0x9e
 683 046c 12       		.uleb128 0x12
 684 046d 7C040000 		.4byte	0x47c
 685 0471 7C040000 		.4byte	0x47c
 686 0475 13       		.uleb128 0x13
 687 0476 10030000 		.4byte	0x310
 688 047a FF       		.byte	0xff
 689 047b 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 42


 690 047c 14       		.uleb128 0x14
 691 047d 72000000 		.4byte	0x72
 692 0481 15       		.uleb128 0x15
 693 0482 C3050000 		.4byte	.LASF73
 694 0486 02       		.byte	0x2
 695 0487 AB01     		.2byte	0x1ab
 696 0489 8D040000 		.4byte	0x48d
 697 048d 14       		.uleb128 0x14
 698 048e 6C040000 		.4byte	0x46c
 699 0492 00       		.byte	0
 700              		.section	.debug_abbrev,"",%progbits
 701              	.Ldebug_abbrev0:
 702 0000 01       		.uleb128 0x1
 703 0001 11       		.uleb128 0x11
 704 0002 01       		.byte	0x1
 705 0003 25       		.uleb128 0x25
 706 0004 0E       		.uleb128 0xe
 707 0005 13       		.uleb128 0x13
 708 0006 0B       		.uleb128 0xb
 709 0007 03       		.uleb128 0x3
 710 0008 0E       		.uleb128 0xe
 711 0009 1B       		.uleb128 0x1b
 712 000a 0E       		.uleb128 0xe
 713 000b 55       		.uleb128 0x55
 714 000c 17       		.uleb128 0x17
 715 000d 11       		.uleb128 0x11
 716 000e 01       		.uleb128 0x1
 717 000f 10       		.uleb128 0x10
 718 0010 17       		.uleb128 0x17
 719 0011 00       		.byte	0
 720 0012 00       		.byte	0
 721 0013 02       		.uleb128 0x2
 722 0014 24       		.uleb128 0x24
 723 0015 00       		.byte	0
 724 0016 0B       		.uleb128 0xb
 725 0017 0B       		.uleb128 0xb
 726 0018 3E       		.uleb128 0x3e
 727 0019 0B       		.uleb128 0xb
 728 001a 03       		.uleb128 0x3
 729 001b 0E       		.uleb128 0xe
 730 001c 00       		.byte	0
 731 001d 00       		.byte	0
 732 001e 03       		.uleb128 0x3
 733 001f 24       		.uleb128 0x24
 734 0020 00       		.byte	0
 735 0021 0B       		.uleb128 0xb
 736 0022 0B       		.uleb128 0xb
 737 0023 3E       		.uleb128 0x3e
 738 0024 0B       		.uleb128 0xb
 739 0025 03       		.uleb128 0x3
 740 0026 08       		.uleb128 0x8
 741 0027 00       		.byte	0
 742 0028 00       		.byte	0
 743 0029 04       		.uleb128 0x4
 744 002a 16       		.uleb128 0x16
 745 002b 00       		.byte	0
 746 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 43


 747 002d 0E       		.uleb128 0xe
 748 002e 3A       		.uleb128 0x3a
 749 002f 0B       		.uleb128 0xb
 750 0030 3B       		.uleb128 0x3b
 751 0031 0B       		.uleb128 0xb
 752 0032 49       		.uleb128 0x49
 753 0033 13       		.uleb128 0x13
 754 0034 00       		.byte	0
 755 0035 00       		.byte	0
 756 0036 05       		.uleb128 0x5
 757 0037 16       		.uleb128 0x16
 758 0038 00       		.byte	0
 759 0039 03       		.uleb128 0x3
 760 003a 0E       		.uleb128 0xe
 761 003b 3A       		.uleb128 0x3a
 762 003c 0B       		.uleb128 0xb
 763 003d 3B       		.uleb128 0x3b
 764 003e 05       		.uleb128 0x5
 765 003f 49       		.uleb128 0x49
 766 0040 13       		.uleb128 0x13
 767 0041 00       		.byte	0
 768 0042 00       		.byte	0
 769 0043 06       		.uleb128 0x6
 770 0044 13       		.uleb128 0x13
 771 0045 01       		.byte	0x1
 772 0046 0B       		.uleb128 0xb
 773 0047 0B       		.uleb128 0xb
 774 0048 3A       		.uleb128 0x3a
 775 0049 0B       		.uleb128 0xb
 776 004a 3B       		.uleb128 0x3b
 777 004b 05       		.uleb128 0x5
 778 004c 01       		.uleb128 0x1
 779 004d 13       		.uleb128 0x13
 780 004e 00       		.byte	0
 781 004f 00       		.byte	0
 782 0050 07       		.uleb128 0x7
 783 0051 0D       		.uleb128 0xd
 784 0052 00       		.byte	0
 785 0053 03       		.uleb128 0x3
 786 0054 0E       		.uleb128 0xe
 787 0055 3A       		.uleb128 0x3a
 788 0056 0B       		.uleb128 0xb
 789 0057 3B       		.uleb128 0x3b
 790 0058 05       		.uleb128 0x5
 791 0059 49       		.uleb128 0x49
 792 005a 13       		.uleb128 0x13
 793 005b 38       		.uleb128 0x38
 794 005c 0B       		.uleb128 0xb
 795 005d 00       		.byte	0
 796 005e 00       		.byte	0
 797 005f 08       		.uleb128 0x8
 798 0060 04       		.uleb128 0x4
 799 0061 01       		.byte	0x1
 800 0062 0B       		.uleb128 0xb
 801 0063 0B       		.uleb128 0xb
 802 0064 49       		.uleb128 0x49
 803 0065 13       		.uleb128 0x13
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 44


 804 0066 3A       		.uleb128 0x3a
 805 0067 0B       		.uleb128 0xb
 806 0068 3B       		.uleb128 0x3b
 807 0069 05       		.uleb128 0x5
 808 006a 01       		.uleb128 0x1
 809 006b 13       		.uleb128 0x13
 810 006c 00       		.byte	0
 811 006d 00       		.byte	0
 812 006e 09       		.uleb128 0x9
 813 006f 28       		.uleb128 0x28
 814 0070 00       		.byte	0
 815 0071 03       		.uleb128 0x3
 816 0072 0E       		.uleb128 0xe
 817 0073 1C       		.uleb128 0x1c
 818 0074 0B       		.uleb128 0xb
 819 0075 00       		.byte	0
 820 0076 00       		.byte	0
 821 0077 0A       		.uleb128 0xa
 822 0078 0D       		.uleb128 0xd
 823 0079 00       		.byte	0
 824 007a 03       		.uleb128 0x3
 825 007b 08       		.uleb128 0x8
 826 007c 3A       		.uleb128 0x3a
 827 007d 0B       		.uleb128 0xb
 828 007e 3B       		.uleb128 0x3b
 829 007f 05       		.uleb128 0x5
 830 0080 49       		.uleb128 0x49
 831 0081 13       		.uleb128 0x13
 832 0082 38       		.uleb128 0x38
 833 0083 0B       		.uleb128 0xb
 834 0084 00       		.byte	0
 835 0085 00       		.byte	0
 836 0086 0B       		.uleb128 0xb
 837 0087 2E       		.uleb128 0x2e
 838 0088 01       		.byte	0x1
 839 0089 03       		.uleb128 0x3
 840 008a 0E       		.uleb128 0xe
 841 008b 3A       		.uleb128 0x3a
 842 008c 0B       		.uleb128 0xb
 843 008d 3B       		.uleb128 0x3b
 844 008e 05       		.uleb128 0x5
 845 008f 27       		.uleb128 0x27
 846 0090 19       		.uleb128 0x19
 847 0091 11       		.uleb128 0x11
 848 0092 01       		.uleb128 0x1
 849 0093 12       		.uleb128 0x12
 850 0094 06       		.uleb128 0x6
 851 0095 40       		.uleb128 0x40
 852 0096 18       		.uleb128 0x18
 853 0097 9742     		.uleb128 0x2117
 854 0099 19       		.uleb128 0x19
 855 009a 01       		.uleb128 0x1
 856 009b 13       		.uleb128 0x13
 857 009c 00       		.byte	0
 858 009d 00       		.byte	0
 859 009e 0C       		.uleb128 0xc
 860 009f 05       		.uleb128 0x5
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 45


 861 00a0 00       		.byte	0
 862 00a1 03       		.uleb128 0x3
 863 00a2 08       		.uleb128 0x8
 864 00a3 3A       		.uleb128 0x3a
 865 00a4 0B       		.uleb128 0xb
 866 00a5 3B       		.uleb128 0x3b
 867 00a6 05       		.uleb128 0x5
 868 00a7 49       		.uleb128 0x49
 869 00a8 13       		.uleb128 0x13
 870 00a9 02       		.uleb128 0x2
 871 00aa 18       		.uleb128 0x18
 872 00ab 00       		.byte	0
 873 00ac 00       		.byte	0
 874 00ad 0D       		.uleb128 0xd
 875 00ae 2E       		.uleb128 0x2e
 876 00af 00       		.byte	0
 877 00b0 03       		.uleb128 0x3
 878 00b1 0E       		.uleb128 0xe
 879 00b2 3A       		.uleb128 0x3a
 880 00b3 0B       		.uleb128 0xb
 881 00b4 3B       		.uleb128 0x3b
 882 00b5 0B       		.uleb128 0xb
 883 00b6 27       		.uleb128 0x27
 884 00b7 19       		.uleb128 0x19
 885 00b8 49       		.uleb128 0x49
 886 00b9 13       		.uleb128 0x13
 887 00ba 11       		.uleb128 0x11
 888 00bb 01       		.uleb128 0x1
 889 00bc 12       		.uleb128 0x12
 890 00bd 06       		.uleb128 0x6
 891 00be 40       		.uleb128 0x40
 892 00bf 18       		.uleb128 0x18
 893 00c0 9742     		.uleb128 0x2117
 894 00c2 19       		.uleb128 0x19
 895 00c3 00       		.byte	0
 896 00c4 00       		.byte	0
 897 00c5 0E       		.uleb128 0xe
 898 00c6 2E       		.uleb128 0x2e
 899 00c7 00       		.byte	0
 900 00c8 03       		.uleb128 0x3
 901 00c9 0E       		.uleb128 0xe
 902 00ca 3A       		.uleb128 0x3a
 903 00cb 0B       		.uleb128 0xb
 904 00cc 3B       		.uleb128 0x3b
 905 00cd 05       		.uleb128 0x5
 906 00ce 27       		.uleb128 0x27
 907 00cf 19       		.uleb128 0x19
 908 00d0 11       		.uleb128 0x11
 909 00d1 01       		.uleb128 0x1
 910 00d2 12       		.uleb128 0x12
 911 00d3 06       		.uleb128 0x6
 912 00d4 40       		.uleb128 0x40
 913 00d5 18       		.uleb128 0x18
 914 00d6 9642     		.uleb128 0x2116
 915 00d8 19       		.uleb128 0x19
 916 00d9 00       		.byte	0
 917 00da 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 46


 918 00db 0F       		.uleb128 0xf
 919 00dc 2E       		.uleb128 0x2e
 920 00dd 01       		.byte	0x1
 921 00de 3F       		.uleb128 0x3f
 922 00df 19       		.uleb128 0x19
 923 00e0 03       		.uleb128 0x3
 924 00e1 0E       		.uleb128 0xe
 925 00e2 3A       		.uleb128 0x3a
 926 00e3 0B       		.uleb128 0xb
 927 00e4 3B       		.uleb128 0x3b
 928 00e5 0B       		.uleb128 0xb
 929 00e6 27       		.uleb128 0x27
 930 00e7 19       		.uleb128 0x19
 931 00e8 11       		.uleb128 0x11
 932 00e9 01       		.uleb128 0x1
 933 00ea 12       		.uleb128 0x12
 934 00eb 06       		.uleb128 0x6
 935 00ec 40       		.uleb128 0x40
 936 00ed 18       		.uleb128 0x18
 937 00ee 9642     		.uleb128 0x2116
 938 00f0 19       		.uleb128 0x19
 939 00f1 01       		.uleb128 0x1
 940 00f2 13       		.uleb128 0x13
 941 00f3 00       		.byte	0
 942 00f4 00       		.byte	0
 943 00f5 10       		.uleb128 0x10
 944 00f6 34       		.uleb128 0x34
 945 00f7 00       		.byte	0
 946 00f8 03       		.uleb128 0x3
 947 00f9 0E       		.uleb128 0xe
 948 00fa 3A       		.uleb128 0x3a
 949 00fb 0B       		.uleb128 0xb
 950 00fc 3B       		.uleb128 0x3b
 951 00fd 0B       		.uleb128 0xb
 952 00fe 49       		.uleb128 0x49
 953 00ff 13       		.uleb128 0x13
 954 0100 02       		.uleb128 0x2
 955 0101 18       		.uleb128 0x18
 956 0102 00       		.byte	0
 957 0103 00       		.byte	0
 958 0104 11       		.uleb128 0x11
 959 0105 34       		.uleb128 0x34
 960 0106 00       		.byte	0
 961 0107 03       		.uleb128 0x3
 962 0108 0E       		.uleb128 0xe
 963 0109 3A       		.uleb128 0x3a
 964 010a 0B       		.uleb128 0xb
 965 010b 3B       		.uleb128 0x3b
 966 010c 0B       		.uleb128 0xb
 967 010d 49       		.uleb128 0x49
 968 010e 13       		.uleb128 0x13
 969 010f 3F       		.uleb128 0x3f
 970 0110 19       		.uleb128 0x19
 971 0111 3C       		.uleb128 0x3c
 972 0112 19       		.uleb128 0x19
 973 0113 00       		.byte	0
 974 0114 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 47


 975 0115 12       		.uleb128 0x12
 976 0116 01       		.uleb128 0x1
 977 0117 01       		.byte	0x1
 978 0118 49       		.uleb128 0x49
 979 0119 13       		.uleb128 0x13
 980 011a 01       		.uleb128 0x1
 981 011b 13       		.uleb128 0x13
 982 011c 00       		.byte	0
 983 011d 00       		.byte	0
 984 011e 13       		.uleb128 0x13
 985 011f 21       		.uleb128 0x21
 986 0120 00       		.byte	0
 987 0121 49       		.uleb128 0x49
 988 0122 13       		.uleb128 0x13
 989 0123 2F       		.uleb128 0x2f
 990 0124 0B       		.uleb128 0xb
 991 0125 00       		.byte	0
 992 0126 00       		.byte	0
 993 0127 14       		.uleb128 0x14
 994 0128 26       		.uleb128 0x26
 995 0129 00       		.byte	0
 996 012a 49       		.uleb128 0x49
 997 012b 13       		.uleb128 0x13
 998 012c 00       		.byte	0
 999 012d 00       		.byte	0
 1000 012e 15       		.uleb128 0x15
 1001 012f 34       		.uleb128 0x34
 1002 0130 00       		.byte	0
 1003 0131 03       		.uleb128 0x3
 1004 0132 0E       		.uleb128 0xe
 1005 0133 3A       		.uleb128 0x3a
 1006 0134 0B       		.uleb128 0xb
 1007 0135 3B       		.uleb128 0x3b
 1008 0136 05       		.uleb128 0x5
 1009 0137 49       		.uleb128 0x49
 1010 0138 13       		.uleb128 0x13
 1011 0139 3F       		.uleb128 0x3f
 1012 013a 19       		.uleb128 0x19
 1013 013b 3C       		.uleb128 0x3c
 1014 013c 19       		.uleb128 0x19
 1015 013d 00       		.byte	0
 1016 013e 00       		.byte	0
 1017 013f 00       		.byte	0
 1018              		.section	.debug_aranges,"",%progbits
 1019 0000 34000000 		.4byte	0x34
 1020 0004 0200     		.2byte	0x2
 1021 0006 00000000 		.4byte	.Ldebug_info0
 1022 000a 04       		.byte	0x4
 1023 000b 00       		.byte	0
 1024 000c 0000     		.2byte	0
 1025 000e 0000     		.2byte	0
 1026 0010 00000000 		.4byte	.LFB41
 1027 0014 14000000 		.4byte	.LFE41-.LFB41
 1028 0018 00000000 		.4byte	.LFB53
 1029 001c 14000000 		.4byte	.LFE53-.LFB53
 1030 0020 00000000 		.4byte	.LFB57
 1031 0024 0E000000 		.4byte	.LFE57-.LFB57
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 48


 1032 0028 00000000 		.4byte	.LFB70
 1033 002c 18000000 		.4byte	.LFE70-.LFB70
 1034 0030 00000000 		.4byte	0
 1035 0034 00000000 		.4byte	0
 1036              		.section	.debug_ranges,"",%progbits
 1037              	.Ldebug_ranges0:
 1038 0000 00000000 		.4byte	.LFB41
 1039 0004 14000000 		.4byte	.LFE41
 1040 0008 00000000 		.4byte	.LFB53
 1041 000c 14000000 		.4byte	.LFE53
 1042 0010 00000000 		.4byte	.LFB57
 1043 0014 0E000000 		.4byte	.LFE57
 1044 0018 00000000 		.4byte	.LFB70
 1045 001c 18000000 		.4byte	.LFE70
 1046 0020 00000000 		.4byte	0
 1047 0024 00000000 		.4byte	0
 1048              		.section	.debug_line,"",%progbits
 1049              	.Ldebug_line0:
 1050 0000 83010000 		.section	.debug_str,"MS",%progbits,1
 1050      02002E01 
 1050      00000201 
 1050      FB0E0D00 
 1050      01010101 
 1051              	.LASF34:
 1052 0000 6B696E64 		.ascii	"kind\000"
 1052      00
 1053              	.LASF41:
 1054 0005 4B65726E 		.ascii	"Kernel_Context\000"
 1054      656C5F43 
 1054      6F6E7465 
 1054      787400
 1055              	.LASF63:
 1056 0014 45455F72 		.ascii	"EE_rq_bitmask\000"
 1056      715F6269 
 1056      746D6173 
 1056      6B00
 1057              	.LASF14:
 1058 0022 45455F55 		.ascii	"EE_UREG\000"
 1058      52454700 
 1059              	.LASF70:
 1060 002a 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1060      6F5F4952 
 1060      515F6469 
 1060      7361626C 
 1060      655F636F 
 1061              	.LASF79:
 1062 0042 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1062      6F5F6361 
 1062      6C6C5F50 
 1062      72655461 
 1062      736B486F 
 1063              	.LASF23:
 1064 0059 7469636B 		.ascii	"ticksperbase\000"
 1064      73706572 
 1064      62617365 
 1064      00
 1065              	.LASF64:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 49


 1066 0066 45455F74 		.ascii	"EE_th_event_active\000"
 1066      685F6576 
 1066      656E745F 
 1066      61637469 
 1066      766500
 1067              	.LASF81:
 1068 0079 74656D70 		.ascii	"temp\000"
 1068      00
 1069              	.LASF2:
 1070 007e 73686F72 		.ascii	"short int\000"
 1070      7420696E 
 1070      7400
 1071              	.LASF44:
 1072 0088 4572726F 		.ascii	"ErrorHook_Context\000"
 1072      72486F6F 
 1072      6B5F436F 
 1072      6E746578 
 1072      7400
 1073              	.LASF38:
 1074 009a 64656C74 		.ascii	"delta\000"
 1074      6100
 1075              	.LASF74:
 1076 00a0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1076      43313120 
 1076      352E342E 
 1076      31203230 
 1076      31363036 
 1077 00d3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1077      20726576 
 1077      6973696F 
 1077      6E203233 
 1077      37373135 
 1078 0106 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1078      66756E63 
 1078      74696F6E 
 1078      2D736563 
 1078      74696F6E 
 1079              	.LASF15:
 1080 012e 45455F46 		.ascii	"EE_FREG\000"
 1080      52454700 
 1081              	.LASF52:
 1082 0136 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1082      59504543 
 1082      4F4E5445 
 1082      585400
 1083              	.LASF32:
 1084 0145 436F756E 		.ascii	"CounterObjectKindType\000"
 1084      7465724F 
 1084      626A6563 
 1084      744B696E 
 1084      64547970 
 1085              	.LASF13:
 1086 015b 45455F55 		.ascii	"EE_UINT32\000"
 1086      494E5433 
 1086      3200
 1087              	.LASF56:
 1088 0165 45455F74 		.ascii	"EE_th_ready_prio\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 50


 1088      685F7265 
 1088      6164795F 
 1088      7072696F 
 1088      00
 1089              	.LASF43:
 1090 0176 49535232 		.ascii	"ISR2_Context\000"
 1090      5F436F6E 
 1090      74657874 
 1090      00
 1091              	.LASF17:
 1092 0183 45455F54 		.ascii	"EE_TID\000"
 1092      494400
 1093              	.LASF24:
 1094 018a 6D696E63 		.ascii	"mincycle\000"
 1094      79636C65 
 1094      00
 1095              	.LASF26:
 1096 0193 76616C75 		.ascii	"value\000"
 1096      6500
 1097              	.LASF65:
 1098 0199 45455F74 		.ascii	"EE_th_waswaiting\000"
 1098      685F7761 
 1098      73776169 
 1098      74696E67 
 1098      00
 1099              	.LASF67:
 1100 01aa 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1100      6F5F636F 
 1100      756E7465 
 1100      725F6F62 
 1100      6A656374 
 1101              	.LASF31:
 1102 01c3 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1102      6F5F636F 
 1102      756E7465 
 1102      725F6F62 
 1102      6A656374 
 1103              	.LASF53:
 1104 01e2 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1104      52515F6E 
 1104      65737469 
 1104      6E675F6C 
 1104      6576656C 
 1105              	.LASF28:
 1106 01f7 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1106      6F5F636F 
 1106      756E7465 
 1106      725F5241 
 1106      4D5F7479 
 1107              	.LASF51:
 1108 020e 49646C65 		.ascii	"Idle_Context\000"
 1108      5F436F6E 
 1108      74657874 
 1108      00
 1109              	.LASF6:
 1110 021b 6C6F6E67 		.ascii	"long long int\000"
 1110      206C6F6E 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 51


 1110      6720696E 
 1110      7400
 1111              	.LASF10:
 1112 0229 45455F49 		.ascii	"EE_INT8\000"
 1112      4E543800 
 1113              	.LASF71:
 1114 0231 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1114      6F5F4952 
 1114      515F7375 
 1114      7370656E 
 1114      645F7374 
 1115              	.LASF18:
 1116 024a 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1116      5950455F 
 1116      52515F4D 
 1116      41534B00 
 1117              	.LASF30:
 1118 025a 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1118      43484544 
 1118      554C4554 
 1118      41424C45 
 1118      00
 1119              	.LASF4:
 1120 026b 6C6F6E67 		.ascii	"long int\000"
 1120      20696E74 
 1120      00
 1121              	.LASF22:
 1122 0274 6D617861 		.ascii	"maxallowedvalue\000"
 1122      6C6C6F77 
 1122      65647661 
 1122      6C756500 
 1123              	.LASF40:
 1124 0284 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1124      6F5F636F 
 1124      756E7465 
 1124      725F6F62 
 1124      6A656374 
 1125              	.LASF25:
 1126 02a2 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1126      6F5F636F 
 1126      756E7465 
 1126      725F524F 
 1126      4D5F7479 
 1127              	.LASF77:
 1128 02b9 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1128      735F7365 
 1128      745F6578 
 1128      65637574 
 1128      696F6E5F 
 1129              	.LASF19:
 1130 02d5 5469636B 		.ascii	"TickType\000"
 1130      54797065 
 1130      00
 1131              	.LASF62:
 1132 02de 45455F73 		.ascii	"EE_sys_ceiling\000"
 1132      79735F63 
 1132      65696C69 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 52


 1132      6E6700
 1133              	.LASF20:
 1134 02ed 436F756E 		.ascii	"CounterObjectType\000"
 1134      7465724F 
 1134      626A6563 
 1134      74547970 
 1134      6500
 1135              	.LASF9:
 1136 02ff 6C6F6E67 		.ascii	"long double\000"
 1136      20646F75 
 1136      626C6500 
 1137              	.LASF66:
 1138 030b 45455F63 		.ascii	"EE_counter_ROM\000"
 1138      6F756E74 
 1138      65725F52 
 1138      4F4D00
 1139              	.LASF49:
 1140 031a 53687574 		.ascii	"ShutdownHook_Context\000"
 1140      646F776E 
 1140      486F6F6B 
 1140      5F436F6E 
 1140      74657874 
 1141              	.LASF1:
 1142 032f 756E7369 		.ascii	"unsigned char\000"
 1142      676E6564 
 1142      20636861 
 1142      7200
 1143              	.LASF69:
 1144 033d 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1144      6F5F636F 
 1144      756E7465 
 1144      725F6F62 
 1144      6A656374 
 1145              	.LASF0:
 1146 0356 7369676E 		.ascii	"signed char\000"
 1146      65642063 
 1146      68617200 
 1147              	.LASF7:
 1148 0362 6C6F6E67 		.ascii	"long long unsigned int\000"
 1148      206C6F6E 
 1148      6720756E 
 1148      7369676E 
 1148      65642069 
 1149              	.LASF78:
 1150 0379 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1150      746B5F71 
 1150      75657279 
 1150      66697273 
 1150      7400
 1151              	.LASF8:
 1152 038b 756E7369 		.ascii	"unsigned int\000"
 1152      676E6564 
 1152      20696E74 
 1152      00
 1153              	.LASF60:
 1154 0398 45455F74 		.ascii	"EE_th_rnact\000"
 1154      685F726E 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 53


 1154      61637400 
 1155              	.LASF54:
 1156 03a4 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1156      74645F65 
 1156      6E646379 
 1156      636C655F 
 1156      6E657874 
 1157              	.LASF12:
 1158 03bd 45455F49 		.ascii	"EE_INT32\000"
 1158      4E543332 
 1158      00
 1159              	.LASF42:
 1160 03c6 5441534B 		.ascii	"TASK_Context\000"
 1160      5F436F6E 
 1160      74657874 
 1160      00
 1161              	.LASF3:
 1162 03d3 73686F72 		.ascii	"short unsigned int\000"
 1162      7420756E 
 1162      7369676E 
 1162      65642069 
 1162      6E7400
 1163              	.LASF35:
 1164 03e6 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1164      6F5F636F 
 1164      756E7465 
 1164      725F6F62 
 1164      6A656374 
 1165              	.LASF76:
 1166 0404 433A5C55 		.ascii	"C:\\Users\\schmi\\OneDrive\\Dokumente\\PSoC Creator"
 1166      73657273 
 1166      5C736368 
 1166      6D695C4F 
 1166      6E654472 
 1167 0432 5C4A736F 		.ascii	"\\JsonParserLAB3\\holidayProject\\setUpEnv.cydsn\000"
 1167      6E506172 
 1167      7365724C 
 1167      4142335C 
 1167      686F6C69 
 1168              	.LASF11:
 1169 0460 45455F55 		.ascii	"EE_UINT16\000"
 1169      494E5431 
 1169      3600
 1170              	.LASF50:
 1171 046a 416C6172 		.ascii	"AlarmCallback_Context\000"
 1171      6D43616C 
 1171      6C626163 
 1171      6B5F436F 
 1171      6E746578 
 1172              	.LASF33:
 1173 0480 73706563 		.ascii	"spec_id\000"
 1173      5F696400 
 1174              	.LASF68:
 1175 0488 45455F63 		.ascii	"EE_counter_RAM\000"
 1175      6F756E74 
 1175      65725F52 
 1175      414D00
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 54


 1176              	.LASF72:
 1177 0497 45455F41 		.ascii	"EE_ApplicationMode\000"
 1177      70706C69 
 1177      63617469 
 1177      6F6E4D6F 
 1177      646500
 1178              	.LASF5:
 1179 04aa 6C6F6E67 		.ascii	"long unsigned int\000"
 1179      20756E73 
 1179      69676E65 
 1179      6420696E 
 1179      7400
 1180              	.LASF16:
 1181 04bc 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1181      59504542 
 1181      4F4F4C00 
 1182              	.LASF61:
 1183 04c8 45455F73 		.ascii	"EE_stkfirst\000"
 1183      746B6669 
 1183      72737400 
 1184              	.LASF45:
 1185 04d4 50726F74 		.ascii	"ProtectionHook_Context\000"
 1185      65637469 
 1185      6F6E486F 
 1185      6F6B5F43 
 1185      6F6E7465 
 1186              	.LASF46:
 1187 04eb 50726554 		.ascii	"PreTaskHook_Context\000"
 1187      61736B48 
 1187      6F6F6B5F 
 1187      436F6E74 
 1187      65787400 
 1188              	.LASF29:
 1189 04ff 45455F41 		.ascii	"EE_ALARM\000"
 1189      4C41524D 
 1189      00
 1190              	.LASF47:
 1191 0508 506F7374 		.ascii	"PostTaskHook_Context\000"
 1191      5461736B 
 1191      486F6F6B 
 1191      5F436F6E 
 1191      74657874 
 1192              	.LASF36:
 1193 051d 75736564 		.ascii	"used\000"
 1193      00
 1194              	.LASF55:
 1195 0522 73697A65 		.ascii	"sizetype\000"
 1195      74797065 
 1195      00
 1196              	.LASF21:
 1197 052b 436F756E 		.ascii	"CounterType\000"
 1197      74657254 
 1197      79706500 
 1198              	.LASF58:
 1199 0537 45455F74 		.ascii	"EE_th_status\000"
 1199      685F7374 
 1199      61747573 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc8EgXDV.s 			page 55


 1199      00
 1200              	.LASF57:
 1201 0544 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1201      685F6469 
 1201      73706174 
 1201      63685F70 
 1201      72696F00 
 1202              	.LASF75:
 1203 0558 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_tstub.c\000"
 1203      72617465 
 1203      645F536F 
 1203      75726365 
 1203      5C50536F 
 1204              	.LASF80:
 1205 0584 45455F6F 		.ascii	"EE_oo_thread_stub\000"
 1205      6F5F7468 
 1205      72656164 
 1205      5F737475 
 1205      6200
 1206              	.LASF37:
 1207 0596 636E7463 		.ascii	"cntcycle\000"
 1207      79636C65 
 1207      00
 1208              	.LASF59:
 1209 059f 45455F74 		.ascii	"EE_th_next\000"
 1209      685F6E65 
 1209      787400
 1210              	.LASF48:
 1211 05aa 53746172 		.ascii	"StartupHook_Context\000"
 1211      74757048 
 1211      6F6F6B5F 
 1211      436F6E74 
 1211      65787400 
 1212              	.LASF39:
 1213 05be 6E657874 		.ascii	"next\000"
 1213      00
 1214              	.LASF73:
 1215 05c3 45455F72 		.ascii	"EE_rq_lookup\000"
 1215      715F6C6F 
 1215      6F6B7570 
 1215      00
 1216              	.LASF27:
 1217 05d0 66697273 		.ascii	"first\000"
 1217      7400
 1218              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
