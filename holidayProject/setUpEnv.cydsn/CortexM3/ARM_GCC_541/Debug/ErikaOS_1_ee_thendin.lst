ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_thendin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_hal_endcycle_ready,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_hal_endcycle_ready, %function
  24              	EE_hal_endcycle_ready:
  25              	.LFB34:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 4


 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_ready(EE_TID tid)
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
  27              		.loc 1 172 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = tid;
  40              		.loc 1 173 0
  41 0008 034A     		ldr	r2, .L2
  42 000a 7B68     		ldr	r3, [r7, #4]
  43 000c 1360     		str	r3, [r2]
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  44              		.loc 1 174 0
  45 000e 00BF     		nop
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 80BC     		pop	{r7}
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0016 7047     		bx	lr
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 5


  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0018 00000000 		.word	EE_std_endcycle_next_tid
  59              		.cfi_endproc
  60              	.LFE34:
  61              		.size	EE_hal_endcycle_ready, .-EE_hal_endcycle_ready
  62              		.section	.text.EE_hal_endcycle_stacked,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  66              		.type	EE_hal_endcycle_stacked, %function
  67              	EE_hal_endcycle_stacked:
  68              	.LFB35:
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_stacked(EE_TID tid)
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
  69              		.loc 1 178 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = EE_std_mark_tid_stacked(tid);
  82              		.loc 1 179 0
  83 0008 7B68     		ldr	r3, [r7, #4]
  84 000a 43F00043 		orr	r3, r3, #-2147483648
  85 000e 034A     		ldr	r2, .L5
  86 0010 1360     		str	r3, [r2]
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  87              		.loc 1 180 0
  88 0012 00BF     		nop
  89 0014 0C37     		adds	r7, r7, #12
  90              		.cfi_def_cfa_offset 4
  91 0016 BD46     		mov	sp, r7
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 0018 80BC     		pop	{r7}
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 001a 7047     		bx	lr
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 001c 00000000 		.word	EE_std_endcycle_next_tid
 102              		.cfi_endproc
 103              	.LFE35:
 104              		.size	EE_hal_endcycle_stacked, .-EE_hal_endcycle_stacked
 105              		.section	.text.EE_ORTI_set_th_eq_dispatch_prio,"ax",%progbits
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 6


 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 109              		.type	EE_ORTI_set_th_eq_dispatch_prio, %function
 110              	EE_ORTI_set_th_eq_dispatch_prio:
 111              	.LFB39:
 112              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * CVS: $Id: ee_common.h,v 1.7 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 7


  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                             Kernel Constants
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* invalid TID */
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_NIL          ((EE_TID)-1)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* maximum value for EE_UREG (used in EE_th_resource_last) */
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_UREG_MINUS1  ((EE_UREG)-1)
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** The Kernel constants like NIL and other thread statuses are defined
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** in the following sections:
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - invalid see 13.2.4
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - thread statuses see 13.2.4
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Moreover, the user must specify (into types.h) in a fashion like
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    #define identifier unique_number
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the following identifiers:
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource identifiers declared with the macro
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      DeclareResource (13.4.2.1)
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The task identifiers declared with the macro TASK(TaskName) (13.2.5)
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource (RES_SCHEDULER) MUST have the maximum ceiling possible
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      for Tasks
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For the Extended status and ORTI support:
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_TASK maximum number of tasks (used in TaskActivate
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_RESOURCE maximum number of resources
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_ALARM maximum number of alarms
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For TASK/ALARM Autostart support:
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_APPMODE maximum number of Application modes (typically
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      >0, because there is always the mode OSDEFAULTAPPMODE.
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Types
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priority type */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPRIO
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPRIO EE_UREG
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* status type */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the status type, that usually was an used configurable type, is set
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    by the OO Standard (Bindings specification, paragraph 3.2) to be
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    unsigned char. */
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPESTATUS
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPESTATUS EE_UREG
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 8


 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pending activation type */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPENACT
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPENACT EE_UREG
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* event mask type */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEEVENTMASK
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEEVENTMASK EE_UREG
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pair type (signed!) */
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPAIR
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPAIR EE_SREG
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* application mode type */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEAPPMODE
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEAPPMODE EE_UREG
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* service id type */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEOSSERVICEID
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEOSSERVICEID EE_UINT8
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* resource id type */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPERESOURCE
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPERESOURCE EE_UREG
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter id type */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTER
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTER EE_UREG
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter object id type */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTEROBJECT
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTEROBJECT  EE_UREG
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* alarm id type */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEALARM
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEALARM EE_TYPECOUNTEROBJECT
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* action id type */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEACTION
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEACTION EE_UREG
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter tick type */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPETICK
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK EE_UREG
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 9


 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies the OS-Application. */
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID                ApplicationType;
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_OSAPPLICATION ((ApplicationType)-1)
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define KERNEL_OSAPPLICATION  ((ApplicationType)0U)
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Maximum number of pending activations */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPENACT   EE_th_rnact_max[EE_MAX_TASK];
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priorities (NB: they are bit fields!!!) */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_ready_prio[EE_MAX_TASK];
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_dispatch_prio[EE_MAX_TASK];
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_TASK_NAME[EE_MAX_TASK];
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_EVENT_NAME[EE_MAX_EVENT];
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_ALARM_NAME[EE_MAX_ALARM];
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_RESOURCE_NAME[EE_MAX_RESOURCE];
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_RESOURCE_ID[EE_MAX_RESOURCE];
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_EVENT_ID[EE_MAX_EVENT];
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_ALARM_ID[EE_MAX_ALARM];
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*uthra changes*/
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Variables defined by the application
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread status, all initialized to SUSPENDED */
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPESTATUS EE_th_status[EE_MAX_TASK];
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* next: is used for:
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the stacked queue
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - WaitEvent (?)
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the ready queue (BCC1, ECC1)
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    all initialized with EE_NIL
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_next[EE_MAX_TASK];
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * remaining nact: init= maximum pending activations of a Task
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * =1 for BCC1 and ECC1, >= 0 for BCC2 and ECC2
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * all initialized with 1 (ECC2, BCC2: or with a value >1)
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPENACT   EE_th_rnact[EE_MAX_TASK];
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_CHAINTASK__
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The next task to be activated after a ChainTask. initvalue=all EE_NIL */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 10


 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_terminate_nextask[EE_MAX_TASK];
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The first stacked task (initvalue = EE_NIL) */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID       EE_stkfirst;
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* First task in the ready queue (initvalue = EE_NIL) */
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_rq_first;
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  __OO_BCC1__ || __OO_ECC1__ */
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* System ceiling (initvalue = 0) */
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_sys_ceiling;
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ready queue implementation:
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - 16 priorities
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - we use a queue for each priority. Head and tail are stored in an array
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - each queue contains pairs (Task ID, next)
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - the number of pairs is the sum of all the possible activations
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   of all the tasks (in that way, an activation will never fail due
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   to the lack of a pair)
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - to know which queue have to be used, a bit mask is used to do a fast
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   lookup (the 8 bit lookup table is defined into ee_lookup.c)
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* bit mask with 16 or 8 priority levels (Initvalue = 0) */
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_BCC2__)
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT8 EE_TYPE_RQ_MASK;
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT16 EE_TYPE_RQ_MASK;
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 11


 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following data structure gives the link between a task and its
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority queue.  The values of this data structure are the same of
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_ready_prio, except that they are not stored as bitfields
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: each TID = x such that th_ready_prio[TID]= 1<<x
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_rq_link[EE_MAX_TASK];
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The priority queues  (initvalue: all -1;
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number of elements: 8(BCC2) or 16(ECC2) ) */
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_head[EE_RQ_QUEUES_HEAD_SIZE];
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_tail[EE_RQ_QUEUES_TAIL_SIZE];
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The pairs that are enqueued into the priority queues */
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* initvalue: something like {1,2,3,4,5,...,-1}.
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of elements is equal to the sum of the elements of
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_th_rnact */
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_pairs_next[EE_RQ_PAIRS_NEXT_SIZE];
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* init value=0 (no init value); the number of elements is equal to the
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    sum of the elements of EE_th_rnact */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID      EE_rq_pairs_tid[EE_RQ_PAIRS_TID_SIZE];
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RQ priority Mask */
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPE_RQ_MASK EE_rq_bitmask;
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a list of unused pairs */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_free; /* pointer to a free pair; initvalue=0 */
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Event handling */
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: To save memory space, Extended tasks should have the smallest
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number into the task data structures. In that way, the following
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    data structures can be sized to exactly the number of the extended
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 12


 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    tasks */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread events already active; these events are set using the
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    SetEvent primitive. initvalue = 0 */
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_active[EE_MAX_TASK];
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread wait mask. this is the event mask the task is waiting using
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    WaitEvent. A task IS waiting only if the value in this array IS != 0.
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    initvalue = 0 */
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_waitmask[EE_MAX_TASK];
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this structure contains a flag that is 1 if a thread has been
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    suspended using EE_hal_stkchange. In that case, the task have to
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be wakened again using the same function. initvalue = 0
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_th_waswaiting[EE_MAX_TASK];
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* just a flag: this flag is 1 if the task is an extended task, 0 otherwise */
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Please note that this flag is defined both in STANDARD and in
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EXTENDED status. The need for this flag in standard status is
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    because task activations of an extended task clears its pending
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    event mask. */
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEBOOL EE_th_is_extended[EE_MAX_TASK];
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resources data structures */
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resource ceiling */
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO   EE_resource_ceiling[EE_MAX_RESOURCE];
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ISR2 priority tied to an resource */
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEISR2PRIO  EE_resource_isr2_priority[EE_MAX_RESOURCE];
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 13


 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: There is no constraint on the index that is assigned
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    RES_SCHEDULER!!! */
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old resource ceiling */
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_resource_oldceiling[EE_MAX_RESOURCE];
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* New data structures to handle resource sharing with isr2 and isr2 hardware
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority ceiling. */
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old ISR2 priority */
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEISR2PRIO  EE_isr2_oldpriority[EE_MAX_RESOURCE];
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ORTI_RES_ISLOCKED__))
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status or when using ORTI with resources; for each
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    resource, a flag is allocated to see if the resource is locked or
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not.  Note that this information cannot be easily knew from the
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    previous two data structures. initvalue=0
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_resource_locked[EE_MAX_RESOURCE];
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_EXTENDED_STATUS__ || __OO_ORTI_RES_ISLOCKED__ */
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ISR2_RESOURCES__))
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status; for each task, we allocate a data
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    structure that keeps track of the order in which every task has
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    allocated a resource. This is needed to return a meaningful
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    E_OS_NOFUNC error in the ReleaseResource call. */
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the last resource that the task has locked. This array
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    contains one entry for each task.  Initvalue= all -1. at runtime,
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    it points to the first item in the EE_resource_stack data structure */
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_MAX_ISR2_WITH_RESOURCES
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK];
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* !EE_MAX_ISR2_WITH_RESOURCES */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK + EE_MAX_ISR2_WITH_RESOURCES];
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !EE_MAX_ISR2_WITH_RESOURCES */
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this array is used to store a list of resources locked by a
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    task. there is one entry for each resource, initvalue = -1. the
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    list of resources locked by a task is ended by -1. */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_resource_stack[EE_MAX_RESOURCE];
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ || __OO_ISR2_RESOURCES__ */
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 14


 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_NO_RESOURCES__ */
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(EE_MAX_ISR2_WITH_RESOURCES)) && (!defined(EE_AS_USER_SPINLOCKS__))
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2_WITH_RESOURCES > 0)
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Array to hold corresponding isr2 nesting levels */
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2_WITH_RESOURCES];
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* (EE_MAX_ISR2_WITH_RESOURCES > 0) && !EE_AS_USER_SPINLOCKS__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #elif defined (EE_MAX_ISR2)
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2 > 0)
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2];
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_ISR2 > 0 */
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the stub that have to be put into the EE_th_body array */
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern void EE_oo_thread_stub(void);
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* see top of the file */
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.2 Task management
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.1 Data types                                                       */
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies a task. */
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID TaskType;
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of TaskType. */
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID *TaskRefType;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 15


 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies the state of a task. */
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS TaskStateType;
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of the data type TaskStateType. */
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS *TaskStateRefType;
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ISR2 management
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies an interrupt service routine (ISR). */
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID ISRType;
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ISR ((ISRType)-1)
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.4 Constants                                                        */
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state running. */
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define RUNNING   ((EE_TYPESTATUS)0U)
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state waiting. */
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define WAITING   ((EE_TYPESTATUS)1U)
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state ready. */
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define READY     ((EE_TYPESTATUS)2U)
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state suspended. */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define SUSPENDED ((EE_TYPESTATUS)3U)
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.4 Resource management
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.4.1 Data types                                                       */
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPERESOURCE ResourceType;
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.5 Event control
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.5.1 Data types                                                       */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK EventMaskType;
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK *EventMaskRefType;
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.6 Counters & Alarms
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 16


 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents count values in ticks. */
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPETICK TickType;
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type TickType. */
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef TickType *TickRefType;
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_CPU_CLOCK
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of ms in number of ticks at the CPU
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     clock frequency **/
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MILLI_TO_CPU_TICKS(X_MS) EE_MILLI_TO_TICKS(X_MS, EE_CPU_CLOCK)
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of us in number of ticks of a given
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     frequency **/
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MICRO_TO_CPU_TICKS(X_US) EE_MICRO_TO_TICKS(X_US, EE_CPU_CLOCK)
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_CPU_CLOCK */
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Alarms Handling */
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Used to handle some corner cases with TickType */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK_HALF_VALUE ((((EE_TYPETICK)-1) >> 1) + 1U)
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.6.1 Data types                                                       */
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* A structure for storage of counter characteristics. */
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType maxallowedvalue; /* Maximum possible allowed count value in
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                ticks */
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType ticksperbase;    /* Number of hardware ticks required to reach a
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                counter-specific (significant) unit. */
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_EXTENDED_STATUS__
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType mincycle; /* Smallest allowed value for the cycle-parameter
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         of SetRelAlarm/SetAbsAlarm) (only for systems
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         with extended status) */
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ */
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } AlarmBaseType;
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type AlarmBaseType. */
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef AlarmBaseType *AlarmBaseRefType;
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represent a counter object ID. */
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTEROBJECT  CounterObjectType;
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter object ID */
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER_OBJECT  ((CounterObjectType)-1)
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an action ID. */
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEACTION ActionType;
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an alarm ID. */
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEALARM AlarmType;
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid alarm */
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ALARM ((AlarmType)-1)
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This is an additional data type that represents a counter ID. */
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTER CounterType;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 17


 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter */
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER ((CounterType)-1)
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: depends on configuration */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        maxallowedvalue;
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        ticksperbase;
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        mincycle;
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this counter belong to. */
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType ApplID;
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_ROM_type;
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: {0, -1} */
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          value;  /**< current value of the counter */
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType first;  /**< first object queued on the counter */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_RAM_type;
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Add supplementary support info for hardware counters */
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType microsecondspertick;
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_hw_ROM_type;
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter objects */
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ALARM,
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_SCHEDULETABLE
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_kind_type;
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_counter_object_kind_type CounterObjectKindType;
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The counter this counter is linked to */
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType           c;
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** ID specialized Id (In Alarm or Schedule Tables List) */
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType     spec_id;
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** Which kind of Counter Object is this */
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectKindType kind;
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_ROM_type;
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TYPEBOOL       used;     /**< a flag that is 1 when the alarm is armed */
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          cntcycle; /**< cycle for periodic alarms */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          delta;    /**< delta expiration time (into a queue!) */
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType next;     /**< next counter object in the delta queue */
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_RAM_type;
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 18


 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter object actions */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_TASK      = 0U,
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_EVENT     = 1U,
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_COUNTER   = 2U,
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_CALLBACK  = 3U
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_kind_type;
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_action_kind_type ActionKindType;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** This data structure represent an counter object action */
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionKindType    action_kind;
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TaskType          action_task;
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EventMaskType     action_mask;
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_VOID_CALLBACK  f;
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Counter to increment when the alarm expire.*/
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType       inccount;
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_ROM_type;
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the action that have to be executed when this alarm expire */
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionType        action_id;
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this alarm belong to. */
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType   ApplID;
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_alarm_ROM_type;
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This array contains, for each counter, the characteristics of the counter.
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The initialization value is implementation dependent */
 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_ROM_SIZE)
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if EE_COUNTER_ROM_SIZE > 0
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_ROM_type EE_counter_ROM[EE_COUNTER_ROM_SIZE];
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Add supplementary support info for HARDWARE counters.
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    This array contains, for each HARDWARE counter, the supplementary
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    characteristics of the counter.The initialization value is implementation
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    dependent */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_hw_ROM_type
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_counter_hw_ROM[EE_COUNTER_HW_ROM_SIZE];
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the fixed part of a counter object.
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm or the schedule table represented by this
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_object_ROM_type
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_ROM[EE_COUNTER_OBJECTS_ROM_SIZE];
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 19


 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part represent the list of the configured actions.
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarms and the schedule tables have been
 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ACTION_ROM_SIZE)
 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ACTION_ROM_SIZE > 0)
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_action_ROM_type EE_oo_action_ROM[EE_ACTION_ROM_SIZE];
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this is the fixed part of the configuration of an alarm
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm have been configured */
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ALARM_ROM_SIZE)
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ALARM_ROM_SIZE > 0)
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_alarm_ROM_type   EE_alarm_ROM[EE_ALARM_ROM_SIZE];
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the RAM part of a counter.
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initialization value = an array of {0,-1} elements */
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_RAM_type       EE_counter_RAM[EE_MAX_COUNTER];
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the variable part of a counter object.
 766:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: all zeros. Note that setting the next value to 0 and
 767:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not -1 does not give problems because used=0; the next field will
 768:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be set by counter_object_insert when inserting the alarm in the queue */
 769:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 770:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 771:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_object_RAM_type
 772:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_RAM[EE_COUNTER_OBJECTS_ROM_SIZE];
 773:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 774:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 775:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 776:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 777:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 778:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 779:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 780:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 781:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 782:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 783:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 784:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 785:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.7 Operating system execution control
 786:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 787:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 788:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.7.1 Data types                                                       */
 789:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 790:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 791:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type represents the application mode. */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 20


 792:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEAPPMODE AppModeType;
 793:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 794:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 795:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 796:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 797:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 798:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 3.2 (Bindings). StatusType is an unsigned char */
 799:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef STATUSTYPEDEFINED
 800:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define STATUSTYPEDEFINED
 801:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef unsigned char StatusType;
 802:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OK                        ((StatusType)0U)
 803:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 804:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 805:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ACCESS                 ((StatusType)1U)
 806:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CALLEVEL               ((StatusType)2U)
 807:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ID                     ((StatusType)3U)
 808:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_LIMIT                  ((StatusType)4U)
 809:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NOFUNC                 ((StatusType)5U)
 810:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_RESOURCE               ((StatusType)6U)
 811:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STATE                  ((StatusType)7U)
 812:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_VALUE                  ((StatusType)8U)
 813:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SERVICEID              ((StatusType)9U)
 814:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ILLEGAL_ADDRESS        ((StatusType)10U)
 815:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_MISSINGEND             ((StatusType)11U)
 816:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_DISABLEDINT            ((StatusType)12U)
 817:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STACKFAULT             ((StatusType)13U)
 818:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PARAM_POINTER          ((StatusType)14U)
 819:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_MEMORY      ((StatusType)15U)
 820:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_TIME        ((StatusType)16U)
 821:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_ARRIVAL     ((StatusType)17U)
 822:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_LOCKED      ((StatusType)18U)
 823:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_EXCEPTION   ((StatusType)19U)
 824:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Spinlocks errors */
 825:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SPINLOCK               ((StatusType)20U)
 826:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_INTERFERENCE_DEADLOCK  ((StatusType)21U)
 827:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NESTING_DEADLOCK       ((StatusType)22U)
 828:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RPC errors */
 829:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CORE                   ((StatusType)23U)
 830:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 831:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Implementation specific errors: they must start with E_OS_SYS_ */
 832:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Error during StartOS */
 833:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SYS_INIT               ((StatusType)24U)
 834:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 835:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 836:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ORTI support
 837:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 838:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 839:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 840:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 841:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 842:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_START_SEC_VAR_NOINIT
 843:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 844:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 845:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 846:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_LASTERROR__
 847:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 848:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a lasterror value that can be used with ORTI */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 21


 849:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern StatusType EE_ORTI_lasterror;
 850:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Macro to set lasterror value that can be used with ORTI */
 851:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_lasterror ( StatusType err ) {
 852:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_lasterror = err;
 853:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 854:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_LASTERROR__ */
 855:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 856:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_ORTI_set_lasterror(ERR) ((void)0)
 857:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif  /* __OO_ORTI_LASTERROR__ */
 858:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 859:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the last OO service called by the application.  SERVICETRACE IDs
 860:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are even numbers. The LSBit is used as a flag and it is set to 1
 861:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    when the servce is entered, to 0 at exit.
 862:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 863:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 864:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ACTIVATETASK              2U
 865:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TERMINATETASK             4U
 866:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CHAINTASK                 6U
 867:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SCHEDULE                  8U
 868:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKID                 10U
 869:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKSTATE              12U
 870:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_DISABLEALLINTERRUPTS      14U
 871:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ENABLEALLINTERRUPTS       16U
 872:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDALLINTERRUPTS      18U
 873:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEALLINTERRUPTS       20U
 874:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDOSINTERRUPTS       22U
 875:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEOSINTERRUPTS        24U
 876:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETRESOURCE               26U
 877:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RELEASERESOURCE           28U
 878:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETEVENT                  30U
 879:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CLEAREVENT                32U
 880:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETEVENT                  34U
 881:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITEVENT                 36U
 882:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARMBASE              38U
 883:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARM                  40U
 884:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETRELALARM               42U
 885:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETABSALARM               44U
 886:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CANCELALARM               46U
 887:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETACTIVEAPPLICATIONMODE  48U
 888:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_STARTOS                   50U
 889:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SHUTDOWNOS                52U
 890:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_FORCESCHEDULE             54U
 891:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INCREMENTCOUNTER          56U
 892:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETCOUNTERVALUE           58U
 893:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETELAPSEDVALUE           60U
 894:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 895:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
 896:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INITSEM                   62U
 897:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITSEM                   64U
 898:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TRYWAITSEM                66U
 899:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_POSTSEM                   68U
 900:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETVALUESEM               70U
 901:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   72U
 902:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_SEM__ */
 903:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   62U
 904:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
 905:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 22


 906:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_SERVICETRACE__
 907:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern volatile EE_UINT8 EE_ORTI_servicetrace;
 908:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 909:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void EE_ORTI_set_service(EE_UINT8 srv)
 910:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 911:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_servicetrace = srv;
 912:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_USE_OTM__
 913:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_send_otm_servicetrace(srv);
 914:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ORTI_USE_OTM__ */
 915:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 916:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 917:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_SERVICETRACE__ */
 918:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 919:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service(EE_UINT8 srv) {}
 920:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 921:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* else __OO_ORTI_SERVICETRACE__ */
 922:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 923:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 924:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 925:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 926:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_STOP_SEC_VAR_NOINIT
 927:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 928:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 929:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 930:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Mapping for ORTI service In and Out */
 931:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_in (EE_UINT8 id)
 932:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 933:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id + 1U);
 934:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 935:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 936:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_out (EE_UINT8 id)
 937:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 938:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id);
 939:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 940:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 941:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 942:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 943:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 944:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 945:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 946:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 947:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 948:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_PRIORITY__
 949:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This flag enables the visualization of the current task priority in ORTI
 950:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    debuggers. */
 951:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 952:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority and that is the priority
 953:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    that is read by the ORTI debugger
 954:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: the ready priority set for the task
 955:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 956:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_th_priority[EE_MAX_TASK];
 957:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 958:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority saved when a task
 959:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked a resource. It works because a resource can be
 960:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked only by one task at a time.
 961:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    InitValue: all 0
 962:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 23


 963:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 964:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_resource_oldpriority[EE_MAX_RESOURCE];
 965:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_RESOURCE && EE_MAX_RESOURCE > 0U */
 966:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 967:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp)
 968:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 969:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_th_priority[tmp] = EE_th_dispatch_prio[tmp];
 970:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 971:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 972:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index,
 973:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_TYPEPRIO prio)
 974:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 975:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_ORTI_th_priority[index] = prio;
 976:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 977:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 978:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp) {}
 113              		.loc 2 978 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 83B0     		sub	sp, sp, #12
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]
 126              		.loc 2 978 0
 127 0008 00BF     		nop
 128 000a 0C37     		adds	r7, r7, #12
 129              		.cfi_def_cfa_offset 4
 130 000c BD46     		mov	sp, r7
 131              		.cfi_def_cfa_register 13
 132              		@ sp needed
 133 000e 80BC     		pop	{r7}
 134              		.cfi_restore 7
 135              		.cfi_def_cfa_offset 0
 136 0010 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE39:
 139              		.size	EE_ORTI_set_th_eq_dispatch_prio, .-EE_ORTI_set_th_eq_dispatch_prio
 140 0012 00BF     		.section	.text.EE_ORTI_set_th_priority,"ax",%progbits
 141              		.align	2
 142              		.thumb
 143              		.thumb_func
 144              		.type	EE_ORTI_set_th_priority, %function
 145              	EE_ORTI_set_th_priority:
 146              	.LFB40:
 979:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index, EE_TYPEPRIO prio) {}
 147              		.loc 2 979 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 8
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 24


 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 7, -4
 155 0002 83B0     		sub	sp, sp, #12
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 159 0006 7860     		str	r0, [r7, #4]
 160 0008 3960     		str	r1, [r7]
 161              		.loc 2 979 0
 162 000a 00BF     		nop
 163 000c 0C37     		adds	r7, r7, #12
 164              		.cfi_def_cfa_offset 4
 165 000e BD46     		mov	sp, r7
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0010 80BC     		pop	{r7}
 169              		.cfi_restore 7
 170              		.cfi_def_cfa_offset 0
 171 0012 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE40:
 174              		.size	EE_ORTI_set_th_priority, .-EE_ORTI_set_th_priority
 175              		.section	.text.EE_as_set_execution_context,"ax",%progbits
 176              		.align	2
 177              		.thumb
 178              		.thumb_func
 179              		.type	EE_as_set_execution_context, %function
 180              	EE_as_set_execution_context:
 181              	.LFB41:
 980:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_ORTI_PRIORITY__ */
 981:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 982:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 983:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 984:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 985:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 986:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 987:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 988:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 989:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Semaphores
 990:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 991:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 992:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Semaphores are not part of the OSEK API, please refer to the EE
 993:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    reference manual */
 994:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constants                                                               */
 995:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 996:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 997:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the maximum unsigned integer */
 998:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MAX_SEM_COUNTER ((EE_UREG)-1)
 999:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1000:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data types                                                              */
1001:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
1002:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
1003:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1004:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_TYPESEM {
1005:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG   count;
1006:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_ECC1__) || defined(__OO_ECC2__)
1007:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    first;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 25


1008:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    last;
1009:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
1010:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1011:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1012:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
1013:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct EE_TYPESEM  SemType;
1014:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1015:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
1016:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef SemType *SemRefType;
1017:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1018:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
1019:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1020:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
1021:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Autostart Features inside StartOS()
1022:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
1023:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1024:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: Autostart uses the symbol EE_MAX_APPMODE that represents
1025:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of different application modes in the system. */
1026:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1027:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_TASK__
1028:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1029:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for tasks.
1030:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1031:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of tasks that have to be automatically
1032:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      activated at startup for a given application mode.
1033:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1034:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - task contains the list of TIDs that have to be activated for a
1035:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1036:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1037:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1038:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_task_type {
1039:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG nt;
1040:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TID (*task)[]; /* pointer to array of TIDs */
1041:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1042:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1043:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1044:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1045:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_task_type
1046:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_task_data[EE_MAX_APPMODE];
1047:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1048:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1049:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1050:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_ALARM__
1051:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1052:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for alarms.
1053:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1054:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of alarms that have to be automatically
1055:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      set at startup for a given application mode.
1056:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1057:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - alarm contains the list of Alarm IDs that have to be activated for a
1058:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1059:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1060:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1061:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_alarm_type {
1062:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG na;
1063:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TYPEALARM (*alarm)[];
1064:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 26


1065:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1066:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1067:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1068:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_alarm_type
1069:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_alarm_data[EE_MAX_APPMODE];
1070:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1071:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each Alarm that is activated there should be an item in these
1072:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    arrays that contains the cycle and increment values that have to be
1073:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    used when activating a given alarm ID. Note that cycle/increment
1074:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are unique for each alarm activation time.
1075:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The size of these two arrays is MAXALARM.
1076:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1077:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_increment[EE_MAX_ALARM];
1078:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_cycle[EE_MAX_ALARM];
1079:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1080:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1081:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __MSRP__
1082:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*******************************************************************************
1083:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *               Autosar Multicore support Type Declarations
1084:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ******************************************************************************/
1085:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*  The following type declarations are added here and not inside AS kernel
1086:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     because i need "TryToGetSpinlockType *" to completely define EE_os_param
1087:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     type (used inside Error parameters structure).
1088:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     The problem is that theoretically there is not in C such a thing as
1089:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     "standard pointer dimension" but each pointer COULD HAVE his own dimension
1090:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     (it never happens... Actually the 99% of architectures has pointer and
1091:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     value registers with same dimension). */
1092:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1093:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOREID CoreIdType;
1094:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1095:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_USER_SPINLOCKS__
1096:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESPIN   SpinlockIdType;
1097:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_SPINLOCK ((SpinlockIdType)-1)
1098:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1099:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_NOSUCCESS = 0x0,
1101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_SUCCESS
1102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } TryToGetSpinlockType;
1103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  EE_AS_USER_SPINLOCKS__ */
1104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __MSRP__ */
1105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*[OS088] If an OS-Application makes a service call from the wrong context AND
1107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   is currently not inside a Category 1 ISR the Operating System module shall
1108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   not perform the requested action (the service call shall have no effect),
1109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   and return E_OS_CALLEVEL (see [12], section 13.1) or the "invalid value" of
1110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   the service. (BSW11009, BSW11013) */
1111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef OS-Application contexts enum used to implement Autosar OS O0S88
1112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     requirement */
1113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Kernel_Context,
1115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TASK_Context,
1116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ISR2_Context,
1117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ErrorHook_Context,
1118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ProtectionHook_Context,
1119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PreTaskHook_Context,
1120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PostTaskHook_Context,
1121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   StartupHook_Context,
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 27


1122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ShutdownHook_Context,
1123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   AlarmCallback_Context,
1124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Idle_Context
1125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_TYPECONTEXT;
1126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SERVICE_PROTECTION__
1128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
1131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
1132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @var used by the kernel to flag in witch context is executing */
1136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPECONTEXT EE_as_execution_context;
1137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
1141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ EE_TYPECONTEXT  EE_as_get_execution_context( void )
1145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   return EE_as_execution_context;
1147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx )
1151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_as_execution_context = ctx;
1153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* EE_SERVICE_PROTECTION__ */
1155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_as_get_execution_context()     Kernel_Context
1156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx ) {
 182              		.loc 2 1157 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 8
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 187 0000 80B4     		push	{r7}
 188              		.cfi_def_cfa_offset 4
 189              		.cfi_offset 7, -4
 190 0002 83B0     		sub	sp, sp, #12
 191              		.cfi_def_cfa_offset 16
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 0346     		mov	r3, r0
 195 0008 FB71     		strb	r3, [r7, #7]
1158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Unusefull operation to meet Linters requirements */
1159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   (void)ctx;
1160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 196              		.loc 2 1160 0
 197 000a 00BF     		nop
 198 000c 0C37     		adds	r7, r7, #12
 199              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 28


 200 000e BD46     		mov	sp, r7
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 0010 80BC     		pop	{r7}
 204              		.cfi_restore 7
 205              		.cfi_def_cfa_offset 0
 206 0012 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE41:
 209              		.size	EE_as_set_execution_context, .-EE_as_set_execution_context
 210              		.section	.text.EE_stk_queryfirst,"ax",%progbits
 211              		.align	2
 212              		.thumb
 213              		.thumb_func
 214              		.type	EE_stk_queryfirst, %function
 215              	EE_stk_queryfirst:
 216              	.LFB53:
 217              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 29


  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 30


  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 31


 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 32


 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 218              		.loc 3 239 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 228              		.loc 3 240 0
 229 0004 024B     		ldr	r3, .L12
 230 0006 1B68     		ldr	r3, [r3]
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 231              		.loc 3 241 0
 232 0008 1846     		mov	r0, r3
 233 000a BD46     		mov	sp, r7
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 000c 80BC     		pop	{r7}
 237              		.cfi_restore 7
 238              		.cfi_def_cfa_offset 0
 239 000e 7047     		bx	lr
 240              	.L13:
 241              		.align	2
 242              	.L12:
 243 0010 00000000 		.word	EE_stkfirst
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 33


 244              		.cfi_endproc
 245              	.LFE53:
 246              		.size	EE_stk_queryfirst, .-EE_stk_queryfirst
 247              		.section	.text.EE_oo_call_PreTaskHook,"ax",%progbits
 248              		.align	2
 249              		.thumb
 250              		.thumb_func
 251              		.type	EE_oo_call_PreTaskHook, %function
 252              	EE_oo_call_PreTaskHook:
 253              	.LFB57:
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 34


 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 35


 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 254              		.loc 3 398 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 36


 258 0000 80B5     		push	{r7, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 264              		.loc 3 400 0
 265 0004 0120     		movs	r0, #1
 266 0006 FFF7FEFF 		bl	EE_as_set_execution_context
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 267              		.loc 3 401 0
 268 000a 00BF     		nop
 269 000c 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE57:
 272              		.size	EE_oo_call_PreTaskHook, .-EE_oo_call_PreTaskHook
 273 000e 00BF     		.section	.text.EE_oo_call_PostTaskHook,"ax",%progbits
 274              		.align	2
 275              		.thumb
 276              		.thumb_func
 277              		.type	EE_oo_call_PostTaskHook, %function
 278              	EE_oo_call_PostTaskHook:
 279              	.LFB58:
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 280              		.loc 3 410 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0000 80B4     		push	{r7}
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 7, -4
 288 0002 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 290              		.loc 3 410 0
 291 0004 00BF     		nop
 292 0006 BD46     		mov	sp, r7
 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 0008 80BC     		pop	{r7}
 296              		.cfi_restore 7
 297              		.cfi_def_cfa_offset 0
 298 000a 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE58:
 301              		.size	EE_oo_call_PostTaskHook, .-EE_oo_call_PostTaskHook
 302              		.section	.text.EE_stk_getfirst,"ax",%progbits
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 37


 303              		.align	2
 304              		.thumb
 305              		.thumb_func
 306              		.type	EE_stk_getfirst, %function
 307              	EE_stk_getfirst:
 308              	.LFB61:
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 38


 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 309              		.loc 3 468 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 00AF     		add	r7, sp, #0
 318              		.cfi_def_cfa_register 7
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 319              		.loc 3 469 0
 320 0004 064B     		ldr	r3, .L18
 321 0006 1B68     		ldr	r3, [r3]
 322 0008 064A     		ldr	r2, .L18+4
 323 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 324 000e 044A     		ldr	r2, .L18
 325 0010 1360     		str	r3, [r2]
 326 0012 034B     		ldr	r3, .L18
 327 0014 1B68     		ldr	r3, [r3]
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 328              		.loc 3 470 0
 329 0016 1846     		mov	r0, r3
 330 0018 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 001a 80BC     		pop	{r7}
 334              		.cfi_restore 7
 335              		.cfi_def_cfa_offset 0
 336 001c 7047     		bx	lr
 337              	.L19:
 338 001e 00BF     		.align	2
 339              	.L18:
 340 0020 00000000 		.word	EE_stkfirst
 341 0024 00000000 		.word	EE_th_next
 342              		.cfi_endproc
 343              	.LFE61:
 344              		.size	EE_stk_getfirst, .-EE_stk_getfirst
 345              		.section	.text.EE_oo_reset_th_event_active,"ax",%progbits
 346              		.align	2
 347              		.thumb
 348              		.thumb_func
 349              		.type	EE_oo_reset_th_event_active, %function
 350              	EE_oo_reset_th_event_active:
 351              	.LFB63:
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 39


 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 40


 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 352              		.loc 3 554 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0002 83B0     		sub	sp, sp, #12
 361              		.cfi_def_cfa_offset 16
 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 365              		.loc 3 555 0
 366 0008 044A     		ldr	r2, .L21
 367 000a 7B68     		ldr	r3, [r7, #4]
 368 000c 0021     		movs	r1, #0
 369 000e 42F82310 		str	r1, [r2, r3, lsl #2]
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 370              		.loc 3 556 0
 371 0012 00BF     		nop
 372 0014 0C37     		adds	r7, r7, #12
 373              		.cfi_def_cfa_offset 4
 374 0016 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0018 80BC     		pop	{r7}
 378              		.cfi_restore 7
 379              		.cfi_def_cfa_offset 0
 380 001a 7047     		bx	lr
 381              	.L22:
 382              		.align	2
 383              	.L21:
 384 001c 00000000 		.word	EE_th_event_active
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 41


 385              		.cfi_endproc
 386              	.LFE63:
 387              		.size	EE_oo_reset_th_event_active, .-EE_oo_reset_th_event_active
 388              		.section	.text.EE_oo_set_th_status_ready,"ax",%progbits
 389              		.align	2
 390              		.thumb
 391              		.thumb_func
 392              		.type	EE_oo_set_th_status_ready, %function
 393              	EE_oo_set_th_status_ready:
 394              	.LFB65:
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 42


 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 395              		.loc 3 604 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 80B5     		push	{r7, lr}
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 7, -8
 402              		.cfi_offset 14, -4
 403 0002 82B0     		sub	sp, sp, #8
 404              		.cfi_def_cfa_offset 16
 405 0004 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
 407 0006 7860     		str	r0, [r7, #4]
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 408              		.loc 3 605 0
 409 0008 084A     		ldr	r2, .L26
 410 000a 7B68     		ldr	r3, [r7, #4]
 411 000c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 412 0010 032B     		cmp	r3, #3
 413 0012 07D1     		bne	.L25
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 414              		.loc 3 606 0
 415 0014 054A     		ldr	r2, .L26
 416 0016 7B68     		ldr	r3, [r7, #4]
 417 0018 0221     		movs	r1, #2
 418 001a 42F82310 		str	r1, [r2, r3, lsl #2]
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 419              		.loc 3 607 0
 420 001e 7868     		ldr	r0, [r7, #4]
 421 0020 FFF7FEFF 		bl	EE_oo_reset_th_event_active
 422              	.L25:
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 423              		.loc 3 609 0
 424 0024 00BF     		nop
 425 0026 0837     		adds	r7, r7, #8
 426              		.cfi_def_cfa_offset 8
 427 0028 BD46     		mov	sp, r7
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 002a 80BD     		pop	{r7, pc}
 431              	.L27:
 432              		.align	2
 433              	.L26:
 434 002c 00000000 		.word	EE_th_status
 435              		.cfi_endproc
 436              	.LFE65:
 437              		.size	EE_oo_set_th_status_ready, .-EE_oo_set_th_status_ready
 438              		.section	.text.EE_thread_rnact_max,"ax",%progbits
 439              		.align	2
 440              		.thumb
 441              		.thumb_func
 442              		.type	EE_thread_rnact_max, %function
 443              	EE_thread_rnact_max:
 444              	.LFB70:
 445              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_thendin.c"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 43


   1:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * CVS: $Id: ee_thendin.c,v 1.3 2006/01/24 10:20:20 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  56:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #include "trcKernelPort.h"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 44


  58:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
  60:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  61:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
  62:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** static EE_BIT EE_thread_rnact_max(EE_TID current) {
 446              		.loc 4 62 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              		.cfi_def_cfa_offset 16
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
  63:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   return (EE_th_rnact[current] == EE_th_rnact_max[current]) ? 1U : 0U;
 459              		.loc 4 63 0
 460 0008 084A     		ldr	r2, .L32
 461 000a 7B68     		ldr	r3, [r7, #4]
 462 000c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 463 0010 0749     		ldr	r1, .L32+4
 464 0012 7B68     		ldr	r3, [r7, #4]
 465 0014 51F82330 		ldr	r3, [r1, r3, lsl #2]
 466 0018 9A42     		cmp	r2, r3
 467 001a 01D1     		bne	.L29
 468              		.loc 4 63 0 is_stmt 0 discriminator 1
 469 001c 0123     		movs	r3, #1
 470 001e 00E0     		b	.L30
 471              	.L29:
 472              		.loc 4 63 0 discriminator 2
 473 0020 0023     		movs	r3, #0
 474              	.L30:
  64:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** }
 475              		.loc 4 64 0 is_stmt 1 discriminator 4
 476 0022 1846     		mov	r0, r3
 477 0024 0C37     		adds	r7, r7, #12
 478              		.cfi_def_cfa_offset 4
 479 0026 BD46     		mov	sp, r7
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 0028 80BC     		pop	{r7}
 483              		.cfi_restore 7
 484              		.cfi_def_cfa_offset 0
 485 002a 7047     		bx	lr
 486              	.L33:
 487              		.align	2
 488              	.L32:
 489 002c 00000000 		.word	EE_th_rnact
 490 0030 00000000 		.word	EE_th_rnact_max
 491              		.cfi_endproc
 492              	.LFE70:
 493              		.size	EE_thread_rnact_max, .-EE_thread_rnact_max
 494              		.section	.text.EE_thread_endcycle_next,"ax",%progbits
 495              		.align	2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 45


 496              		.thumb
 497              		.thumb_func
 498              		.type	EE_thread_endcycle_next, %function
 499              	EE_thread_endcycle_next:
 500              	.LFB71:
  65:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #else /* __OO_BCC2__ || __OO_ECC2__ */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #define EE_thread_rnact_max(current)  (1U)
  67:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
  68:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** static void EE_thread_endcycle_next(void);
  70:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  71:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** static void EE_thread_endcycle_next(void)
  73:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** {
 501              		.loc 4 73 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505 0000 98B5     		push	{r3, r4, r7, lr}
 506              		.cfi_def_cfa_offset 16
 507              		.cfi_offset 3, -16
 508              		.cfi_offset 4, -12
 509              		.cfi_offset 7, -8
 510              		.cfi_offset 14, -4
 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
  74:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   register EE_TID nexttid;
  75:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   nexttid = EE_rq2stk_exchange();
 513              		.loc 4 75 0
 514 0004 FFF7FEFF 		bl	EE_rq2stk_exchange
 515 0008 0446     		mov	r4, r0
  76:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   if (EE_th_waswaiting[nexttid]) {
 516              		.loc 4 76 0
 517 000a 0A4B     		ldr	r3, .L38
 518 000c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 519 0010 002B     		cmp	r3, #0
 520 0012 09D0     		beq	.L35
  77:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_th_waswaiting[nexttid] = EE_FALSE;
 521              		.loc 4 77 0
 522 0014 074B     		ldr	r3, .L38
 523 0016 0022     		movs	r2, #0
 524 0018 43F82420 		str	r2, [r3, r4, lsl #2]
  78:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  79:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
  80:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
  81:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif
  82:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_oo_call_PreTaskHook();
 525              		.loc 4 82 0
 526 001c FFF7FEFF 		bl	EE_oo_call_PreTaskHook
  83:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_hal_endcycle_stacked(nexttid);
 527              		.loc 4 83 0
 528 0020 2046     		mov	r0, r4
 529 0022 FFF7FEFF 		bl	EE_hal_endcycle_stacked
  84:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   } else {
  85:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_hal_endcycle_ready(nexttid);
  86:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   }
  87:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Remember: after hal_endcycle_XXX there MUST be NOTHING!!! */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 46


  88:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** }
 530              		.loc 4 88 0
 531 0026 02E0     		b	.L37
 532              	.L35:
  85:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   }
 533              		.loc 4 85 0
 534 0028 2046     		mov	r0, r4
 535 002a FFF7FEFF 		bl	EE_hal_endcycle_ready
 536              	.L37:
 537              		.loc 4 88 0
 538 002e 00BF     		nop
 539 0030 98BD     		pop	{r3, r4, r7, pc}
 540              	.L39:
 541 0032 00BF     		.align	2
 542              	.L38:
 543 0034 00000000 		.word	EE_th_waswaiting
 544              		.cfi_endproc
 545              	.LFE71:
 546              		.size	EE_thread_endcycle_next, .-EE_thread_endcycle_next
 547              		.section	.text.EE_thread_end_instance,"ax",%progbits
 548              		.align	2
 549              		.global	EE_thread_end_instance
 550              		.thumb
 551              		.thumb_func
 552              		.type	EE_thread_end_instance, %function
 553              	EE_thread_end_instance:
 554              	.LFB72:
  89:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #else /* __OO_ECC1__ || __OO_ECC2__ */
  90:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** static void EE_thread_endcycle_next(void)
  91:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** {
  92:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_hal_endcycle_ready(EE_rq2stk_exchange());
  93:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Remember: after hal_endcycle_XXX there MUST be NOTHING!!! */
  94:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** }
  95:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
  96:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** void EE_thread_end_instance(void)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** {
 555              		.loc 4 98 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559 0000 80B5     		push	{r7, lr}
 560              		.cfi_def_cfa_offset 8
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 563 0002 84B0     		sub	sp, sp, #16
 564              		.cfi_def_cfa_offset 24
 565 0004 00AF     		add	r7, sp, #0
 566              		.cfi_def_cfa_register 7
  99:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_TID current, rqfirst;
 100:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_TID ntask;
 101:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 102:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   current = EE_stk_queryfirst();
 567              		.loc 4 102 0
 568 0006 FFF7FEFF 		bl	EE_stk_queryfirst
 569 000a F860     		str	r0, [r7, #12]
 103:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 47


 104:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_oo_call_PostTaskHook();
 570              		.loc 4 104 0
 571 000c FFF7FEFF 		bl	EE_oo_call_PostTaskHook
 105:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 106:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* [SWS_Os_00473] The Operating System module shall reset a task’s
 107:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       OsTaskExecutionBudget on a transition to the SUSPENDED or WAITING states.
 108:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       (SRS_Os_11008) */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Reset ALL TP Budgets, just in case */
 110:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_as_tp_active_reset_budgets();
 111:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Reset ISRs counters */
 113:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_oo_IRQ_disable_count = 0U;
 572              		.loc 4 113 0
 573 0010 424B     		ldr	r3, .L51
 574 0012 0022     		movs	r2, #0
 575 0014 1A60     		str	r2, [r3]
 114:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 115:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Increase the remaining activations...*/
 116:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_th_rnact[current]++;
 576              		.loc 4 116 0
 577 0016 424A     		ldr	r2, .L51+4
 578 0018 FB68     		ldr	r3, [r7, #12]
 579 001a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 580 001e 5A1C     		adds	r2, r3, #1
 581 0020 3F49     		ldr	r1, .L51+4
 582 0022 FB68     		ldr	r3, [r7, #12]
 583 0024 41F82320 		str	r2, [r1, r3, lsl #2]
 117:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 118:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #ifndef __OO_NO_CHAINTASK__
 119:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* If we called a ChainTask, 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****      EE_th_terminate_nextask[current] != NIL */
 121:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   ntask = EE_th_terminate_nextask[current];
 584              		.loc 4 121 0
 585 0028 3E4A     		ldr	r2, .L51+8
 586 002a FB68     		ldr	r3, [r7, #12]
 587 002c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 588 0030 BB60     		str	r3, [r7, #8]
 122:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #else /* __OO_NO_CHAINTASK__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   ntask = EE_NIL;
 124:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif  /* __OO_NO_CHAINTASK__ */
 125:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 126:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* The task state switch from STACKED TO READY because it end its
 127:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****    * instance. Note that status=READY and
 128:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****    * rnact==maximum number of pending activations ==>> the task is
 129:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****    * SUSPENDED!!! */
 130:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 131:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   if( (1U == EE_thread_rnact_max(current)) || (current == ntask) ) {
 589              		.loc 4 131 0
 590 0032 F868     		ldr	r0, [r7, #12]
 591 0034 FFF7FEFF 		bl	EE_thread_rnact_max
 592 0038 0346     		mov	r3, r0
 593 003a 012B     		cmp	r3, #1
 594 003c 03D0     		beq	.L41
 595              		.loc 4 131 0 is_stmt 0 discriminator 1
 596 003e FA68     		ldr	r2, [r7, #12]
 597 0040 BB68     		ldr	r3, [r7, #8]
 598 0042 9A42     		cmp	r2, r3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 48


 599 0044 05D1     		bne	.L42
 600              	.L41:
 132:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_th_status[current] = SUSPENDED;
 601              		.loc 4 132 0 is_stmt 1
 602 0046 384A     		ldr	r2, .L51+12
 603 0048 FB68     		ldr	r3, [r7, #12]
 604 004a 0321     		movs	r1, #3
 605 004c 42F82310 		str	r1, [r2, r3, lsl #2]
 606 0050 04E0     		b	.L43
 607              	.L42:
 133:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   } else {   
 134:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_th_status[current] = READY;
 608              		.loc 4 134 0
 609 0052 354A     		ldr	r2, .L51+12
 610 0054 FB68     		ldr	r3, [r7, #12]
 611 0056 0221     		movs	r1, #2
 612 0058 42F82310 		str	r1, [r2, r3, lsl #2]
 613              	.L43:
 135:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   }
 136:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #else /* __OO_BCC2__ || __OO_ECC2__ */
 137:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_th_status[current] = SUSPENDED;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 139:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 140:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Reset the thread priority bit in the system_ceiling */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_sys_ceiling &= ~EE_th_dispatch_prio[current];
 614              		.loc 4 141 0
 615 005c 334A     		ldr	r2, .L51+16
 616 005e FB68     		ldr	r3, [r7, #12]
 617 0060 52F82330 		ldr	r3, [r2, r3, lsl #2]
 618 0064 DA43     		mvns	r2, r3
 619 0066 324B     		ldr	r3, .L51+20
 620 0068 1B68     		ldr	r3, [r3]
 621 006a 1340     		ands	r3, r3, r2
 622 006c 304A     		ldr	r2, .L51+20
 623 006e 1360     		str	r3, [r2]
 142:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 143:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   EE_ORTI_set_th_priority(current, 0U);
 624              		.loc 4 143 0
 625 0070 0021     		movs	r1, #0
 626 0072 F868     		ldr	r0, [r7, #12]
 627 0074 FFF7FEFF 		bl	EE_ORTI_set_th_priority
 144:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 145:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Extract the TASK from the stk queue and return the new head */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   current = EE_stk_getfirst();
 628              		.loc 4 146 0
 629 0078 FFF7FEFF 		bl	EE_stk_getfirst
 630 007c F860     		str	r0, [r7, #12]
 147:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 148:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #ifndef __OO_NO_CHAINTASK__
 149:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* If we called a ChainTask, 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****      EE_th_terminate_nextask[current] != NIL */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   if ( ntask != EE_NIL ) {
 631              		.loc 4 151 0
 632 007e BB68     		ldr	r3, [r7, #8]
 633 0080 B3F1FF3F 		cmp	r3, #-1
 634 0084 05D0     		beq	.L44
 152:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 49


 153:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* See also activate.c
 154:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****        Put the task in the ready state:
 155:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****        - if the task is basic/BCC1 or extended it can be here only because
 156:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****          it had rnact=1 before the call, and so it is in suspended state
 157:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****        - if the task is basic/BCC2 it can be that it is ready or 
 158:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****          running. In that case we have to check and queue it anyway */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_oo_set_th_status_ready(ntask);
 635              		.loc 4 159 0
 636 0086 B868     		ldr	r0, [r7, #8]
 637 0088 FFF7FEFF 		bl	EE_oo_set_th_status_ready
 160:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* insert the task in the ready queue */
 162:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_rq_insert(ntask);
 638              		.loc 4 162 0
 639 008c B868     		ldr	r0, [r7, #8]
 640 008e FFF7FEFF 		bl	EE_rq_insert
 641              	.L44:
 163:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   }
 164:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif /* __OO_NO_CHAINTASK__ */
 165:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Check if there is to schedule a ready thread or pop a preempted thread */
 167:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   rqfirst = EE_rq_queryfirst();
 642              		.loc 4 167 0
 643 0092 FFF7FEFF 		bl	EE_rq_queryfirst
 644 0096 7860     		str	r0, [r7, #4]
 168:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   if ( rqfirst == EE_NIL ) {
 645              		.loc 4 168 0
 646 0098 7B68     		ldr	r3, [r7, #4]
 647 009a B3F1FF3F 		cmp	r3, #-1
 648 009e 12D1     		bne	.L45
 169:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* No threads in the ready queue, return to the preempted TASK
 170:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       (maybe Idle) */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     if ( current != EE_NIL ) {
 649              		.loc 4 171 0
 650 00a0 FB68     		ldr	r3, [r7, #12]
 651 00a2 B3F1FF3F 		cmp	r3, #-1
 652 00a6 07D0     		beq	.L46
 172:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       EE_th_status[current] = RUNNING;
 653              		.loc 4 172 0
 654 00a8 1F4A     		ldr	r2, .L51+12
 655 00aa FB68     		ldr	r3, [r7, #12]
 656 00ac 0021     		movs	r1, #0
 657 00ae 42F82310 		str	r1, [r2, r3, lsl #2]
 173:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
 175:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
 176:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif
 177:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       EE_oo_call_PreTaskHook();
 658              		.loc 4 177 0
 659 00b2 FFF7FEFF 		bl	EE_oo_call_PreTaskHook
 660 00b6 02E0     		b	.L47
 661              	.L46:
 178:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       /* Enable the TASK Timing Protection Set */
 179:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       EE_as_tp_active_set_from_TASK(current);
 180:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     } else {
 181:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       /* We are switching back to the Idle loop */
 182:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       EE_as_set_execution_context( Idle_Context );
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 50


 662              		.loc 4 182 0
 663 00b8 0A20     		movs	r0, #10
 664 00ba FFF7FEFF 		bl	EE_as_set_execution_context
 665              	.L47:
 183:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****       EE_as_tp_active_start_idle();
 184:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     }
 185:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_hal_endcycle_stacked(current);
 666              		.loc 4 185 0
 667 00be F868     		ldr	r0, [r7, #12]
 668 00c0 FFF7FEFF 		bl	EE_hal_endcycle_stacked
 186:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   } else if ( EE_sys_ceiling >= EE_th_ready_prio[rqfirst] ) {
 187:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* We have to schedule an interrupted thread (already on the stack!!!) */
 188:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_th_status[current] = RUNNING;
 189:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 190:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
 191:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
 192:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #endif
 193:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_oo_call_PreTaskHook();
 194:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* Enable the TASK Timing Protection Set */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_as_tp_active_set_from_TASK(current);
 197:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* Prepare to Context SWITCH, It doesn't do the switch by it self. */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_hal_endcycle_stacked(current);
 199:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   } else {
 200:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* We have to schedule a ready thread */
 201:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_th_status[rqfirst] = RUNNING;
 202:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
 203:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 204:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_ORTI_set_th_eq_dispatch_prio(rqfirst);
 205:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 206:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* "Press TP start for the first time" for this new activation or release
 207:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****         from wait of the TASK */
 208:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_as_tp_active_start_on_TASK_stacking(rqfirst);
 209:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 210:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     /* Prepare to Context SWITCH, It doesn't do the switch by it self. */
 211:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_thread_endcycle_next();
 212:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   }
 213:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   /* Remember: after hal_endcycle_XXX there MUST be NOTHING!!! */
 214:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** }
 669              		.loc 4 214 0
 670 00c4 25E0     		b	.L50
 671              	.L45:
 186:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   } else if ( EE_sys_ceiling >= EE_th_ready_prio[rqfirst] ) {
 672              		.loc 4 186 0
 673 00c6 1B4A     		ldr	r2, .L51+24
 674 00c8 7B68     		ldr	r3, [r7, #4]
 675 00ca 52F82320 		ldr	r2, [r2, r3, lsl #2]
 676 00ce 184B     		ldr	r3, .L51+20
 677 00d0 1B68     		ldr	r3, [r3]
 678 00d2 9A42     		cmp	r2, r3
 679 00d4 0AD8     		bhi	.L49
 188:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 680              		.loc 4 188 0
 681 00d6 144A     		ldr	r2, .L51+12
 682 00d8 FB68     		ldr	r3, [r7, #12]
 683 00da 0021     		movs	r1, #0
 684 00dc 42F82310 		str	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 51


 193:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 685              		.loc 4 193 0
 686 00e0 FFF7FEFF 		bl	EE_oo_call_PreTaskHook
 198:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   } else {
 687              		.loc 4 198 0
 688 00e4 F868     		ldr	r0, [r7, #12]
 689 00e6 FFF7FEFF 		bl	EE_hal_endcycle_stacked
 690              		.loc 4 214 0
 691 00ea 12E0     		b	.L50
 692              	.L49:
 201:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
 693              		.loc 4 201 0
 694 00ec 0E4A     		ldr	r2, .L51+12
 695 00ee 7B68     		ldr	r3, [r7, #4]
 696 00f0 0021     		movs	r1, #0
 697 00f2 42F82310 		str	r1, [r2, r3, lsl #2]
 202:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 698              		.loc 4 202 0
 699 00f6 0D4A     		ldr	r2, .L51+16
 700 00f8 7B68     		ldr	r3, [r7, #4]
 701 00fa 52F82320 		ldr	r2, [r2, r3, lsl #2]
 702 00fe 0C4B     		ldr	r3, .L51+20
 703 0100 1B68     		ldr	r3, [r3]
 704 0102 1343     		orrs	r3, r3, r2
 705 0104 0A4A     		ldr	r2, .L51+20
 706 0106 1360     		str	r3, [r2]
 204:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c **** 
 707              		.loc 4 204 0
 708 0108 7868     		ldr	r0, [r7, #4]
 709 010a FFF7FEFF 		bl	EE_ORTI_set_th_eq_dispatch_prio
 211:Generated_Source\PSoC5/ErikaOS_1_ee_thendin.c ****   }
 710              		.loc 4 211 0
 711 010e FFF7FEFF 		bl	EE_thread_endcycle_next
 712              	.L50:
 713              		.loc 4 214 0
 714 0112 00BF     		nop
 715 0114 1037     		adds	r7, r7, #16
 716              		.cfi_def_cfa_offset 8
 717 0116 BD46     		mov	sp, r7
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 0118 80BD     		pop	{r7, pc}
 721              	.L52:
 722 011a 00BF     		.align	2
 723              	.L51:
 724 011c 00000000 		.word	EE_oo_IRQ_disable_count
 725 0120 00000000 		.word	EE_th_rnact
 726 0124 00000000 		.word	EE_th_terminate_nextask
 727 0128 00000000 		.word	EE_th_status
 728 012c 00000000 		.word	EE_th_dispatch_prio
 729 0130 00000000 		.word	EE_sys_ceiling
 730 0134 00000000 		.word	EE_th_ready_prio
 731              		.cfi_endproc
 732              	.LFE72:
 733              		.size	EE_thread_end_instance, .-EE_thread_end_instance
 734              		.text
 735              	.Letext0:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 52


 736              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 737              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 738              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 739              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 740              		.section	.debug_info,"",%progbits
 741              	.Ldebug_info0:
 742 0000 40060000 		.4byte	0x640
 743 0004 0400     		.2byte	0x4
 744 0006 00000000 		.4byte	.Ldebug_abbrev0
 745 000a 04       		.byte	0x4
 746 000b 01       		.uleb128 0x1
 747 000c 3F000000 		.4byte	.LASF98
 748 0010 0C       		.byte	0xc
 749 0011 4B040000 		.4byte	.LASF99
 750 0015 D6010000 		.4byte	.LASF100
 751 0019 00000000 		.4byte	.Ldebug_ranges0+0
 752 001d 00000000 		.4byte	0
 753 0021 00000000 		.4byte	.Ldebug_line0
 754 0025 02       		.uleb128 0x2
 755 0026 01       		.byte	0x1
 756 0027 06       		.byte	0x6
 757 0028 68010000 		.4byte	.LASF0
 758 002c 02       		.uleb128 0x2
 759 002d 01       		.byte	0x1
 760 002e 08       		.byte	0x8
 761 002f 54050000 		.4byte	.LASF1
 762 0033 02       		.uleb128 0x2
 763 0034 02       		.byte	0x2
 764 0035 05       		.byte	0x5
 765 0036 89050000 		.4byte	.LASF2
 766 003a 02       		.uleb128 0x2
 767 003b 02       		.byte	0x2
 768 003c 07       		.byte	0x7
 769 003d 0D030000 		.4byte	.LASF3
 770 0041 02       		.uleb128 0x2
 771 0042 04       		.byte	0x4
 772 0043 05       		.byte	0x5
 773 0044 AD010000 		.4byte	.LASF4
 774 0048 02       		.uleb128 0x2
 775 0049 04       		.byte	0x4
 776 004a 07       		.byte	0x7
 777 004b CD020000 		.4byte	.LASF5
 778 004f 02       		.uleb128 0x2
 779 0050 08       		.byte	0x8
 780 0051 05       		.byte	0x5
 781 0052 5A010000 		.4byte	.LASF6
 782 0056 02       		.uleb128 0x2
 783 0057 08       		.byte	0x8
 784 0058 07       		.byte	0x7
 785 0059 EF000000 		.4byte	.LASF7
 786 005d 03       		.uleb128 0x3
 787 005e 04       		.byte	0x4
 788 005f 05       		.byte	0x5
 789 0060 696E7400 		.ascii	"int\000"
 790 0064 02       		.uleb128 0x2
 791 0065 04       		.byte	0x4
 792 0066 07       		.byte	0x7
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 53


 793 0067 B0020000 		.4byte	.LASF8
 794 006b 02       		.uleb128 0x2
 795 006c 08       		.byte	0x8
 796 006d 04       		.byte	0x4
 797 006e 1F040000 		.4byte	.LASF9
 798 0072 04       		.uleb128 0x4
 799 0073 D0040000 		.4byte	.LASF10
 800 0077 05       		.byte	0x5
 801 0078 3B       		.byte	0x3b
 802 0079 2C000000 		.4byte	0x2c
 803 007d 04       		.uleb128 0x4
 804 007e BD020000 		.4byte	.LASF11
 805 0082 05       		.byte	0x5
 806 0083 3F       		.byte	0x3f
 807 0084 25000000 		.4byte	0x25
 808 0088 04       		.uleb128 0x4
 809 0089 39050000 		.4byte	.LASF12
 810 008d 05       		.byte	0x5
 811 008e 52       		.byte	0x52
 812 008f 3A000000 		.4byte	0x3a
 813 0093 04       		.uleb128 0x4
 814 0094 DB060000 		.4byte	.LASF13
 815 0098 05       		.byte	0x5
 816 0099 53       		.byte	0x53
 817 009a 5D000000 		.4byte	0x5d
 818 009e 04       		.uleb128 0x4
 819 009f CA060000 		.4byte	.LASF14
 820 00a3 05       		.byte	0x5
 821 00a4 54       		.byte	0x54
 822 00a5 64000000 		.4byte	0x64
 823 00a9 04       		.uleb128 0x4
 824 00aa C5020000 		.4byte	.LASF15
 825 00ae 06       		.byte	0x6
 826 00af 4D       		.byte	0x4d
 827 00b0 9E000000 		.4byte	0x9e
 828 00b4 04       		.uleb128 0x4
 829 00b5 33070000 		.4byte	.LASF16
 830 00b9 06       		.byte	0x6
 831 00ba 4F       		.byte	0x4f
 832 00bb 9E000000 		.4byte	0x9e
 833 00bf 04       		.uleb128 0x4
 834 00c0 CD000000 		.4byte	.LASF17
 835 00c4 06       		.byte	0x6
 836 00c5 54       		.byte	0x54
 837 00c6 A9000000 		.4byte	0xa9
 838 00ca 04       		.uleb128 0x4
 839 00cb 91020000 		.4byte	.LASF18
 840 00cf 06       		.byte	0x6
 841 00d0 78       		.byte	0x78
 842 00d1 93000000 		.4byte	0x93
 843 00d5 05       		.uleb128 0x5
 844 00d6 C9030000 		.4byte	.LASF19
 845 00da 02       		.byte	0x2
 846 00db 1101     		.2byte	0x111
 847 00dd 88000000 		.4byte	0x88
 848 00e1 05       		.uleb128 0x5
 849 00e2 41010000 		.4byte	.LASF20
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 54


 850 00e6 02       		.byte	0x2
 851 00e7 F701     		.2byte	0x1f7
 852 00e9 CA000000 		.4byte	0xca
 853 00ed 05       		.uleb128 0x5
 854 00ee 2A000000 		.4byte	.LASF21
 855 00f2 02       		.byte	0x2
 856 00f3 3502     		.2byte	0x235
 857 00f5 A9000000 		.4byte	0xa9
 858 00f9 05       		.uleb128 0x5
 859 00fa F2050000 		.4byte	.LASF22
 860 00fe 02       		.byte	0x2
 861 00ff 5D02     		.2byte	0x25d
 862 0101 A9000000 		.4byte	0xa9
 863 0105 05       		.uleb128 0x5
 864 0106 A4030000 		.4byte	.LASF23
 865 010a 02       		.byte	0x2
 866 010b 6C02     		.2byte	0x26c
 867 010d A9000000 		.4byte	0xa9
 868 0111 06       		.uleb128 0x6
 869 0112 0C       		.byte	0xc
 870 0113 02       		.byte	0x2
 871 0114 7202     		.2byte	0x272
 872 0116 42010000 		.4byte	0x142
 873 011a 07       		.uleb128 0x7
 874 011b 4A010000 		.4byte	.LASF24
 875 011f 02       		.byte	0x2
 876 0120 7302     		.2byte	0x273
 877 0122 ED000000 		.4byte	0xed
 878 0126 00       		.byte	0
 879 0127 07       		.uleb128 0x7
 880 0128 8B040000 		.4byte	.LASF25
 881 012c 02       		.byte	0x2
 882 012d 7402     		.2byte	0x274
 883 012f ED000000 		.4byte	0xed
 884 0133 04       		.byte	0x4
 885 0134 07       		.uleb128 0x7
 886 0135 88020000 		.4byte	.LASF26
 887 0139 02       		.byte	0x2
 888 013a 7502     		.2byte	0x275
 889 013c ED000000 		.4byte	0xed
 890 0140 08       		.byte	0x8
 891 0141 00       		.byte	0
 892 0142 05       		.uleb128 0x5
 893 0143 93050000 		.4byte	.LASF27
 894 0147 02       		.byte	0x2
 895 0148 7A02     		.2byte	0x27a
 896 014a 11010000 		.4byte	0x111
 897 014e 06       		.uleb128 0x6
 898 014f 08       		.byte	0x8
 899 0150 02       		.byte	0x2
 900 0151 7D02     		.2byte	0x27d
 901 0153 72010000 		.4byte	0x172
 902 0157 07       		.uleb128 0x7
 903 0158 98020000 		.4byte	.LASF28
 904 015c 02       		.byte	0x2
 905 015d 7E02     		.2byte	0x27e
 906 015f ED000000 		.4byte	0xed
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 55


 907 0163 00       		.byte	0
 908 0164 07       		.uleb128 0x7
 909 0165 EC050000 		.4byte	.LASF29
 910 0169 02       		.byte	0x2
 911 016a 7F02     		.2byte	0x27f
 912 016c F9000000 		.4byte	0xf9
 913 0170 04       		.byte	0x4
 914 0171 00       		.byte	0
 915 0172 05       		.uleb128 0x5
 916 0173 81010000 		.4byte	.LASF30
 917 0177 02       		.byte	0x2
 918 0178 8002     		.2byte	0x280
 919 017a 4E010000 		.4byte	0x14e
 920 017e 08       		.uleb128 0x8
 921 017f 01       		.byte	0x1
 922 0180 2C000000 		.4byte	0x2c
 923 0184 02       		.byte	0x2
 924 0185 8A02     		.2byte	0x28a
 925 0187 98010000 		.4byte	0x198
 926 018b 09       		.uleb128 0x9
 927 018c 62050000 		.4byte	.LASF31
 928 0190 00       		.byte	0
 929 0191 09       		.uleb128 0x9
 930 0192 43050000 		.4byte	.LASF32
 931 0196 01       		.byte	0x1
 932 0197 00       		.byte	0
 933 0198 05       		.uleb128 0x5
 934 0199 38030000 		.4byte	.LASF33
 935 019d 02       		.byte	0x2
 936 019e 8D02     		.2byte	0x28d
 937 01a0 7E010000 		.4byte	0x17e
 938 01a4 05       		.uleb128 0x5
 939 01a5 7A030000 		.4byte	.LASF34
 940 01a9 02       		.byte	0x2
 941 01aa 9002     		.2byte	0x290
 942 01ac 98010000 		.4byte	0x198
 943 01b0 06       		.uleb128 0x6
 944 01b1 0C       		.byte	0xc
 945 01b2 02       		.byte	0x2
 946 01b3 9402     		.2byte	0x294
 947 01b5 DF010000 		.4byte	0x1df
 948 01b9 0A       		.uleb128 0xa
 949 01ba 6300     		.ascii	"c\000"
 950 01bc 02       		.byte	0x2
 951 01bd 9602     		.2byte	0x296
 952 01bf 05010000 		.4byte	0x105
 953 01c3 00       		.byte	0
 954 01c4 07       		.uleb128 0x7
 955 01c5 56060000 		.4byte	.LASF35
 956 01c9 02       		.byte	0x2
 957 01ca 9802     		.2byte	0x298
 958 01cc F9000000 		.4byte	0xf9
 959 01d0 04       		.byte	0x4
 960 01d1 07       		.uleb128 0x7
 961 01d2 08030000 		.4byte	.LASF36
 962 01d6 02       		.byte	0x2
 963 01d7 9A02     		.2byte	0x29a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 56


 964 01d9 A4010000 		.4byte	0x1a4
 965 01dd 08       		.byte	0x8
 966 01de 00       		.byte	0
 967 01df 05       		.uleb128 0x5
 968 01e0 23010000 		.4byte	.LASF37
 969 01e4 02       		.byte	0x2
 970 01e5 9B02     		.2byte	0x29b
 971 01e7 B0010000 		.4byte	0x1b0
 972 01eb 06       		.uleb128 0x6
 973 01ec 10       		.byte	0x10
 974 01ed 02       		.byte	0x2
 975 01ee 9F02     		.2byte	0x29f
 976 01f0 29020000 		.4byte	0x229
 977 01f4 07       		.uleb128 0x7
 978 01f5 86040000 		.4byte	.LASF38
 979 01f9 02       		.byte	0x2
 980 01fa A002     		.2byte	0x2a0
 981 01fc BF000000 		.4byte	0xbf
 982 0200 00       		.byte	0
 983 0201 07       		.uleb128 0x7
 984 0202 04070000 		.4byte	.LASF39
 985 0206 02       		.byte	0x2
 986 0207 A102     		.2byte	0x2a1
 987 0209 ED000000 		.4byte	0xed
 988 020d 04       		.byte	0x4
 989 020e 07       		.uleb128 0x7
 990 020f 1D010000 		.4byte	.LASF40
 991 0213 02       		.byte	0x2
 992 0214 A202     		.2byte	0x2a2
 993 0216 ED000000 		.4byte	0xed
 994 021a 08       		.byte	0x8
 995 021b 07       		.uleb128 0x7
 996 021c 0D000000 		.4byte	.LASF41
 997 0220 02       		.byte	0x2
 998 0221 A302     		.2byte	0x2a3
 999 0223 F9000000 		.4byte	0xf9
 1000 0227 0C       		.byte	0xc
 1001 0228 00       		.byte	0
 1002 0229 05       		.uleb128 0x5
 1003 022a EF040000 		.4byte	.LASF42
 1004 022e 02       		.byte	0x2
 1005 022f A402     		.2byte	0x2a4
 1006 0231 EB010000 		.4byte	0x1eb
 1007 0235 08       		.uleb128 0x8
 1008 0236 01       		.byte	0x1
 1009 0237 2C000000 		.4byte	0x2c
 1010 023b 02       		.byte	0x2
 1011 023c 5904     		.2byte	0x459
 1012 023e 85020000 		.4byte	0x285
 1013 0242 09       		.uleb128 0x9
 1014 0243 98040000 		.4byte	.LASF43
 1015 0247 00       		.byte	0
 1016 0248 09       		.uleb128 0x9
 1017 0249 AF040000 		.4byte	.LASF44
 1018 024d 01       		.byte	0x1
 1019 024e 09       		.uleb128 0x9
 1020 024f 00000000 		.4byte	.LASF45
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 57


 1021 0253 02       		.byte	0x2
 1022 0254 09       		.uleb128 0x9
 1023 0255 ED030000 		.4byte	.LASF46
 1024 0259 03       		.byte	0x3
 1025 025a 09       		.uleb128 0x9
 1026 025b 08040000 		.4byte	.LASF47
 1027 025f 04       		.byte	0x4
 1028 0260 09       		.uleb128 0x9
 1029 0261 D9030000 		.4byte	.LASF48
 1030 0265 05       		.byte	0x5
 1031 0266 09       		.uleb128 0x9
 1032 0267 98010000 		.4byte	.LASF49
 1033 026b 06       		.byte	0x6
 1034 026c 09       		.uleb128 0x9
 1035 026d 04060000 		.4byte	.LASF50
 1036 0271 07       		.byte	0x7
 1037 0272 09       		.uleb128 0x9
 1038 0273 0D070000 		.4byte	.LASF51
 1039 0277 08       		.byte	0x8
 1040 0278 09       		.uleb128 0x9
 1041 0279 57030000 		.4byte	.LASF52
 1042 027d 09       		.byte	0x9
 1043 027e 09       		.uleb128 0x9
 1044 027f 3E040000 		.4byte	.LASF53
 1045 0283 0A       		.byte	0xa
 1046 0284 00       		.byte	0
 1047 0285 05       		.uleb128 0x5
 1048 0286 38060000 		.4byte	.LASF54
 1049 028a 02       		.byte	0x2
 1050 028b 6504     		.2byte	0x465
 1051 028d 35020000 		.4byte	0x235
 1052 0291 0B       		.uleb128 0xb
 1053 0292 D9000000 		.4byte	.LASF55
 1054 0296 01       		.byte	0x1
 1055 0297 AB       		.byte	0xab
 1056 0298 00000000 		.4byte	.LFB34
 1057 029c 1C000000 		.4byte	.LFE34-.LFB34
 1058 02a0 01       		.uleb128 0x1
 1059 02a1 9C       		.byte	0x9c
 1060 02a2 B5020000 		.4byte	0x2b5
 1061 02a6 0C       		.uleb128 0xc
 1062 02a7 74696400 		.ascii	"tid\000"
 1063 02ab 01       		.byte	0x1
 1064 02ac AB       		.byte	0xab
 1065 02ad CA000000 		.4byte	0xca
 1066 02b1 02       		.uleb128 0x2
 1067 02b2 91       		.byte	0x91
 1068 02b3 74       		.sleb128 -12
 1069 02b4 00       		.byte	0
 1070 02b5 0B       		.uleb128 0xb
 1071 02b6 DF020000 		.4byte	.LASF56
 1072 02ba 01       		.byte	0x1
 1073 02bb B1       		.byte	0xb1
 1074 02bc 00000000 		.4byte	.LFB35
 1075 02c0 20000000 		.4byte	.LFE35-.LFB35
 1076 02c4 01       		.uleb128 0x1
 1077 02c5 9C       		.byte	0x9c
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 58


 1078 02c6 D9020000 		.4byte	0x2d9
 1079 02ca 0C       		.uleb128 0xc
 1080 02cb 74696400 		.ascii	"tid\000"
 1081 02cf 01       		.byte	0x1
 1082 02d0 B1       		.byte	0xb1
 1083 02d1 CA000000 		.4byte	0xca
 1084 02d5 02       		.uleb128 0x2
 1085 02d6 91       		.byte	0x91
 1086 02d7 74       		.sleb128 -12
 1087 02d8 00       		.byte	0
 1088 02d9 0D       		.uleb128 0xd
 1089 02da 18060000 		.4byte	.LASF57
 1090 02de 02       		.byte	0x2
 1091 02df D203     		.2byte	0x3d2
 1092 02e1 00000000 		.4byte	.LFB39
 1093 02e5 12000000 		.4byte	.LFE39-.LFB39
 1094 02e9 01       		.uleb128 0x1
 1095 02ea 9C       		.byte	0x9c
 1096 02eb FF020000 		.4byte	0x2ff
 1097 02ef 0E       		.uleb128 0xe
 1098 02f0 746D7000 		.ascii	"tmp\000"
 1099 02f4 02       		.byte	0x2
 1100 02f5 D203     		.2byte	0x3d2
 1101 02f7 CA000000 		.4byte	0xca
 1102 02fb 02       		.uleb128 0x2
 1103 02fc 91       		.byte	0x91
 1104 02fd 74       		.sleb128 -12
 1105 02fe 00       		.byte	0
 1106 02ff 0D       		.uleb128 0xd
 1107 0300 64060000 		.4byte	.LASF58
 1108 0304 02       		.byte	0x2
 1109 0305 D303     		.2byte	0x3d3
 1110 0307 00000000 		.4byte	.LFB40
 1111 030b 14000000 		.4byte	.LFE40-.LFB40
 1112 030f 01       		.uleb128 0x1
 1113 0310 9C       		.byte	0x9c
 1114 0311 34030000 		.4byte	0x334
 1115 0315 0F       		.uleb128 0xf
 1116 0316 5E060000 		.4byte	.LASF59
 1117 031a 02       		.byte	0x2
 1118 031b D303     		.2byte	0x3d3
 1119 031d CA000000 		.4byte	0xca
 1120 0321 02       		.uleb128 0x2
 1121 0322 91       		.byte	0x91
 1122 0323 74       		.sleb128 -12
 1123 0324 0F       		.uleb128 0xf
 1124 0325 81040000 		.4byte	.LASF60
 1125 0329 02       		.byte	0x2
 1126 032a D303     		.2byte	0x3d3
 1127 032c A9000000 		.4byte	0xa9
 1128 0330 02       		.uleb128 0x2
 1129 0331 91       		.byte	0x91
 1130 0332 70       		.sleb128 -16
 1131 0333 00       		.byte	0
 1132 0334 0D       		.uleb128 0xd
 1133 0335 C2050000 		.4byte	.LASF61
 1134 0339 02       		.byte	0x2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 59


 1135 033a 8404     		.2byte	0x484
 1136 033c 00000000 		.4byte	.LFB41
 1137 0340 14000000 		.4byte	.LFE41-.LFB41
 1138 0344 01       		.uleb128 0x1
 1139 0345 9C       		.byte	0x9c
 1140 0346 5A030000 		.4byte	0x35a
 1141 034a 0E       		.uleb128 0xe
 1142 034b 63747800 		.ascii	"ctx\000"
 1143 034f 02       		.byte	0x2
 1144 0350 8504     		.2byte	0x485
 1145 0352 85020000 		.4byte	0x285
 1146 0356 02       		.uleb128 0x2
 1147 0357 91       		.byte	0x91
 1148 0358 77       		.sleb128 -9
 1149 0359 00       		.byte	0
 1150 035a 10       		.uleb128 0x10
 1151 035b 9E020000 		.4byte	.LASF64
 1152 035f 03       		.byte	0x3
 1153 0360 EE       		.byte	0xee
 1154 0361 CA000000 		.4byte	0xca
 1155 0365 00000000 		.4byte	.LFB53
 1156 0369 14000000 		.4byte	.LFE53-.LFB53
 1157 036d 01       		.uleb128 0x1
 1158 036e 9C       		.byte	0x9c
 1159 036f 11       		.uleb128 0x11
 1160 0370 0D050000 		.4byte	.LASF62
 1161 0374 03       		.byte	0x3
 1162 0375 8D01     		.2byte	0x18d
 1163 0377 00000000 		.4byte	.LFB57
 1164 037b 0E000000 		.4byte	.LFE57-.LFB57
 1165 037f 01       		.uleb128 0x1
 1166 0380 9C       		.byte	0x9c
 1167 0381 12       		.uleb128 0x12
 1168 0382 D7040000 		.4byte	.LASF63
 1169 0386 03       		.byte	0x3
 1170 0387 9A01     		.2byte	0x19a
 1171 0389 00000000 		.4byte	.LFB58
 1172 038d 0C000000 		.4byte	.LFE58-.LFB58
 1173 0391 01       		.uleb128 0x1
 1174 0392 9C       		.byte	0x9c
 1175 0393 13       		.uleb128 0x13
 1176 0394 B6010000 		.4byte	.LASF65
 1177 0398 03       		.byte	0x3
 1178 0399 D301     		.2byte	0x1d3
 1179 039b CA000000 		.4byte	0xca
 1180 039f 00000000 		.4byte	.LFB61
 1181 03a3 28000000 		.4byte	.LFE61-.LFB61
 1182 03a7 01       		.uleb128 0x1
 1183 03a8 9C       		.byte	0x9c
 1184 03a9 0D       		.uleb128 0xd
 1185 03aa 3A020000 		.4byte	.LASF66
 1186 03ae 03       		.byte	0x3
 1187 03af 2902     		.2byte	0x229
 1188 03b1 00000000 		.4byte	.LFB63
 1189 03b5 20000000 		.4byte	.LFE63-.LFB63
 1190 03b9 01       		.uleb128 0x1
 1191 03ba 9C       		.byte	0x9c
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 60


 1192 03bb CF030000 		.4byte	0x3cf
 1193 03bf 0F       		.uleb128 0xf
 1194 03c0 E4060000 		.4byte	.LASF67
 1195 03c4 03       		.byte	0x3
 1196 03c5 2902     		.2byte	0x229
 1197 03c7 E1000000 		.4byte	0xe1
 1198 03cb 02       		.uleb128 0x2
 1199 03cc 91       		.byte	0x91
 1200 03cd 74       		.sleb128 -12
 1201 03ce 00       		.byte	0
 1202 03cf 14       		.uleb128 0x14
 1203 03d0 B0060000 		.4byte	.LASF68
 1204 03d4 03       		.byte	0x3
 1205 03d5 5B02     		.2byte	0x25b
 1206 03d7 00000000 		.4byte	.LFB65
 1207 03db 30000000 		.4byte	.LFE65-.LFB65
 1208 03df 01       		.uleb128 0x1
 1209 03e0 9C       		.byte	0x9c
 1210 03e1 F5030000 		.4byte	0x3f5
 1211 03e5 0F       		.uleb128 0xf
 1212 03e6 D4060000 		.4byte	.LASF69
 1213 03ea 03       		.byte	0x3
 1214 03eb 5B02     		.2byte	0x25b
 1215 03ed E1000000 		.4byte	0xe1
 1216 03f1 02       		.uleb128 0x2
 1217 03f2 91       		.byte	0x91
 1218 03f3 74       		.sleb128 -12
 1219 03f4 00       		.byte	0
 1220 03f5 15       		.uleb128 0x15
 1221 03f6 BC040000 		.4byte	.LASF101
 1222 03fa 04       		.byte	0x4
 1223 03fb 3E       		.byte	0x3e
 1224 03fc 72000000 		.4byte	0x72
 1225 0400 00000000 		.4byte	.LFB70
 1226 0404 34000000 		.4byte	.LFE70-.LFB70
 1227 0408 01       		.uleb128 0x1
 1228 0409 9C       		.byte	0x9c
 1229 040a 1D040000 		.4byte	0x41d
 1230 040e 16       		.uleb128 0x16
 1231 040f A7040000 		.4byte	.LASF70
 1232 0413 04       		.byte	0x4
 1233 0414 3E       		.byte	0x3e
 1234 0415 CA000000 		.4byte	0xca
 1235 0419 02       		.uleb128 0x2
 1236 041a 91       		.byte	0x91
 1237 041b 74       		.sleb128 -12
 1238 041c 00       		.byte	0
 1239 041d 17       		.uleb128 0x17
 1240 041e AA050000 		.4byte	.LASF71
 1241 0422 04       		.byte	0x4
 1242 0423 48       		.byte	0x48
 1243 0424 00000000 		.4byte	.LFB71
 1244 0428 38000000 		.4byte	.LFE71-.LFB71
 1245 042c 01       		.uleb128 0x1
 1246 042d 9C       		.byte	0x9c
 1247 042e 40040000 		.4byte	0x440
 1248 0432 18       		.uleb128 0x18
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 61


 1249 0433 32020000 		.4byte	.LASF72
 1250 0437 04       		.byte	0x4
 1251 0438 4A       		.byte	0x4a
 1252 0439 CA000000 		.4byte	0xca
 1253 043d 01       		.uleb128 0x1
 1254 043e 54       		.byte	0x54
 1255 043f 00       		.byte	0
 1256 0440 19       		.uleb128 0x19
 1257 0441 06010000 		.4byte	.LASF102
 1258 0445 04       		.byte	0x4
 1259 0446 61       		.byte	0x61
 1260 0447 00000000 		.4byte	.LFB72
 1261 044b 38010000 		.4byte	.LFE72-.LFB72
 1262 044f 01       		.uleb128 0x1
 1263 0450 9C       		.byte	0x9c
 1264 0451 80040000 		.4byte	0x480
 1265 0455 18       		.uleb128 0x18
 1266 0456 A7040000 		.4byte	.LASF70
 1267 045a 04       		.byte	0x4
 1268 045b 63       		.byte	0x63
 1269 045c CA000000 		.4byte	0xca
 1270 0460 02       		.uleb128 0x2
 1271 0461 91       		.byte	0x91
 1272 0462 74       		.sleb128 -12
 1273 0463 18       		.uleb128 0x18
 1274 0464 79040000 		.4byte	.LASF73
 1275 0468 04       		.byte	0x4
 1276 0469 63       		.byte	0x63
 1277 046a CA000000 		.4byte	0xca
 1278 046e 02       		.uleb128 0x2
 1279 046f 91       		.byte	0x91
 1280 0470 6C       		.sleb128 -20
 1281 0471 18       		.uleb128 0x18
 1282 0472 33050000 		.4byte	.LASF74
 1283 0476 04       		.byte	0x4
 1284 0477 64       		.byte	0x64
 1285 0478 CA000000 		.4byte	0xca
 1286 047c 02       		.uleb128 0x2
 1287 047d 91       		.byte	0x91
 1288 047e 70       		.sleb128 -16
 1289 047f 00       		.byte	0
 1290 0480 1A       		.uleb128 0x1a
 1291 0481 EF060000 		.4byte	.LASF75
 1292 0485 07       		.byte	0x7
 1293 0486 44       		.byte	0x44
 1294 0487 A9000000 		.4byte	0xa9
 1295 048b 1A       		.uleb128 0x1a
 1296 048c 6F020000 		.4byte	.LASF76
 1297 0490 01       		.byte	0x1
 1298 0491 48       		.byte	0x48
 1299 0492 CA000000 		.4byte	0xca
 1300 0496 1B       		.uleb128 0x1b
 1301 0497 AD040000 		.4byte	0x4ad
 1302 049b A6040000 		.4byte	0x4a6
 1303 049f 1C       		.uleb128 0x1c
 1304 04a0 A6040000 		.4byte	0x4a6
 1305 04a4 03       		.byte	0x3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 62


 1306 04a5 00       		.byte	0
 1307 04a6 02       		.uleb128 0x2
 1308 04a7 04       		.byte	0x4
 1309 04a8 07       		.byte	0x7
 1310 04a9 FF030000 		.4byte	.LASF77
 1311 04ad 1D       		.uleb128 0x1d
 1312 04ae A9000000 		.4byte	0xa9
 1313 04b2 1A       		.uleb128 0x1a
 1314 04b3 C6010000 		.4byte	.LASF78
 1315 04b7 02       		.byte	0x2
 1316 04b8 AE       		.byte	0xae
 1317 04b9 BD040000 		.4byte	0x4bd
 1318 04bd 1D       		.uleb128 0x1d
 1319 04be 96040000 		.4byte	0x496
 1320 04c2 1A       		.uleb128 0x1a
 1321 04c3 22070000 		.4byte	.LASF79
 1322 04c7 02       		.byte	0x2
 1323 04c8 B2       		.byte	0xb2
 1324 04c9 CD040000 		.4byte	0x4cd
 1325 04cd 1D       		.uleb128 0x1d
 1326 04ce 96040000 		.4byte	0x496
 1327 04d2 1A       		.uleb128 0x1a
 1328 04d3 90030000 		.4byte	.LASF80
 1329 04d7 02       		.byte	0x2
 1330 04d8 B3       		.byte	0xb3
 1331 04d9 DD040000 		.4byte	0x4dd
 1332 04dd 1D       		.uleb128 0x1d
 1333 04de 96040000 		.4byte	0x496
 1334 04e2 1B       		.uleb128 0x1b
 1335 04e3 A9000000 		.4byte	0xa9
 1336 04e7 F2040000 		.4byte	0x4f2
 1337 04eb 1C       		.uleb128 0x1c
 1338 04ec A6040000 		.4byte	0x4a6
 1339 04f0 03       		.byte	0x3
 1340 04f1 00       		.byte	0
 1341 04f2 1A       		.uleb128 0x1a
 1342 04f3 6D030000 		.4byte	.LASF81
 1343 04f7 02       		.byte	0x2
 1344 04f8 CA       		.byte	0xca
 1345 04f9 E2040000 		.4byte	0x4e2
 1346 04fd 1B       		.uleb128 0x1b
 1347 04fe CA000000 		.4byte	0xca
 1348 0502 0D050000 		.4byte	0x50d
 1349 0506 1C       		.uleb128 0x1c
 1350 0507 A6040000 		.4byte	0x4a6
 1351 050b 03       		.byte	0x3
 1352 050c 00       		.byte	0
 1353 050d 1A       		.uleb128 0x1a
 1354 050e 6B050000 		.4byte	.LASF82
 1355 0512 02       		.byte	0x2
 1356 0513 D2       		.byte	0xd2
 1357 0514 FD040000 		.4byte	0x4fd
 1358 0518 1A       		.uleb128 0x1a
 1359 0519 A4060000 		.4byte	.LASF83
 1360 051d 02       		.byte	0x2
 1361 051e DA       		.byte	0xda
 1362 051f E2040000 		.4byte	0x4e2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 63


 1363 0523 1A       		.uleb128 0x1a
 1364 0524 12000000 		.4byte	.LASF84
 1365 0528 02       		.byte	0x2
 1366 0529 DE       		.byte	0xde
 1367 052a FD040000 		.4byte	0x4fd
 1368 052e 1A       		.uleb128 0x1a
 1369 052f 33000000 		.4byte	.LASF85
 1370 0533 02       		.byte	0x2
 1371 0534 E2       		.byte	0xe2
 1372 0535 CA000000 		.4byte	0xca
 1373 0539 1A       		.uleb128 0x1a
 1374 053a 7C060000 		.4byte	.LASF86
 1375 053e 02       		.byte	0x2
 1376 053f F7       		.byte	0xf7
 1377 0540 A9000000 		.4byte	0xa9
 1378 0544 1E       		.uleb128 0x1e
 1379 0545 DE050000 		.4byte	.LASF87
 1380 0549 02       		.byte	0x2
 1381 054a 3F01     		.2byte	0x13f
 1382 054c D5000000 		.4byte	0xd5
 1383 0550 1E       		.uleb128 0x1e
 1384 0551 76050000 		.4byte	.LASF88
 1385 0555 02       		.byte	0x2
 1386 0556 5C01     		.2byte	0x15c
 1387 0558 E2040000 		.4byte	0x4e2
 1388 055c 1B       		.uleb128 0x1b
 1389 055d BF000000 		.4byte	0xbf
 1390 0561 6C050000 		.4byte	0x56c
 1391 0565 1C       		.uleb128 0x1c
 1392 0566 A6040000 		.4byte	0x4a6
 1393 056a 03       		.byte	0x3
 1394 056b 00       		.byte	0
 1395 056c 1E       		.uleb128 0x1e
 1396 056d F7020000 		.4byte	.LASF89
 1397 0571 02       		.byte	0x2
 1398 0572 6701     		.2byte	0x167
 1399 0574 5C050000 		.4byte	0x55c
 1400 0578 1B       		.uleb128 0x1b
 1401 0579 88050000 		.4byte	0x588
 1402 057d 88050000 		.4byte	0x588
 1403 0581 1C       		.uleb128 0x1c
 1404 0582 A6040000 		.4byte	0x4a6
 1405 0586 00       		.byte	0
 1406 0587 00       		.byte	0
 1407 0588 1D       		.uleb128 0x1d
 1408 0589 42010000 		.4byte	0x142
 1409 058d 1E       		.uleb128 0x1e
 1410 058e 24050000 		.4byte	.LASF90
 1411 0592 02       		.byte	0x2
 1412 0593 CA02     		.2byte	0x2ca
 1413 0595 99050000 		.4byte	0x599
 1414 0599 1D       		.uleb128 0x1d
 1415 059a 78050000 		.4byte	0x578
 1416 059e 1B       		.uleb128 0x1b
 1417 059f AE050000 		.4byte	0x5ae
 1418 05a3 AE050000 		.4byte	0x5ae
 1419 05a7 1C       		.uleb128 0x1c
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 64


 1420 05a8 A6040000 		.4byte	0x4a6
 1421 05ac 00       		.byte	0
 1422 05ad 00       		.byte	0
 1423 05ae 1D       		.uleb128 0x1d
 1424 05af DF010000 		.4byte	0x1df
 1425 05b3 1E       		.uleb128 0x1e
 1426 05b4 B0030000 		.4byte	.LASF91
 1427 05b8 02       		.byte	0x2
 1428 05b9 DD02     		.2byte	0x2dd
 1429 05bb BF050000 		.4byte	0x5bf
 1430 05bf 1D       		.uleb128 0x1d
 1431 05c0 9E050000 		.4byte	0x59e
 1432 05c4 1B       		.uleb128 0x1b
 1433 05c5 72010000 		.4byte	0x172
 1434 05c9 D4050000 		.4byte	0x5d4
 1435 05cd 1C       		.uleb128 0x1c
 1436 05ce A6040000 		.4byte	0x4a6
 1437 05d2 00       		.byte	0
 1438 05d3 00       		.byte	0
 1439 05d4 1E       		.uleb128 0x1e
 1440 05d5 47060000 		.4byte	.LASF92
 1441 05d9 02       		.byte	0x2
 1442 05da FB02     		.2byte	0x2fb
 1443 05dc C4050000 		.4byte	0x5c4
 1444 05e0 1B       		.uleb128 0x1b
 1445 05e1 29020000 		.4byte	0x229
 1446 05e5 F0050000 		.4byte	0x5f0
 1447 05e9 1C       		.uleb128 0x1c
 1448 05ea A6040000 		.4byte	0x4a6
 1449 05ee 00       		.byte	0
 1450 05ef 00       		.byte	0
 1451 05f0 1E       		.uleb128 0x1e
 1452 05f1 8B060000 		.4byte	.LASF93
 1453 05f5 02       		.byte	0x2
 1454 05f6 0403     		.2byte	0x304
 1455 05f8 E0050000 		.4byte	0x5e0
 1456 05fc 1A       		.uleb128 0x1a
 1457 05fd 20030000 		.4byte	.LASF94
 1458 0601 08       		.byte	0x8
 1459 0602 40       		.byte	0x40
 1460 0603 A9000000 		.4byte	0xa9
 1461 0607 1A       		.uleb128 0x1a
 1462 0608 56020000 		.4byte	.LASF95
 1463 060c 08       		.byte	0x8
 1464 060d 47       		.byte	0x47
 1465 060e B4000000 		.4byte	0xb4
 1466 0612 1A       		.uleb128 0x1a
 1467 0613 2B040000 		.4byte	.LASF96
 1468 0617 08       		.byte	0x8
 1469 0618 4A       		.byte	0x4a
 1470 0619 A9000000 		.4byte	0xa9
 1471 061d 1B       		.uleb128 0x1b
 1472 061e 2D060000 		.4byte	0x62d
 1473 0622 2D060000 		.4byte	0x62d
 1474 0626 1C       		.uleb128 0x1c
 1475 0627 A6040000 		.4byte	0x4a6
 1476 062b FF       		.byte	0xff
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 65


 1477 062c 00       		.byte	0
 1478 062d 1D       		.uleb128 0x1d
 1479 062e 7D000000 		.4byte	0x7d
 1480 0632 1E       		.uleb128 0x1e
 1481 0633 74010000 		.4byte	.LASF97
 1482 0637 03       		.byte	0x3
 1483 0638 AB01     		.2byte	0x1ab
 1484 063a 3E060000 		.4byte	0x63e
 1485 063e 1D       		.uleb128 0x1d
 1486 063f 1D060000 		.4byte	0x61d
 1487 0643 00       		.byte	0
 1488              		.section	.debug_abbrev,"",%progbits
 1489              	.Ldebug_abbrev0:
 1490 0000 01       		.uleb128 0x1
 1491 0001 11       		.uleb128 0x11
 1492 0002 01       		.byte	0x1
 1493 0003 25       		.uleb128 0x25
 1494 0004 0E       		.uleb128 0xe
 1495 0005 13       		.uleb128 0x13
 1496 0006 0B       		.uleb128 0xb
 1497 0007 03       		.uleb128 0x3
 1498 0008 0E       		.uleb128 0xe
 1499 0009 1B       		.uleb128 0x1b
 1500 000a 0E       		.uleb128 0xe
 1501 000b 55       		.uleb128 0x55
 1502 000c 17       		.uleb128 0x17
 1503 000d 11       		.uleb128 0x11
 1504 000e 01       		.uleb128 0x1
 1505 000f 10       		.uleb128 0x10
 1506 0010 17       		.uleb128 0x17
 1507 0011 00       		.byte	0
 1508 0012 00       		.byte	0
 1509 0013 02       		.uleb128 0x2
 1510 0014 24       		.uleb128 0x24
 1511 0015 00       		.byte	0
 1512 0016 0B       		.uleb128 0xb
 1513 0017 0B       		.uleb128 0xb
 1514 0018 3E       		.uleb128 0x3e
 1515 0019 0B       		.uleb128 0xb
 1516 001a 03       		.uleb128 0x3
 1517 001b 0E       		.uleb128 0xe
 1518 001c 00       		.byte	0
 1519 001d 00       		.byte	0
 1520 001e 03       		.uleb128 0x3
 1521 001f 24       		.uleb128 0x24
 1522 0020 00       		.byte	0
 1523 0021 0B       		.uleb128 0xb
 1524 0022 0B       		.uleb128 0xb
 1525 0023 3E       		.uleb128 0x3e
 1526 0024 0B       		.uleb128 0xb
 1527 0025 03       		.uleb128 0x3
 1528 0026 08       		.uleb128 0x8
 1529 0027 00       		.byte	0
 1530 0028 00       		.byte	0
 1531 0029 04       		.uleb128 0x4
 1532 002a 16       		.uleb128 0x16
 1533 002b 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 66


 1534 002c 03       		.uleb128 0x3
 1535 002d 0E       		.uleb128 0xe
 1536 002e 3A       		.uleb128 0x3a
 1537 002f 0B       		.uleb128 0xb
 1538 0030 3B       		.uleb128 0x3b
 1539 0031 0B       		.uleb128 0xb
 1540 0032 49       		.uleb128 0x49
 1541 0033 13       		.uleb128 0x13
 1542 0034 00       		.byte	0
 1543 0035 00       		.byte	0
 1544 0036 05       		.uleb128 0x5
 1545 0037 16       		.uleb128 0x16
 1546 0038 00       		.byte	0
 1547 0039 03       		.uleb128 0x3
 1548 003a 0E       		.uleb128 0xe
 1549 003b 3A       		.uleb128 0x3a
 1550 003c 0B       		.uleb128 0xb
 1551 003d 3B       		.uleb128 0x3b
 1552 003e 05       		.uleb128 0x5
 1553 003f 49       		.uleb128 0x49
 1554 0040 13       		.uleb128 0x13
 1555 0041 00       		.byte	0
 1556 0042 00       		.byte	0
 1557 0043 06       		.uleb128 0x6
 1558 0044 13       		.uleb128 0x13
 1559 0045 01       		.byte	0x1
 1560 0046 0B       		.uleb128 0xb
 1561 0047 0B       		.uleb128 0xb
 1562 0048 3A       		.uleb128 0x3a
 1563 0049 0B       		.uleb128 0xb
 1564 004a 3B       		.uleb128 0x3b
 1565 004b 05       		.uleb128 0x5
 1566 004c 01       		.uleb128 0x1
 1567 004d 13       		.uleb128 0x13
 1568 004e 00       		.byte	0
 1569 004f 00       		.byte	0
 1570 0050 07       		.uleb128 0x7
 1571 0051 0D       		.uleb128 0xd
 1572 0052 00       		.byte	0
 1573 0053 03       		.uleb128 0x3
 1574 0054 0E       		.uleb128 0xe
 1575 0055 3A       		.uleb128 0x3a
 1576 0056 0B       		.uleb128 0xb
 1577 0057 3B       		.uleb128 0x3b
 1578 0058 05       		.uleb128 0x5
 1579 0059 49       		.uleb128 0x49
 1580 005a 13       		.uleb128 0x13
 1581 005b 38       		.uleb128 0x38
 1582 005c 0B       		.uleb128 0xb
 1583 005d 00       		.byte	0
 1584 005e 00       		.byte	0
 1585 005f 08       		.uleb128 0x8
 1586 0060 04       		.uleb128 0x4
 1587 0061 01       		.byte	0x1
 1588 0062 0B       		.uleb128 0xb
 1589 0063 0B       		.uleb128 0xb
 1590 0064 49       		.uleb128 0x49
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 67


 1591 0065 13       		.uleb128 0x13
 1592 0066 3A       		.uleb128 0x3a
 1593 0067 0B       		.uleb128 0xb
 1594 0068 3B       		.uleb128 0x3b
 1595 0069 05       		.uleb128 0x5
 1596 006a 01       		.uleb128 0x1
 1597 006b 13       		.uleb128 0x13
 1598 006c 00       		.byte	0
 1599 006d 00       		.byte	0
 1600 006e 09       		.uleb128 0x9
 1601 006f 28       		.uleb128 0x28
 1602 0070 00       		.byte	0
 1603 0071 03       		.uleb128 0x3
 1604 0072 0E       		.uleb128 0xe
 1605 0073 1C       		.uleb128 0x1c
 1606 0074 0B       		.uleb128 0xb
 1607 0075 00       		.byte	0
 1608 0076 00       		.byte	0
 1609 0077 0A       		.uleb128 0xa
 1610 0078 0D       		.uleb128 0xd
 1611 0079 00       		.byte	0
 1612 007a 03       		.uleb128 0x3
 1613 007b 08       		.uleb128 0x8
 1614 007c 3A       		.uleb128 0x3a
 1615 007d 0B       		.uleb128 0xb
 1616 007e 3B       		.uleb128 0x3b
 1617 007f 05       		.uleb128 0x5
 1618 0080 49       		.uleb128 0x49
 1619 0081 13       		.uleb128 0x13
 1620 0082 38       		.uleb128 0x38
 1621 0083 0B       		.uleb128 0xb
 1622 0084 00       		.byte	0
 1623 0085 00       		.byte	0
 1624 0086 0B       		.uleb128 0xb
 1625 0087 2E       		.uleb128 0x2e
 1626 0088 01       		.byte	0x1
 1627 0089 03       		.uleb128 0x3
 1628 008a 0E       		.uleb128 0xe
 1629 008b 3A       		.uleb128 0x3a
 1630 008c 0B       		.uleb128 0xb
 1631 008d 3B       		.uleb128 0x3b
 1632 008e 0B       		.uleb128 0xb
 1633 008f 27       		.uleb128 0x27
 1634 0090 19       		.uleb128 0x19
 1635 0091 11       		.uleb128 0x11
 1636 0092 01       		.uleb128 0x1
 1637 0093 12       		.uleb128 0x12
 1638 0094 06       		.uleb128 0x6
 1639 0095 40       		.uleb128 0x40
 1640 0096 18       		.uleb128 0x18
 1641 0097 9742     		.uleb128 0x2117
 1642 0099 19       		.uleb128 0x19
 1643 009a 01       		.uleb128 0x1
 1644 009b 13       		.uleb128 0x13
 1645 009c 00       		.byte	0
 1646 009d 00       		.byte	0
 1647 009e 0C       		.uleb128 0xc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 68


 1648 009f 05       		.uleb128 0x5
 1649 00a0 00       		.byte	0
 1650 00a1 03       		.uleb128 0x3
 1651 00a2 08       		.uleb128 0x8
 1652 00a3 3A       		.uleb128 0x3a
 1653 00a4 0B       		.uleb128 0xb
 1654 00a5 3B       		.uleb128 0x3b
 1655 00a6 0B       		.uleb128 0xb
 1656 00a7 49       		.uleb128 0x49
 1657 00a8 13       		.uleb128 0x13
 1658 00a9 02       		.uleb128 0x2
 1659 00aa 18       		.uleb128 0x18
 1660 00ab 00       		.byte	0
 1661 00ac 00       		.byte	0
 1662 00ad 0D       		.uleb128 0xd
 1663 00ae 2E       		.uleb128 0x2e
 1664 00af 01       		.byte	0x1
 1665 00b0 03       		.uleb128 0x3
 1666 00b1 0E       		.uleb128 0xe
 1667 00b2 3A       		.uleb128 0x3a
 1668 00b3 0B       		.uleb128 0xb
 1669 00b4 3B       		.uleb128 0x3b
 1670 00b5 05       		.uleb128 0x5
 1671 00b6 27       		.uleb128 0x27
 1672 00b7 19       		.uleb128 0x19
 1673 00b8 11       		.uleb128 0x11
 1674 00b9 01       		.uleb128 0x1
 1675 00ba 12       		.uleb128 0x12
 1676 00bb 06       		.uleb128 0x6
 1677 00bc 40       		.uleb128 0x40
 1678 00bd 18       		.uleb128 0x18
 1679 00be 9742     		.uleb128 0x2117
 1680 00c0 19       		.uleb128 0x19
 1681 00c1 01       		.uleb128 0x1
 1682 00c2 13       		.uleb128 0x13
 1683 00c3 00       		.byte	0
 1684 00c4 00       		.byte	0
 1685 00c5 0E       		.uleb128 0xe
 1686 00c6 05       		.uleb128 0x5
 1687 00c7 00       		.byte	0
 1688 00c8 03       		.uleb128 0x3
 1689 00c9 08       		.uleb128 0x8
 1690 00ca 3A       		.uleb128 0x3a
 1691 00cb 0B       		.uleb128 0xb
 1692 00cc 3B       		.uleb128 0x3b
 1693 00cd 05       		.uleb128 0x5
 1694 00ce 49       		.uleb128 0x49
 1695 00cf 13       		.uleb128 0x13
 1696 00d0 02       		.uleb128 0x2
 1697 00d1 18       		.uleb128 0x18
 1698 00d2 00       		.byte	0
 1699 00d3 00       		.byte	0
 1700 00d4 0F       		.uleb128 0xf
 1701 00d5 05       		.uleb128 0x5
 1702 00d6 00       		.byte	0
 1703 00d7 03       		.uleb128 0x3
 1704 00d8 0E       		.uleb128 0xe
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 69


 1705 00d9 3A       		.uleb128 0x3a
 1706 00da 0B       		.uleb128 0xb
 1707 00db 3B       		.uleb128 0x3b
 1708 00dc 05       		.uleb128 0x5
 1709 00dd 49       		.uleb128 0x49
 1710 00de 13       		.uleb128 0x13
 1711 00df 02       		.uleb128 0x2
 1712 00e0 18       		.uleb128 0x18
 1713 00e1 00       		.byte	0
 1714 00e2 00       		.byte	0
 1715 00e3 10       		.uleb128 0x10
 1716 00e4 2E       		.uleb128 0x2e
 1717 00e5 00       		.byte	0
 1718 00e6 03       		.uleb128 0x3
 1719 00e7 0E       		.uleb128 0xe
 1720 00e8 3A       		.uleb128 0x3a
 1721 00e9 0B       		.uleb128 0xb
 1722 00ea 3B       		.uleb128 0x3b
 1723 00eb 0B       		.uleb128 0xb
 1724 00ec 27       		.uleb128 0x27
 1725 00ed 19       		.uleb128 0x19
 1726 00ee 49       		.uleb128 0x49
 1727 00ef 13       		.uleb128 0x13
 1728 00f0 11       		.uleb128 0x11
 1729 00f1 01       		.uleb128 0x1
 1730 00f2 12       		.uleb128 0x12
 1731 00f3 06       		.uleb128 0x6
 1732 00f4 40       		.uleb128 0x40
 1733 00f5 18       		.uleb128 0x18
 1734 00f6 9742     		.uleb128 0x2117
 1735 00f8 19       		.uleb128 0x19
 1736 00f9 00       		.byte	0
 1737 00fa 00       		.byte	0
 1738 00fb 11       		.uleb128 0x11
 1739 00fc 2E       		.uleb128 0x2e
 1740 00fd 00       		.byte	0
 1741 00fe 03       		.uleb128 0x3
 1742 00ff 0E       		.uleb128 0xe
 1743 0100 3A       		.uleb128 0x3a
 1744 0101 0B       		.uleb128 0xb
 1745 0102 3B       		.uleb128 0x3b
 1746 0103 05       		.uleb128 0x5
 1747 0104 27       		.uleb128 0x27
 1748 0105 19       		.uleb128 0x19
 1749 0106 11       		.uleb128 0x11
 1750 0107 01       		.uleb128 0x1
 1751 0108 12       		.uleb128 0x12
 1752 0109 06       		.uleb128 0x6
 1753 010a 40       		.uleb128 0x40
 1754 010b 18       		.uleb128 0x18
 1755 010c 9642     		.uleb128 0x2116
 1756 010e 19       		.uleb128 0x19
 1757 010f 00       		.byte	0
 1758 0110 00       		.byte	0
 1759 0111 12       		.uleb128 0x12
 1760 0112 2E       		.uleb128 0x2e
 1761 0113 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 70


 1762 0114 03       		.uleb128 0x3
 1763 0115 0E       		.uleb128 0xe
 1764 0116 3A       		.uleb128 0x3a
 1765 0117 0B       		.uleb128 0xb
 1766 0118 3B       		.uleb128 0x3b
 1767 0119 05       		.uleb128 0x5
 1768 011a 27       		.uleb128 0x27
 1769 011b 19       		.uleb128 0x19
 1770 011c 11       		.uleb128 0x11
 1771 011d 01       		.uleb128 0x1
 1772 011e 12       		.uleb128 0x12
 1773 011f 06       		.uleb128 0x6
 1774 0120 40       		.uleb128 0x40
 1775 0121 18       		.uleb128 0x18
 1776 0122 9742     		.uleb128 0x2117
 1777 0124 19       		.uleb128 0x19
 1778 0125 00       		.byte	0
 1779 0126 00       		.byte	0
 1780 0127 13       		.uleb128 0x13
 1781 0128 2E       		.uleb128 0x2e
 1782 0129 00       		.byte	0
 1783 012a 03       		.uleb128 0x3
 1784 012b 0E       		.uleb128 0xe
 1785 012c 3A       		.uleb128 0x3a
 1786 012d 0B       		.uleb128 0xb
 1787 012e 3B       		.uleb128 0x3b
 1788 012f 05       		.uleb128 0x5
 1789 0130 27       		.uleb128 0x27
 1790 0131 19       		.uleb128 0x19
 1791 0132 49       		.uleb128 0x49
 1792 0133 13       		.uleb128 0x13
 1793 0134 11       		.uleb128 0x11
 1794 0135 01       		.uleb128 0x1
 1795 0136 12       		.uleb128 0x12
 1796 0137 06       		.uleb128 0x6
 1797 0138 40       		.uleb128 0x40
 1798 0139 18       		.uleb128 0x18
 1799 013a 9742     		.uleb128 0x2117
 1800 013c 19       		.uleb128 0x19
 1801 013d 00       		.byte	0
 1802 013e 00       		.byte	0
 1803 013f 14       		.uleb128 0x14
 1804 0140 2E       		.uleb128 0x2e
 1805 0141 01       		.byte	0x1
 1806 0142 03       		.uleb128 0x3
 1807 0143 0E       		.uleb128 0xe
 1808 0144 3A       		.uleb128 0x3a
 1809 0145 0B       		.uleb128 0xb
 1810 0146 3B       		.uleb128 0x3b
 1811 0147 05       		.uleb128 0x5
 1812 0148 27       		.uleb128 0x27
 1813 0149 19       		.uleb128 0x19
 1814 014a 11       		.uleb128 0x11
 1815 014b 01       		.uleb128 0x1
 1816 014c 12       		.uleb128 0x12
 1817 014d 06       		.uleb128 0x6
 1818 014e 40       		.uleb128 0x40
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 71


 1819 014f 18       		.uleb128 0x18
 1820 0150 9642     		.uleb128 0x2116
 1821 0152 19       		.uleb128 0x19
 1822 0153 01       		.uleb128 0x1
 1823 0154 13       		.uleb128 0x13
 1824 0155 00       		.byte	0
 1825 0156 00       		.byte	0
 1826 0157 15       		.uleb128 0x15
 1827 0158 2E       		.uleb128 0x2e
 1828 0159 01       		.byte	0x1
 1829 015a 03       		.uleb128 0x3
 1830 015b 0E       		.uleb128 0xe
 1831 015c 3A       		.uleb128 0x3a
 1832 015d 0B       		.uleb128 0xb
 1833 015e 3B       		.uleb128 0x3b
 1834 015f 0B       		.uleb128 0xb
 1835 0160 27       		.uleb128 0x27
 1836 0161 19       		.uleb128 0x19
 1837 0162 49       		.uleb128 0x49
 1838 0163 13       		.uleb128 0x13
 1839 0164 11       		.uleb128 0x11
 1840 0165 01       		.uleb128 0x1
 1841 0166 12       		.uleb128 0x12
 1842 0167 06       		.uleb128 0x6
 1843 0168 40       		.uleb128 0x40
 1844 0169 18       		.uleb128 0x18
 1845 016a 9742     		.uleb128 0x2117
 1846 016c 19       		.uleb128 0x19
 1847 016d 01       		.uleb128 0x1
 1848 016e 13       		.uleb128 0x13
 1849 016f 00       		.byte	0
 1850 0170 00       		.byte	0
 1851 0171 16       		.uleb128 0x16
 1852 0172 05       		.uleb128 0x5
 1853 0173 00       		.byte	0
 1854 0174 03       		.uleb128 0x3
 1855 0175 0E       		.uleb128 0xe
 1856 0176 3A       		.uleb128 0x3a
 1857 0177 0B       		.uleb128 0xb
 1858 0178 3B       		.uleb128 0x3b
 1859 0179 0B       		.uleb128 0xb
 1860 017a 49       		.uleb128 0x49
 1861 017b 13       		.uleb128 0x13
 1862 017c 02       		.uleb128 0x2
 1863 017d 18       		.uleb128 0x18
 1864 017e 00       		.byte	0
 1865 017f 00       		.byte	0
 1866 0180 17       		.uleb128 0x17
 1867 0181 2E       		.uleb128 0x2e
 1868 0182 01       		.byte	0x1
 1869 0183 03       		.uleb128 0x3
 1870 0184 0E       		.uleb128 0xe
 1871 0185 3A       		.uleb128 0x3a
 1872 0186 0B       		.uleb128 0xb
 1873 0187 3B       		.uleb128 0x3b
 1874 0188 0B       		.uleb128 0xb
 1875 0189 27       		.uleb128 0x27
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 72


 1876 018a 19       		.uleb128 0x19
 1877 018b 11       		.uleb128 0x11
 1878 018c 01       		.uleb128 0x1
 1879 018d 12       		.uleb128 0x12
 1880 018e 06       		.uleb128 0x6
 1881 018f 40       		.uleb128 0x40
 1882 0190 18       		.uleb128 0x18
 1883 0191 9642     		.uleb128 0x2116
 1884 0193 19       		.uleb128 0x19
 1885 0194 01       		.uleb128 0x1
 1886 0195 13       		.uleb128 0x13
 1887 0196 00       		.byte	0
 1888 0197 00       		.byte	0
 1889 0198 18       		.uleb128 0x18
 1890 0199 34       		.uleb128 0x34
 1891 019a 00       		.byte	0
 1892 019b 03       		.uleb128 0x3
 1893 019c 0E       		.uleb128 0xe
 1894 019d 3A       		.uleb128 0x3a
 1895 019e 0B       		.uleb128 0xb
 1896 019f 3B       		.uleb128 0x3b
 1897 01a0 0B       		.uleb128 0xb
 1898 01a1 49       		.uleb128 0x49
 1899 01a2 13       		.uleb128 0x13
 1900 01a3 02       		.uleb128 0x2
 1901 01a4 18       		.uleb128 0x18
 1902 01a5 00       		.byte	0
 1903 01a6 00       		.byte	0
 1904 01a7 19       		.uleb128 0x19
 1905 01a8 2E       		.uleb128 0x2e
 1906 01a9 01       		.byte	0x1
 1907 01aa 3F       		.uleb128 0x3f
 1908 01ab 19       		.uleb128 0x19
 1909 01ac 03       		.uleb128 0x3
 1910 01ad 0E       		.uleb128 0xe
 1911 01ae 3A       		.uleb128 0x3a
 1912 01af 0B       		.uleb128 0xb
 1913 01b0 3B       		.uleb128 0x3b
 1914 01b1 0B       		.uleb128 0xb
 1915 01b2 27       		.uleb128 0x27
 1916 01b3 19       		.uleb128 0x19
 1917 01b4 11       		.uleb128 0x11
 1918 01b5 01       		.uleb128 0x1
 1919 01b6 12       		.uleb128 0x12
 1920 01b7 06       		.uleb128 0x6
 1921 01b8 40       		.uleb128 0x40
 1922 01b9 18       		.uleb128 0x18
 1923 01ba 9642     		.uleb128 0x2116
 1924 01bc 19       		.uleb128 0x19
 1925 01bd 01       		.uleb128 0x1
 1926 01be 13       		.uleb128 0x13
 1927 01bf 00       		.byte	0
 1928 01c0 00       		.byte	0
 1929 01c1 1A       		.uleb128 0x1a
 1930 01c2 34       		.uleb128 0x34
 1931 01c3 00       		.byte	0
 1932 01c4 03       		.uleb128 0x3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 73


 1933 01c5 0E       		.uleb128 0xe
 1934 01c6 3A       		.uleb128 0x3a
 1935 01c7 0B       		.uleb128 0xb
 1936 01c8 3B       		.uleb128 0x3b
 1937 01c9 0B       		.uleb128 0xb
 1938 01ca 49       		.uleb128 0x49
 1939 01cb 13       		.uleb128 0x13
 1940 01cc 3F       		.uleb128 0x3f
 1941 01cd 19       		.uleb128 0x19
 1942 01ce 3C       		.uleb128 0x3c
 1943 01cf 19       		.uleb128 0x19
 1944 01d0 00       		.byte	0
 1945 01d1 00       		.byte	0
 1946 01d2 1B       		.uleb128 0x1b
 1947 01d3 01       		.uleb128 0x1
 1948 01d4 01       		.byte	0x1
 1949 01d5 49       		.uleb128 0x49
 1950 01d6 13       		.uleb128 0x13
 1951 01d7 01       		.uleb128 0x1
 1952 01d8 13       		.uleb128 0x13
 1953 01d9 00       		.byte	0
 1954 01da 00       		.byte	0
 1955 01db 1C       		.uleb128 0x1c
 1956 01dc 21       		.uleb128 0x21
 1957 01dd 00       		.byte	0
 1958 01de 49       		.uleb128 0x49
 1959 01df 13       		.uleb128 0x13
 1960 01e0 2F       		.uleb128 0x2f
 1961 01e1 0B       		.uleb128 0xb
 1962 01e2 00       		.byte	0
 1963 01e3 00       		.byte	0
 1964 01e4 1D       		.uleb128 0x1d
 1965 01e5 26       		.uleb128 0x26
 1966 01e6 00       		.byte	0
 1967 01e7 49       		.uleb128 0x49
 1968 01e8 13       		.uleb128 0x13
 1969 01e9 00       		.byte	0
 1970 01ea 00       		.byte	0
 1971 01eb 1E       		.uleb128 0x1e
 1972 01ec 34       		.uleb128 0x34
 1973 01ed 00       		.byte	0
 1974 01ee 03       		.uleb128 0x3
 1975 01ef 0E       		.uleb128 0xe
 1976 01f0 3A       		.uleb128 0x3a
 1977 01f1 0B       		.uleb128 0xb
 1978 01f2 3B       		.uleb128 0x3b
 1979 01f3 05       		.uleb128 0x5
 1980 01f4 49       		.uleb128 0x49
 1981 01f5 13       		.uleb128 0x13
 1982 01f6 3F       		.uleb128 0x3f
 1983 01f7 19       		.uleb128 0x19
 1984 01f8 3C       		.uleb128 0x3c
 1985 01f9 19       		.uleb128 0x19
 1986 01fa 00       		.byte	0
 1987 01fb 00       		.byte	0
 1988 01fc 00       		.byte	0
 1989              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 74


 1990 0000 84000000 		.4byte	0x84
 1991 0004 0200     		.2byte	0x2
 1992 0006 00000000 		.4byte	.Ldebug_info0
 1993 000a 04       		.byte	0x4
 1994 000b 00       		.byte	0
 1995 000c 0000     		.2byte	0
 1996 000e 0000     		.2byte	0
 1997 0010 00000000 		.4byte	.LFB34
 1998 0014 1C000000 		.4byte	.LFE34-.LFB34
 1999 0018 00000000 		.4byte	.LFB35
 2000 001c 20000000 		.4byte	.LFE35-.LFB35
 2001 0020 00000000 		.4byte	.LFB39
 2002 0024 12000000 		.4byte	.LFE39-.LFB39
 2003 0028 00000000 		.4byte	.LFB40
 2004 002c 14000000 		.4byte	.LFE40-.LFB40
 2005 0030 00000000 		.4byte	.LFB41
 2006 0034 14000000 		.4byte	.LFE41-.LFB41
 2007 0038 00000000 		.4byte	.LFB53
 2008 003c 14000000 		.4byte	.LFE53-.LFB53
 2009 0040 00000000 		.4byte	.LFB57
 2010 0044 0E000000 		.4byte	.LFE57-.LFB57
 2011 0048 00000000 		.4byte	.LFB58
 2012 004c 0C000000 		.4byte	.LFE58-.LFB58
 2013 0050 00000000 		.4byte	.LFB61
 2014 0054 28000000 		.4byte	.LFE61-.LFB61
 2015 0058 00000000 		.4byte	.LFB63
 2016 005c 20000000 		.4byte	.LFE63-.LFB63
 2017 0060 00000000 		.4byte	.LFB65
 2018 0064 30000000 		.4byte	.LFE65-.LFB65
 2019 0068 00000000 		.4byte	.LFB70
 2020 006c 34000000 		.4byte	.LFE70-.LFB70
 2021 0070 00000000 		.4byte	.LFB71
 2022 0074 38000000 		.4byte	.LFE71-.LFB71
 2023 0078 00000000 		.4byte	.LFB72
 2024 007c 38010000 		.4byte	.LFE72-.LFB72
 2025 0080 00000000 		.4byte	0
 2026 0084 00000000 		.4byte	0
 2027              		.section	.debug_ranges,"",%progbits
 2028              	.Ldebug_ranges0:
 2029 0000 00000000 		.4byte	.LFB34
 2030 0004 1C000000 		.4byte	.LFE34
 2031 0008 00000000 		.4byte	.LFB35
 2032 000c 20000000 		.4byte	.LFE35
 2033 0010 00000000 		.4byte	.LFB39
 2034 0014 12000000 		.4byte	.LFE39
 2035 0018 00000000 		.4byte	.LFB40
 2036 001c 14000000 		.4byte	.LFE40
 2037 0020 00000000 		.4byte	.LFB41
 2038 0024 14000000 		.4byte	.LFE41
 2039 0028 00000000 		.4byte	.LFB53
 2040 002c 14000000 		.4byte	.LFE53
 2041 0030 00000000 		.4byte	.LFB57
 2042 0034 0E000000 		.4byte	.LFE57
 2043 0038 00000000 		.4byte	.LFB58
 2044 003c 0C000000 		.4byte	.LFE58
 2045 0040 00000000 		.4byte	.LFB61
 2046 0044 28000000 		.4byte	.LFE61
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 75


 2047 0048 00000000 		.4byte	.LFB63
 2048 004c 20000000 		.4byte	.LFE63
 2049 0050 00000000 		.4byte	.LFB65
 2050 0054 30000000 		.4byte	.LFE65
 2051 0058 00000000 		.4byte	.LFB70
 2052 005c 34000000 		.4byte	.LFE70
 2053 0060 00000000 		.4byte	.LFB71
 2054 0064 38000000 		.4byte	.LFE71
 2055 0068 00000000 		.4byte	.LFB72
 2056 006c 38010000 		.4byte	.LFE72
 2057 0070 00000000 		.4byte	0
 2058 0074 00000000 		.4byte	0
 2059              		.section	.debug_line,"",%progbits
 2060              	.Ldebug_line0:
 2061 0000 8E020000 		.section	.debug_str,"MS",%progbits,1
 2061      02003001 
 2061      00000201 
 2061      FB0E0D00 
 2061      01010101 
 2062              	.LASF45:
 2063 0000 49535232 		.ascii	"ISR2_Context\000"
 2063      5F436F6E 
 2063      74657874 
 2063      00
 2064              	.LASF41:
 2065 000d 6E657874 		.ascii	"next\000"
 2065      00
 2066              	.LASF84:
 2067 0012 45455F74 		.ascii	"EE_th_terminate_nextask\000"
 2067      685F7465 
 2067      726D696E 
 2067      6174655F 
 2067      6E657874 
 2068              	.LASF21:
 2069 002a 5469636B 		.ascii	"TickType\000"
 2069      54797065 
 2069      00
 2070              	.LASF85:
 2071 0033 45455F73 		.ascii	"EE_stkfirst\000"
 2071      746B6669 
 2071      72737400 
 2072              	.LASF98:
 2073 003f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2073      43313120 
 2073      352E342E 
 2073      31203230 
 2073      31363036 
 2074 0072 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2074      20726576 
 2074      6973696F 
 2074      6E203233 
 2074      37373135 
 2075 00a5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2075      66756E63 
 2075      74696F6E 
 2075      2D736563 
 2075      74696F6E 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 76


 2076              	.LASF17:
 2077 00cd 45455F54 		.ascii	"EE_TYPEBOOL\000"
 2077      59504542 
 2077      4F4F4C00 
 2078              	.LASF55:
 2079 00d9 45455F68 		.ascii	"EE_hal_endcycle_ready\000"
 2079      616C5F65 
 2079      6E646379 
 2079      636C655F 
 2079      72656164 
 2080              	.LASF7:
 2081 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 2081      206C6F6E 
 2081      6720756E 
 2081      7369676E 
 2081      65642069 
 2082              	.LASF102:
 2083 0106 45455F74 		.ascii	"EE_thread_end_instance\000"
 2083      68726561 
 2083      645F656E 
 2083      645F696E 
 2083      7374616E 
 2084              	.LASF40:
 2085 011d 64656C74 		.ascii	"delta\000"
 2085      6100
 2086              	.LASF37:
 2087 0123 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 2087      6F5F636F 
 2087      756E7465 
 2087      725F6F62 
 2087      6A656374 
 2088              	.LASF20:
 2089 0141 5461736B 		.ascii	"TaskType\000"
 2089      54797065 
 2089      00
 2090              	.LASF24:
 2091 014a 6D617861 		.ascii	"maxallowedvalue\000"
 2091      6C6C6F77 
 2091      65647661 
 2091      6C756500 
 2092              	.LASF6:
 2093 015a 6C6F6E67 		.ascii	"long long int\000"
 2093      206C6F6E 
 2093      6720696E 
 2093      7400
 2094              	.LASF0:
 2095 0168 7369676E 		.ascii	"signed char\000"
 2095      65642063 
 2095      68617200 
 2096              	.LASF97:
 2097 0174 45455F72 		.ascii	"EE_rq_lookup\000"
 2097      715F6C6F 
 2097      6F6B7570 
 2097      00
 2098              	.LASF30:
 2099 0181 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 2099      6F5F636F 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 77


 2099      756E7465 
 2099      725F5241 
 2099      4D5F7479 
 2100              	.LASF49:
 2101 0198 506F7374 		.ascii	"PostTaskHook_Context\000"
 2101      5461736B 
 2101      486F6F6B 
 2101      5F436F6E 
 2101      74657874 
 2102              	.LASF4:
 2103 01ad 6C6F6E67 		.ascii	"long int\000"
 2103      20696E74 
 2103      00
 2104              	.LASF65:
 2105 01b6 45455F73 		.ascii	"EE_stk_getfirst\000"
 2105      746B5F67 
 2105      65746669 
 2105      72737400 
 2106              	.LASF78:
 2107 01c6 45455F74 		.ascii	"EE_th_rnact_max\000"
 2107      685F726E 
 2107      6163745F 
 2107      6D617800 
 2108              	.LASF100:
 2109 01d6 433A5C55 		.ascii	"C:\\Users\\schmi\\OneDrive\\Dokumente\\PSoC Creator"
 2109      73657273 
 2109      5C736368 
 2109      6D695C4F 
 2109      6E654472 
 2110 0204 5C4A736F 		.ascii	"\\JsonParserLAB3\\holidayProject\\setUpEnv.cydsn\000"
 2110      6E506172 
 2110      7365724C 
 2110      4142335C 
 2110      686F6C69 
 2111              	.LASF72:
 2112 0232 6E657874 		.ascii	"nexttid\000"
 2112      74696400 
 2113              	.LASF66:
 2114 023a 45455F6F 		.ascii	"EE_oo_reset_th_event_active\000"
 2114      6F5F7265 
 2114      7365745F 
 2114      74685F65 
 2114      76656E74 
 2115              	.LASF95:
 2116 0256 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 2116      6F5F4952 
 2116      515F7375 
 2116      7370656E 
 2116      645F7374 
 2117              	.LASF76:
 2118 026f 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 2118      74645F65 
 2118      6E646379 
 2118      636C655F 
 2118      6E657874 
 2119              	.LASF26:
 2120 0288 6D696E63 		.ascii	"mincycle\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 78


 2120      79636C65 
 2120      00
 2121              	.LASF18:
 2122 0291 45455F54 		.ascii	"EE_TID\000"
 2122      494400
 2123              	.LASF28:
 2124 0298 76616C75 		.ascii	"value\000"
 2124      6500
 2125              	.LASF64:
 2126 029e 45455F73 		.ascii	"EE_stk_queryfirst\000"
 2126      746B5F71 
 2126      75657279 
 2126      66697273 
 2126      7400
 2127              	.LASF8:
 2128 02b0 756E7369 		.ascii	"unsigned int\000"
 2128      676E6564 
 2128      20696E74 
 2128      00
 2129              	.LASF11:
 2130 02bd 45455F49 		.ascii	"EE_INT8\000"
 2130      4E543800 
 2131              	.LASF15:
 2132 02c5 45455F55 		.ascii	"EE_UREG\000"
 2132      52454700 
 2133              	.LASF5:
 2134 02cd 6C6F6E67 		.ascii	"long unsigned int\000"
 2134      20756E73 
 2134      69676E65 
 2134      6420696E 
 2134      7400
 2135              	.LASF56:
 2136 02df 45455F68 		.ascii	"EE_hal_endcycle_stacked\000"
 2136      616C5F65 
 2136      6E646379 
 2136      636C655F 
 2136      73746163 
 2137              	.LASF89:
 2138 02f7 45455F74 		.ascii	"EE_th_waswaiting\000"
 2138      685F7761 
 2138      73776169 
 2138      74696E67 
 2138      00
 2139              	.LASF36:
 2140 0308 6B696E64 		.ascii	"kind\000"
 2140      00
 2141              	.LASF3:
 2142 030d 73686F72 		.ascii	"short unsigned int\000"
 2142      7420756E 
 2142      7369676E 
 2142      65642069 
 2142      6E7400
 2143              	.LASF94:
 2144 0320 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 2144      6F5F4952 
 2144      515F6469 
 2144      7361626C 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 79


 2144      655F636F 
 2145              	.LASF33:
 2146 0338 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 2146      6F5F636F 
 2146      756E7465 
 2146      725F6F62 
 2146      6A656374 
 2147              	.LASF52:
 2148 0357 416C6172 		.ascii	"AlarmCallback_Context\000"
 2148      6D43616C 
 2148      6C626163 
 2148      6B5F436F 
 2148      6E746578 
 2149              	.LASF81:
 2150 036d 45455F74 		.ascii	"EE_th_status\000"
 2150      685F7374 
 2150      61747573 
 2150      00
 2151              	.LASF34:
 2152 037a 436F756E 		.ascii	"CounterObjectKindType\000"
 2152      7465724F 
 2152      626A6563 
 2152      744B696E 
 2152      64547970 
 2153              	.LASF80:
 2154 0390 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 2154      685F6469 
 2154      73706174 
 2154      63685F70 
 2154      72696F00 
 2155              	.LASF23:
 2156 03a4 436F756E 		.ascii	"CounterType\000"
 2156      74657254 
 2156      79706500 
 2157              	.LASF91:
 2158 03b0 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 2158      6F5F636F 
 2158      756E7465 
 2158      725F6F62 
 2158      6A656374 
 2159              	.LASF19:
 2160 03c9 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 2160      5950455F 
 2160      52515F4D 
 2160      41534B00 
 2161              	.LASF48:
 2162 03d9 50726554 		.ascii	"PreTaskHook_Context\000"
 2162      61736B48 
 2162      6F6F6B5F 
 2162      436F6E74 
 2162      65787400 
 2163              	.LASF46:
 2164 03ed 4572726F 		.ascii	"ErrorHook_Context\000"
 2164      72486F6F 
 2164      6B5F436F 
 2164      6E746578 
 2164      7400
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 80


 2165              	.LASF77:
 2166 03ff 73697A65 		.ascii	"sizetype\000"
 2166      74797065 
 2166      00
 2167              	.LASF47:
 2168 0408 50726F74 		.ascii	"ProtectionHook_Context\000"
 2168      65637469 
 2168      6F6E486F 
 2168      6F6B5F43 
 2168      6F6E7465 
 2169              	.LASF9:
 2170 041f 6C6F6E67 		.ascii	"long double\000"
 2170      20646F75 
 2170      626C6500 
 2171              	.LASF96:
 2172 042b 45455F41 		.ascii	"EE_ApplicationMode\000"
 2172      70706C69 
 2172      63617469 
 2172      6F6E4D6F 
 2172      646500
 2173              	.LASF53:
 2174 043e 49646C65 		.ascii	"Idle_Context\000"
 2174      5F436F6E 
 2174      74657874 
 2174      00
 2175              	.LASF99:
 2176 044b 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_thendin.c\000"
 2176      72617465 
 2176      645F536F 
 2176      75726365 
 2176      5C50536F 
 2177              	.LASF73:
 2178 0479 72716669 		.ascii	"rqfirst\000"
 2178      72737400 
 2179              	.LASF60:
 2180 0481 7072696F 		.ascii	"prio\000"
 2180      00
 2181              	.LASF38:
 2182 0486 75736564 		.ascii	"used\000"
 2182      00
 2183              	.LASF25:
 2184 048b 7469636B 		.ascii	"ticksperbase\000"
 2184      73706572 
 2184      62617365 
 2184      00
 2185              	.LASF43:
 2186 0498 4B65726E 		.ascii	"Kernel_Context\000"
 2186      656C5F43 
 2186      6F6E7465 
 2186      787400
 2187              	.LASF70:
 2188 04a7 63757272 		.ascii	"current\000"
 2188      656E7400 
 2189              	.LASF44:
 2190 04af 5441534B 		.ascii	"TASK_Context\000"
 2190      5F436F6E 
 2190      74657874 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 81


 2190      00
 2191              	.LASF101:
 2192 04bc 45455F74 		.ascii	"EE_thread_rnact_max\000"
 2192      68726561 
 2192      645F726E 
 2192      6163745F 
 2192      6D617800 
 2193              	.LASF10:
 2194 04d0 45455F42 		.ascii	"EE_BIT\000"
 2194      495400
 2195              	.LASF63:
 2196 04d7 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 2196      6F5F6361 
 2196      6C6C5F50 
 2196      6F737454 
 2196      61736B48 
 2197              	.LASF42:
 2198 04ef 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 2198      6F5F636F 
 2198      756E7465 
 2198      725F6F62 
 2198      6A656374 
 2199              	.LASF62:
 2200 050d 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 2200      6F5F6361 
 2200      6C6C5F50 
 2200      72655461 
 2200      736B486F 
 2201              	.LASF90:
 2202 0524 45455F63 		.ascii	"EE_counter_ROM\000"
 2202      6F756E74 
 2202      65725F52 
 2202      4F4D00
 2203              	.LASF74:
 2204 0533 6E746173 		.ascii	"ntask\000"
 2204      6B00
 2205              	.LASF12:
 2206 0539 45455F55 		.ascii	"EE_UINT16\000"
 2206      494E5431 
 2206      3600
 2207              	.LASF32:
 2208 0543 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 2208      43484544 
 2208      554C4554 
 2208      41424C45 
 2208      00
 2209              	.LASF1:
 2210 0554 756E7369 		.ascii	"unsigned char\000"
 2210      676E6564 
 2210      20636861 
 2210      7200
 2211              	.LASF31:
 2212 0562 45455F41 		.ascii	"EE_ALARM\000"
 2212      4C41524D 
 2212      00
 2213              	.LASF82:
 2214 056b 45455F74 		.ascii	"EE_th_next\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 82


 2214      685F6E65 
 2214      787400
 2215              	.LASF88:
 2216 0576 45455F74 		.ascii	"EE_th_event_active\000"
 2216      685F6576 
 2216      656E745F 
 2216      61637469 
 2216      766500
 2217              	.LASF2:
 2218 0589 73686F72 		.ascii	"short int\000"
 2218      7420696E 
 2218      7400
 2219              	.LASF27:
 2220 0593 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 2220      6F5F636F 
 2220      756E7465 
 2220      725F524F 
 2220      4D5F7479 
 2221              	.LASF71:
 2222 05aa 45455F74 		.ascii	"EE_thread_endcycle_next\000"
 2222      68726561 
 2222      645F656E 
 2222      64637963 
 2222      6C655F6E 
 2223              	.LASF61:
 2224 05c2 45455F61 		.ascii	"EE_as_set_execution_context\000"
 2224      735F7365 
 2224      745F6578 
 2224      65637574 
 2224      696F6E5F 
 2225              	.LASF87:
 2226 05de 45455F72 		.ascii	"EE_rq_bitmask\000"
 2226      715F6269 
 2226      746D6173 
 2226      6B00
 2227              	.LASF29:
 2228 05ec 66697273 		.ascii	"first\000"
 2228      7400
 2229              	.LASF22:
 2230 05f2 436F756E 		.ascii	"CounterObjectType\000"
 2230      7465724F 
 2230      626A6563 
 2230      74547970 
 2230      6500
 2231              	.LASF50:
 2232 0604 53746172 		.ascii	"StartupHook_Context\000"
 2232      74757048 
 2232      6F6F6B5F 
 2232      436F6E74 
 2232      65787400 
 2233              	.LASF57:
 2234 0618 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 2234      5254495F 
 2234      7365745F 
 2234      74685F65 
 2234      715F6469 
 2235              	.LASF54:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 83


 2236 0638 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 2236      59504543 
 2236      4F4E5445 
 2236      585400
 2237              	.LASF92:
 2238 0647 45455F63 		.ascii	"EE_counter_RAM\000"
 2238      6F756E74 
 2238      65725F52 
 2238      414D00
 2239              	.LASF35:
 2240 0656 73706563 		.ascii	"spec_id\000"
 2240      5F696400 
 2241              	.LASF59:
 2242 065e 696E6465 		.ascii	"index\000"
 2242      7800
 2243              	.LASF58:
 2244 0664 45455F4F 		.ascii	"EE_ORTI_set_th_priority\000"
 2244      5254495F 
 2244      7365745F 
 2244      74685F70 
 2244      72696F72 
 2245              	.LASF86:
 2246 067c 45455F73 		.ascii	"EE_sys_ceiling\000"
 2246      79735F63 
 2246      65696C69 
 2246      6E6700
 2247              	.LASF93:
 2248 068b 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 2248      6F5F636F 
 2248      756E7465 
 2248      725F6F62 
 2248      6A656374 
 2249              	.LASF83:
 2250 06a4 45455F74 		.ascii	"EE_th_rnact\000"
 2250      685F726E 
 2250      61637400 
 2251              	.LASF68:
 2252 06b0 45455F6F 		.ascii	"EE_oo_set_th_status_ready\000"
 2252      6F5F7365 
 2252      745F7468 
 2252      5F737461 
 2252      7475735F 
 2253              	.LASF14:
 2254 06ca 45455F55 		.ascii	"EE_UINT32\000"
 2254      494E5433 
 2254      3200
 2255              	.LASF69:
 2256 06d4 5461736B 		.ascii	"TaskID\000"
 2256      494400
 2257              	.LASF13:
 2258 06db 45455F49 		.ascii	"EE_INT32\000"
 2258      4E543332 
 2258      00
 2259              	.LASF67:
 2260 06e4 746E6F74 		.ascii	"tnotactive\000"
 2260      61637469 
 2260      766500
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cckBIafH.s 			page 84


 2261              	.LASF75:
 2262 06ef 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2262      52515F6E 
 2262      65737469 
 2262      6E675F6C 
 2262      6576656C 
 2263              	.LASF39:
 2264 0704 636E7463 		.ascii	"cntcycle\000"
 2264      79636C65 
 2264      00
 2265              	.LASF51:
 2266 070d 53687574 		.ascii	"ShutdownHook_Context\000"
 2266      646F776E 
 2266      486F6F6B 
 2266      5F436F6E 
 2266      74657874 
 2267              	.LASF79:
 2268 0722 45455F74 		.ascii	"EE_th_ready_prio\000"
 2268      685F7265 
 2268      6164795F 
 2268      7072696F 
 2268      00
 2269              	.LASF16:
 2270 0733 45455F46 		.ascii	"EE_FREG\000"
 2270      52454700 
 2271              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
