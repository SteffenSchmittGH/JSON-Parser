ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_altick.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_cortex_mx_resumeIRQ,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_cortex_mx_resumeIRQ, %function
  24              	EE_cortex_mx_resumeIRQ:
  25              	.LFB11:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 4


 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 5


 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
  27              		.loc 1 221 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
  40              		.loc 1 232 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42              		.syntax unified
  43              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  44 000a 83F31088 		msr primask, r3
  45              	@ 0 "" 2
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
  46              		.loc 1 236 0
  47              		.thumb
  48              		.syntax unified
  49 000e 00BF     		nop
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 6


  50 0010 0C37     		adds	r7, r7, #12
  51              		.cfi_def_cfa_offset 4
  52 0012 BD46     		mov	sp, r7
  53              		.cfi_def_cfa_register 13
  54              		@ sp needed
  55 0014 80BC     		pop	{r7}
  56              		.cfi_restore 7
  57              		.cfi_def_cfa_offset 0
  58 0016 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE11:
  61              		.size	EE_cortex_mx_resumeIRQ, .-EE_cortex_mx_resumeIRQ
  62              		.section	.text.EE_cortex_mx_suspendIRQ,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  66              		.type	EE_cortex_mx_suspendIRQ, %function
  67              	EE_cortex_mx_suspendIRQ:
  68              	.LFB12:
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
  69              		.loc 1 242 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  81              		.loc 1 260 0
  82              		.syntax unified
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 7


  83              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  84 0006 EFF31083 		mrs r3, primask
  85              	@ 0 "" 2
  86              		.thumb
  87              		.syntax unified
  88 000a 7B60     		str	r3, [r7, #4]
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  89              		.loc 1 261 0
  90              		.syntax unified
  91              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  92 000c 72B6     		cpsid i
  93              	@ 0 "" 2
 262:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 263:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 264:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 265:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 266:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return 0;
 267:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else
 268:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	return istat;
  94              		.loc 1 268 0
  95              		.thumb
  96              		.syntax unified
  97 000e 7B68     		ldr	r3, [r7, #4]
 269:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 270:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
  98              		.loc 1 270 0
  99 0010 1846     		mov	r0, r3
 100 0012 0C37     		adds	r7, r7, #12
 101              		.cfi_def_cfa_offset 4
 102 0014 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0016 80BC     		pop	{r7}
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 0018 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE12:
 111              		.size	EE_cortex_mx_suspendIRQ, .-EE_cortex_mx_suspendIRQ
 112              		.section	.text.EE_hal_get_IRQ_nesting_level,"ax",%progbits
 113              		.align	2
 114              		.thumb
 115              		.thumb_func
 116              		.type	EE_hal_get_IRQ_nesting_level, %function
 117              	EE_hal_get_IRQ_nesting_level:
 118              	.LFB23:
 119              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 8


  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 9


  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
 120              		.loc 2 78 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
 130              		.loc 2 79 0
 131 0004 024B     		ldr	r3, .L6
 132 0006 1B68     		ldr	r3, [r3]
  80:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** }
 133              		.loc 2 80 0
 134 0008 1846     		mov	r0, r3
 135 000a BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 000c 80BC     		pop	{r7}
 139              		.cfi_restore 7
 140              		.cfi_def_cfa_offset 0
 141 000e 7047     		bx	lr
 142              	.L7:
 143              		.align	2
 144              	.L6:
 145 0010 00000000 		.word	EE_IRQ_nesting_level
 146              		.cfi_endproc
 147              	.LFE23:
 148              		.size	EE_hal_get_IRQ_nesting_level, .-EE_hal_get_IRQ_nesting_level
 149              		.section	.text.EE_hal_begin_nested_primitive,"ax",%progbits
 150              		.align	2
 151              		.thumb
 152              		.thumb_func
 153              		.type	EE_hal_begin_nested_primitive, %function
 154              	EE_hal_begin_nested_primitive:
 155              	.LFB25:
 156              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 10


   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 	@file	ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 	@brief	Derived from cpu/pic30/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 	@author	Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 	@author	Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 	@date	2012
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #ifndef __INCLUDE_CORTEX_MX_INTERNAL_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #define __INCLUDE_CORTEX_MX_INTERNAL_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #include "ErikaOS_1_cortex_mx_ee_cpu.inc"
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /*************************************************************************
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  Functions
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *************************************************************************/
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 11


  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /*
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  * Generic Primitives
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #include "ErikaOS_1_common_ee_primitives.inc"
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /*************************************************************************
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****                             System startup
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****  *************************************************************************/
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #define OO_CPU_HAS_STARTOS_ROUTINE
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /* If system is defined I have to initialize it*/
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #if	( defined(ENABLE_SYSTEM_TIMER) && defined(EE_SYSTEM_TIMER_DEVICE) )
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** void EE_cortex_mx_initialize_system_timer(void);
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #else /* ENABLE_SYSTEM_TIMER */
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #define EE_cortex_mx_initialize_system_timer() ((void) 0)
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** #endif /* ENABLE_SYSTEM_TIMER */
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_cpu_startos(void);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_cpu_startos(void)
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** {
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****   EE_system_init();
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****   EE_cortex_mx_initialize_system_timer();
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****   return 0;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /** Called as _first_ function of a primitive that can be called in
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****    an IRQ and in a task */
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** __INLINE__ EE_FREG  EE_hal_begin_nested_primitive(void)
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** {
 157              		.loc 3 97 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****     return EE_cortex_mx_suspendIRQ();
 167              		.loc 3 98 0
 168 0004 FFF7FEFF 		bl	EE_cortex_mx_suspendIRQ
 169 0008 0346     		mov	r3, r0
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** }
 170              		.loc 3 99 0
 171 000a 1846     		mov	r0, r3
 172 000c 80BD     		pop	{r7, pc}
 173              		.cfi_endproc
 174              	.LFE25:
 175              		.size	EE_hal_begin_nested_primitive, .-EE_hal_begin_nested_primitive
 176 000e 00BF     		.section	.text.EE_hal_end_nested_primitive,"ax",%progbits
 177              		.align	2
 178              		.thumb
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 12


 179              		.thumb_func
 180              		.type	EE_hal_end_nested_primitive, %function
 181              	EE_hal_end_nested_primitive:
 182              	.LFB26:
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** 
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** /** Called as _last_ function of a primitive that can be called in
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****    an IRQ and in a task.  Enable IRQs if they were enabled before entering. */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** __INLINE__ void  EE_hal_end_nested_primitive(EE_FREG f)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** {
 183              		.loc 3 105 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 82B0     		sub	sp, sp, #8
 192              		.cfi_def_cfa_offset 16
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 195 0006 7860     		str	r0, [r7, #4]
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc ****     EE_cortex_mx_resumeIRQ(f);
 196              		.loc 3 106 0
 197 0008 7868     		ldr	r0, [r7, #4]
 198 000a FFF7FEFF 		bl	EE_cortex_mx_resumeIRQ
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_internal.inc **** }
 199              		.loc 3 107 0
 200 000e 00BF     		nop
 201 0010 0837     		adds	r7, r7, #8
 202              		.cfi_def_cfa_offset 8
 203 0012 BD46     		mov	sp, r7
 204              		.cfi_def_cfa_register 13
 205              		@ sp needed
 206 0014 80BD     		pop	{r7, pc}
 207              		.cfi_endproc
 208              	.LFE26:
 209              		.size	EE_hal_end_nested_primitive, .-EE_hal_end_nested_primitive
 210 0016 00BF     		.section	.text.EE_hal_stkchange,"ax",%progbits
 211              		.align	2
 212              		.thumb
 213              		.thumb_func
 214              		.type	EE_hal_stkchange, %function
 215              	EE_hal_stkchange:
 216              	.LFB32:
 217              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 13


  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 14


  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 15


 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 218              		.loc 4 153 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 80B5     		push	{r7, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 82B0     		sub	sp, sp, #8
 227              		.cfi_def_cfa_offset 16
 228 0004 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 230 0006 7860     		str	r0, [r7, #4]
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 231              		.loc 4 154 0
 232 0008 7B68     		ldr	r3, [r7, #4]
 233 000a 43F00043 		orr	r3, r3, #-2147483648
 234 000e 1846     		mov	r0, r3
 235 0010 FFF7FEFF 		bl	EE_cortex_mx_change_context
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 236              		.loc 4 155 0
 237 0014 00BF     		nop
 238 0016 0837     		adds	r7, r7, #8
 239              		.cfi_def_cfa_offset 8
 240 0018 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 001a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 16


 244              		.cfi_endproc
 245              	.LFE32:
 246              		.size	EE_hal_stkchange, .-EE_hal_stkchange
 247              		.section	.text.EE_hal_ready2stacked,"ax",%progbits
 248              		.align	2
 249              		.thumb
 250              		.thumb_func
 251              		.type	EE_hal_ready2stacked, %function
 252              	EE_hal_ready2stacked:
 253              	.LFB33:
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 254              		.loc 4 166 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0000 80B5     		push	{r7, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 7, -8
 261              		.cfi_offset 14, -4
 262 0002 82B0     		sub	sp, sp, #8
 263              		.cfi_def_cfa_offset 16
 264 0004 00AF     		add	r7, sp, #0
 265              		.cfi_def_cfa_register 7
 266 0006 7860     		str	r0, [r7, #4]
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 267              		.loc 4 167 0
 268 0008 7868     		ldr	r0, [r7, #4]
 269 000a FFF7FEFF 		bl	EE_cortex_mx_change_context
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 270              		.loc 4 168 0
 271 000e 00BF     		nop
 272 0010 0837     		adds	r7, r7, #8
 273              		.cfi_def_cfa_offset 8
 274 0012 BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 0014 80BD     		pop	{r7, pc}
 278              		.cfi_endproc
 279              	.LFE33:
 280              		.size	EE_hal_ready2stacked, .-EE_hal_ready2stacked
 281 0016 00BF     		.section	.text.EE_ORTI_set_service,"ax",%progbits
 282              		.align	2
 283              		.thumb
 284              		.thumb_func
 285              		.type	EE_ORTI_set_service, %function
 286              	EE_ORTI_set_service:
 287              	.LFB36:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 17


 288              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * CVS: $Id: ee_common.h,v 1.7 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                             Kernel Constants
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 18


  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* invalid TID */
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_NIL          ((EE_TID)-1)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* maximum value for EE_UREG (used in EE_th_resource_last) */
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_UREG_MINUS1  ((EE_UREG)-1)
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** The Kernel constants like NIL and other thread statuses are defined
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** in the following sections:
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - invalid see 13.2.4
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - thread statuses see 13.2.4
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Moreover, the user must specify (into types.h) in a fashion like
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    #define identifier unique_number
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the following identifiers:
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource identifiers declared with the macro
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      DeclareResource (13.4.2.1)
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The task identifiers declared with the macro TASK(TaskName) (13.2.5)
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource (RES_SCHEDULER) MUST have the maximum ceiling possible
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      for Tasks
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For the Extended status and ORTI support:
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_TASK maximum number of tasks (used in TaskActivate
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_RESOURCE maximum number of resources
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_ALARM maximum number of alarms
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For TASK/ALARM Autostart support:
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_APPMODE maximum number of Application modes (typically
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      >0, because there is always the mode OSDEFAULTAPPMODE.
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Types
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priority type */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPRIO
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPRIO EE_UREG
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* status type */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the status type, that usually was an used configurable type, is set
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    by the OO Standard (Bindings specification, paragraph 3.2) to be
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    unsigned char. */
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPESTATUS
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPESTATUS EE_UREG
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pending activation type */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPENACT
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPENACT EE_UREG
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 19


 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* event mask type */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEEVENTMASK
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEEVENTMASK EE_UREG
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pair type (signed!) */
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPAIR
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPAIR EE_SREG
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* application mode type */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEAPPMODE
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEAPPMODE EE_UREG
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* service id type */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEOSSERVICEID
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEOSSERVICEID EE_UINT8
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* resource id type */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPERESOURCE
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPERESOURCE EE_UREG
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter id type */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTER
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTER EE_UREG
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter object id type */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTEROBJECT
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTEROBJECT  EE_UREG
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* alarm id type */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEALARM
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEALARM EE_TYPECOUNTEROBJECT
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* action id type */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEACTION
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEACTION EE_UREG
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter tick type */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPETICK
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK EE_UREG
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies the OS-Application. */
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID                ApplicationType;
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_OSAPPLICATION ((ApplicationType)-1)
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define KERNEL_OSAPPLICATION  ((ApplicationType)0U)
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 20


 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Maximum number of pending activations */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPENACT   EE_th_rnact_max[EE_MAX_TASK];
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priorities (NB: they are bit fields!!!) */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_ready_prio[EE_MAX_TASK];
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_dispatch_prio[EE_MAX_TASK];
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_TASK_NAME[EE_MAX_TASK];
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_EVENT_NAME[EE_MAX_EVENT];
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_ALARM_NAME[EE_MAX_ALARM];
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_RESOURCE_NAME[EE_MAX_RESOURCE];
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_RESOURCE_ID[EE_MAX_RESOURCE];
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_EVENT_ID[EE_MAX_EVENT];
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_ALARM_ID[EE_MAX_ALARM];
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*uthra changes*/
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Variables defined by the application
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread status, all initialized to SUSPENDED */
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPESTATUS EE_th_status[EE_MAX_TASK];
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* next: is used for:
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the stacked queue
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - WaitEvent (?)
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the ready queue (BCC1, ECC1)
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    all initialized with EE_NIL
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_next[EE_MAX_TASK];
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * remaining nact: init= maximum pending activations of a Task
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * =1 for BCC1 and ECC1, >= 0 for BCC2 and ECC2
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * all initialized with 1 (ECC2, BCC2: or with a value >1)
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPENACT   EE_th_rnact[EE_MAX_TASK];
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_CHAINTASK__
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The next task to be activated after a ChainTask. initvalue=all EE_NIL */
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_terminate_nextask[EE_MAX_TASK];
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The first stacked task (initvalue = EE_NIL) */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID       EE_stkfirst;
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 21


 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* First task in the ready queue (initvalue = EE_NIL) */
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_rq_first;
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  __OO_BCC1__ || __OO_ECC1__ */
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* System ceiling (initvalue = 0) */
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_sys_ceiling;
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ready queue implementation:
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - 16 priorities
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - we use a queue for each priority. Head and tail are stored in an array
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - each queue contains pairs (Task ID, next)
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - the number of pairs is the sum of all the possible activations
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   of all the tasks (in that way, an activation will never fail due
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   to the lack of a pair)
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - to know which queue have to be used, a bit mask is used to do a fast
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   lookup (the 8 bit lookup table is defined into ee_lookup.c)
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* bit mask with 16 or 8 priority levels (Initvalue = 0) */
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_BCC2__)
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT8 EE_TYPE_RQ_MASK;
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT16 EE_TYPE_RQ_MASK;
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following data structure gives the link between a task and its
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority queue.  The values of this data structure are the same of
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 22


 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_ready_prio, except that they are not stored as bitfields
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: each TID = x such that th_ready_prio[TID]= 1<<x
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_rq_link[EE_MAX_TASK];
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The priority queues  (initvalue: all -1;
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number of elements: 8(BCC2) or 16(ECC2) ) */
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_head[EE_RQ_QUEUES_HEAD_SIZE];
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_tail[EE_RQ_QUEUES_TAIL_SIZE];
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The pairs that are enqueued into the priority queues */
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* initvalue: something like {1,2,3,4,5,...,-1}.
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of elements is equal to the sum of the elements of
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_th_rnact */
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_pairs_next[EE_RQ_PAIRS_NEXT_SIZE];
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* init value=0 (no init value); the number of elements is equal to the
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    sum of the elements of EE_th_rnact */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID      EE_rq_pairs_tid[EE_RQ_PAIRS_TID_SIZE];
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RQ priority Mask */
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPE_RQ_MASK EE_rq_bitmask;
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a list of unused pairs */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_free; /* pointer to a free pair; initvalue=0 */
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Event handling */
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: To save memory space, Extended tasks should have the smallest
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number into the task data structures. In that way, the following
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    data structures can be sized to exactly the number of the extended
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    tasks */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 23


 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread events already active; these events are set using the
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    SetEvent primitive. initvalue = 0 */
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_active[EE_MAX_TASK];
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread wait mask. this is the event mask the task is waiting using
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    WaitEvent. A task IS waiting only if the value in this array IS != 0.
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    initvalue = 0 */
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_waitmask[EE_MAX_TASK];
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this structure contains a flag that is 1 if a thread has been
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    suspended using EE_hal_stkchange. In that case, the task have to
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be wakened again using the same function. initvalue = 0
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_th_waswaiting[EE_MAX_TASK];
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* just a flag: this flag is 1 if the task is an extended task, 0 otherwise */
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Please note that this flag is defined both in STANDARD and in
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EXTENDED status. The need for this flag in standard status is
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    because task activations of an extended task clears its pending
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    event mask. */
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEBOOL EE_th_is_extended[EE_MAX_TASK];
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resources data structures */
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resource ceiling */
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO   EE_resource_ceiling[EE_MAX_RESOURCE];
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ISR2 priority tied to an resource */
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEISR2PRIO  EE_resource_isr2_priority[EE_MAX_RESOURCE];
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: There is no constraint on the index that is assigned
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    RES_SCHEDULER!!! */
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old resource ceiling */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 24


 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_resource_oldceiling[EE_MAX_RESOURCE];
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* New data structures to handle resource sharing with isr2 and isr2 hardware
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority ceiling. */
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old ISR2 priority */
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEISR2PRIO  EE_isr2_oldpriority[EE_MAX_RESOURCE];
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ORTI_RES_ISLOCKED__))
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status or when using ORTI with resources; for each
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    resource, a flag is allocated to see if the resource is locked or
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not.  Note that this information cannot be easily knew from the
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    previous two data structures. initvalue=0
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_resource_locked[EE_MAX_RESOURCE];
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_EXTENDED_STATUS__ || __OO_ORTI_RES_ISLOCKED__ */
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ISR2_RESOURCES__))
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status; for each task, we allocate a data
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    structure that keeps track of the order in which every task has
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    allocated a resource. This is needed to return a meaningful
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    E_OS_NOFUNC error in the ReleaseResource call. */
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the last resource that the task has locked. This array
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    contains one entry for each task.  Initvalue= all -1. at runtime,
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    it points to the first item in the EE_resource_stack data structure */
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_MAX_ISR2_WITH_RESOURCES
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK];
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* !EE_MAX_ISR2_WITH_RESOURCES */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK + EE_MAX_ISR2_WITH_RESOURCES];
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !EE_MAX_ISR2_WITH_RESOURCES */
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this array is used to store a list of resources locked by a
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    task. there is one entry for each resource, initvalue = -1. the
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    list of resources locked by a task is ended by -1. */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_resource_stack[EE_MAX_RESOURCE];
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ || __OO_ISR2_RESOURCES__ */
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 25


 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_NO_RESOURCES__ */
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(EE_MAX_ISR2_WITH_RESOURCES)) && (!defined(EE_AS_USER_SPINLOCKS__))
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2_WITH_RESOURCES > 0)
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Array to hold corresponding isr2 nesting levels */
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2_WITH_RESOURCES];
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* (EE_MAX_ISR2_WITH_RESOURCES > 0) && !EE_AS_USER_SPINLOCKS__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #elif defined (EE_MAX_ISR2)
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2 > 0)
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2];
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_ISR2 > 0 */
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the stub that have to be put into the EE_th_body array */
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern void EE_oo_thread_stub(void);
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* see top of the file */
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.2 Task management
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.1 Data types                                                       */
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies a task. */
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID TaskType;
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of TaskType. */
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID *TaskRefType;
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies the state of a task. */
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS TaskStateType;
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of the data type TaskStateType. */
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS *TaskStateRefType;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 26


 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ISR2 management
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies an interrupt service routine (ISR). */
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID ISRType;
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ISR ((ISRType)-1)
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.4 Constants                                                        */
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state running. */
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define RUNNING   ((EE_TYPESTATUS)0U)
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state waiting. */
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define WAITING   ((EE_TYPESTATUS)1U)
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state ready. */
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define READY     ((EE_TYPESTATUS)2U)
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state suspended. */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define SUSPENDED ((EE_TYPESTATUS)3U)
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.4 Resource management
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.4.1 Data types                                                       */
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPERESOURCE ResourceType;
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.5 Event control
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.5.1 Data types                                                       */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK EventMaskType;
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK *EventMaskRefType;
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.6 Counters & Alarms
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents count values in ticks. */
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPETICK TickType;
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type TickType. */
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef TickType *TickRefType;
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 27


 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_CPU_CLOCK
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of ms in number of ticks at the CPU
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     clock frequency **/
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MILLI_TO_CPU_TICKS(X_MS) EE_MILLI_TO_TICKS(X_MS, EE_CPU_CLOCK)
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of us in number of ticks of a given
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     frequency **/
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MICRO_TO_CPU_TICKS(X_US) EE_MICRO_TO_TICKS(X_US, EE_CPU_CLOCK)
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_CPU_CLOCK */
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Alarms Handling */
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Used to handle some corner cases with TickType */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK_HALF_VALUE ((((EE_TYPETICK)-1) >> 1) + 1U)
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.6.1 Data types                                                       */
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* A structure for storage of counter characteristics. */
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType maxallowedvalue; /* Maximum possible allowed count value in
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                ticks */
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType ticksperbase;    /* Number of hardware ticks required to reach a
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                counter-specific (significant) unit. */
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_EXTENDED_STATUS__
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType mincycle; /* Smallest allowed value for the cycle-parameter
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         of SetRelAlarm/SetAbsAlarm) (only for systems
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         with extended status) */
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ */
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } AlarmBaseType;
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type AlarmBaseType. */
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef AlarmBaseType *AlarmBaseRefType;
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represent a counter object ID. */
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTEROBJECT  CounterObjectType;
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter object ID */
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER_OBJECT  ((CounterObjectType)-1)
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an action ID. */
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEACTION ActionType;
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an alarm ID. */
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEALARM AlarmType;
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid alarm */
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ALARM ((AlarmType)-1)
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This is an additional data type that represents a counter ID. */
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTER CounterType;
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter */
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER ((CounterType)-1)
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: depends on configuration */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 28


 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        maxallowedvalue;
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        ticksperbase;
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        mincycle;
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this counter belong to. */
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType ApplID;
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_ROM_type;
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: {0, -1} */
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          value;  /**< current value of the counter */
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType first;  /**< first object queued on the counter */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_RAM_type;
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Add supplementary support info for hardware counters */
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType microsecondspertick;
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_hw_ROM_type;
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter objects */
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ALARM,
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_SCHEDULETABLE
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_kind_type;
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_counter_object_kind_type CounterObjectKindType;
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The counter this counter is linked to */
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType           c;
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** ID specialized Id (In Alarm or Schedule Tables List) */
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType     spec_id;
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** Which kind of Counter Object is this */
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectKindType kind;
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_ROM_type;
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TYPEBOOL       used;     /**< a flag that is 1 when the alarm is armed */
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          cntcycle; /**< cycle for periodic alarms */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          delta;    /**< delta expiration time (into a queue!) */
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType next;     /**< next counter object in the delta queue */
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_RAM_type;
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter object actions */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_TASK      = 0U,
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_EVENT     = 1U,
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_COUNTER   = 2U,
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_CALLBACK  = 3U
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 29


 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_kind_type;
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_action_kind_type ActionKindType;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** This data structure represent an counter object action */
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionKindType    action_kind;
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TaskType          action_task;
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EventMaskType     action_mask;
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_VOID_CALLBACK  f;
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Counter to increment when the alarm expire.*/
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType       inccount;
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_ROM_type;
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the action that have to be executed when this alarm expire */
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionType        action_id;
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this alarm belong to. */
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType   ApplID;
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_alarm_ROM_type;
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This array contains, for each counter, the characteristics of the counter.
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The initialization value is implementation dependent */
 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_ROM_SIZE)
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if EE_COUNTER_ROM_SIZE > 0
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_ROM_type EE_counter_ROM[EE_COUNTER_ROM_SIZE];
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Add supplementary support info for HARDWARE counters.
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    This array contains, for each HARDWARE counter, the supplementary
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    characteristics of the counter.The initialization value is implementation
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    dependent */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_hw_ROM_type
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_counter_hw_ROM[EE_COUNTER_HW_ROM_SIZE];
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the fixed part of a counter object.
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm or the schedule table represented by this
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_object_ROM_type
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_ROM[EE_COUNTER_OBJECTS_ROM_SIZE];
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part represent the list of the configured actions.
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarms and the schedule tables have been
 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ACTION_ROM_SIZE)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 30


 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ACTION_ROM_SIZE > 0)
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_action_ROM_type EE_oo_action_ROM[EE_ACTION_ROM_SIZE];
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this is the fixed part of the configuration of an alarm
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm have been configured */
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ALARM_ROM_SIZE)
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ALARM_ROM_SIZE > 0)
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_alarm_ROM_type   EE_alarm_ROM[EE_ALARM_ROM_SIZE];
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the RAM part of a counter.
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initialization value = an array of {0,-1} elements */
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_RAM_type       EE_counter_RAM[EE_MAX_COUNTER];
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the variable part of a counter object.
 766:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: all zeros. Note that setting the next value to 0 and
 767:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not -1 does not give problems because used=0; the next field will
 768:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be set by counter_object_insert when inserting the alarm in the queue */
 769:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 770:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 771:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_object_RAM_type
 772:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_RAM[EE_COUNTER_OBJECTS_ROM_SIZE];
 773:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 774:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 775:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 776:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 777:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 778:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 779:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 780:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 781:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 782:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 783:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 784:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 785:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.7 Operating system execution control
 786:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 787:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 788:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.7.1 Data types                                                       */
 789:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 790:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 791:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type represents the application mode. */
 792:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEAPPMODE AppModeType;
 793:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 794:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 795:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 796:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 797:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 31


 798:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 3.2 (Bindings). StatusType is an unsigned char */
 799:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef STATUSTYPEDEFINED
 800:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define STATUSTYPEDEFINED
 801:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef unsigned char StatusType;
 802:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OK                        ((StatusType)0U)
 803:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 804:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 805:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ACCESS                 ((StatusType)1U)
 806:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CALLEVEL               ((StatusType)2U)
 807:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ID                     ((StatusType)3U)
 808:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_LIMIT                  ((StatusType)4U)
 809:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NOFUNC                 ((StatusType)5U)
 810:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_RESOURCE               ((StatusType)6U)
 811:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STATE                  ((StatusType)7U)
 812:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_VALUE                  ((StatusType)8U)
 813:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SERVICEID              ((StatusType)9U)
 814:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ILLEGAL_ADDRESS        ((StatusType)10U)
 815:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_MISSINGEND             ((StatusType)11U)
 816:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_DISABLEDINT            ((StatusType)12U)
 817:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STACKFAULT             ((StatusType)13U)
 818:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PARAM_POINTER          ((StatusType)14U)
 819:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_MEMORY      ((StatusType)15U)
 820:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_TIME        ((StatusType)16U)
 821:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_ARRIVAL     ((StatusType)17U)
 822:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_LOCKED      ((StatusType)18U)
 823:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_EXCEPTION   ((StatusType)19U)
 824:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Spinlocks errors */
 825:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SPINLOCK               ((StatusType)20U)
 826:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_INTERFERENCE_DEADLOCK  ((StatusType)21U)
 827:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NESTING_DEADLOCK       ((StatusType)22U)
 828:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RPC errors */
 829:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CORE                   ((StatusType)23U)
 830:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 831:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Implementation specific errors: they must start with E_OS_SYS_ */
 832:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Error during StartOS */
 833:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SYS_INIT               ((StatusType)24U)
 834:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 835:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 836:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ORTI support
 837:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 838:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 839:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 840:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 841:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 842:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_START_SEC_VAR_NOINIT
 843:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 844:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 845:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 846:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_LASTERROR__
 847:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 848:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a lasterror value that can be used with ORTI */
 849:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern StatusType EE_ORTI_lasterror;
 850:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Macro to set lasterror value that can be used with ORTI */
 851:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_lasterror ( StatusType err ) {
 852:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_lasterror = err;
 853:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 854:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_LASTERROR__ */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 32


 855:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 856:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_ORTI_set_lasterror(ERR) ((void)0)
 857:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif  /* __OO_ORTI_LASTERROR__ */
 858:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 859:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the last OO service called by the application.  SERVICETRACE IDs
 860:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are even numbers. The LSBit is used as a flag and it is set to 1
 861:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    when the servce is entered, to 0 at exit.
 862:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 863:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 864:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ACTIVATETASK              2U
 865:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TERMINATETASK             4U
 866:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CHAINTASK                 6U
 867:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SCHEDULE                  8U
 868:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKID                 10U
 869:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKSTATE              12U
 870:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_DISABLEALLINTERRUPTS      14U
 871:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ENABLEALLINTERRUPTS       16U
 872:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDALLINTERRUPTS      18U
 873:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEALLINTERRUPTS       20U
 874:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDOSINTERRUPTS       22U
 875:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEOSINTERRUPTS        24U
 876:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETRESOURCE               26U
 877:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RELEASERESOURCE           28U
 878:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETEVENT                  30U
 879:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CLEAREVENT                32U
 880:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETEVENT                  34U
 881:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITEVENT                 36U
 882:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARMBASE              38U
 883:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARM                  40U
 884:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETRELALARM               42U
 885:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETABSALARM               44U
 886:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CANCELALARM               46U
 887:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETACTIVEAPPLICATIONMODE  48U
 888:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_STARTOS                   50U
 889:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SHUTDOWNOS                52U
 890:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_FORCESCHEDULE             54U
 891:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INCREMENTCOUNTER          56U
 892:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETCOUNTERVALUE           58U
 893:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETELAPSEDVALUE           60U
 894:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 895:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
 896:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INITSEM                   62U
 897:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITSEM                   64U
 898:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TRYWAITSEM                66U
 899:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_POSTSEM                   68U
 900:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETVALUESEM               70U
 901:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   72U
 902:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_SEM__ */
 903:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   62U
 904:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
 905:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 906:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_SERVICETRACE__
 907:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern volatile EE_UINT8 EE_ORTI_servicetrace;
 908:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 909:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void EE_ORTI_set_service(EE_UINT8 srv)
 910:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 911:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_servicetrace = srv;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 33


 912:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_USE_OTM__
 913:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_send_otm_servicetrace(srv);
 914:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ORTI_USE_OTM__ */
 915:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 916:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 917:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_SERVICETRACE__ */
 918:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 919:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service(EE_UINT8 srv) {}
 289              		.loc 5 919 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 8
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294 0000 80B4     		push	{r7}
 295              		.cfi_def_cfa_offset 4
 296              		.cfi_offset 7, -4
 297 0002 83B0     		sub	sp, sp, #12
 298              		.cfi_def_cfa_offset 16
 299 0004 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 301 0006 0346     		mov	r3, r0
 302 0008 FB71     		strb	r3, [r7, #7]
 303              		.loc 5 919 0
 304 000a 00BF     		nop
 305 000c 0C37     		adds	r7, r7, #12
 306              		.cfi_def_cfa_offset 4
 307 000e BD46     		mov	sp, r7
 308              		.cfi_def_cfa_register 13
 309              		@ sp needed
 310 0010 80BC     		pop	{r7}
 311              		.cfi_restore 7
 312              		.cfi_def_cfa_offset 0
 313 0012 7047     		bx	lr
 314              		.cfi_endproc
 315              	.LFE36:
 316              		.size	EE_ORTI_set_service, .-EE_ORTI_set_service
 317              		.section	.text.EE_ORTI_set_service_in,"ax",%progbits
 318              		.align	2
 319              		.thumb
 320              		.thumb_func
 321              		.type	EE_ORTI_set_service_in, %function
 322              	EE_ORTI_set_service_in:
 323              	.LFB37:
 920:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 921:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* else __OO_ORTI_SERVICETRACE__ */
 922:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 923:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 924:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 925:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 926:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_STOP_SEC_VAR_NOINIT
 927:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 928:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 929:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 930:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Mapping for ORTI service In and Out */
 931:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_in (EE_UINT8 id)
 932:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 324              		.loc 5 932 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 34


 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 82B0     		sub	sp, sp, #8
 333              		.cfi_def_cfa_offset 16
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336 0006 0346     		mov	r3, r0
 337 0008 FB71     		strb	r3, [r7, #7]
 933:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id + 1U);
 338              		.loc 5 933 0
 339 000a FB79     		ldrb	r3, [r7, #7]
 340 000c 0133     		adds	r3, r3, #1
 341 000e DBB2     		uxtb	r3, r3
 342 0010 1846     		mov	r0, r3
 343 0012 FFF7FEFF 		bl	EE_ORTI_set_service
 934:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 344              		.loc 5 934 0
 345 0016 00BF     		nop
 346 0018 0837     		adds	r7, r7, #8
 347              		.cfi_def_cfa_offset 8
 348 001a BD46     		mov	sp, r7
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 001c 80BD     		pop	{r7, pc}
 352              		.cfi_endproc
 353              	.LFE37:
 354              		.size	EE_ORTI_set_service_in, .-EE_ORTI_set_service_in
 355 001e 00BF     		.section	.text.EE_ORTI_set_service_out,"ax",%progbits
 356              		.align	2
 357              		.thumb
 358              		.thumb_func
 359              		.type	EE_ORTI_set_service_out, %function
 360              	EE_ORTI_set_service_out:
 361              	.LFB38:
 935:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 936:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_out (EE_UINT8 id)
 937:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 362              		.loc 5 937 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 8
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 82B0     		sub	sp, sp, #8
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 0346     		mov	r3, r0
 375 0008 FB71     		strb	r3, [r7, #7]
 938:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 35


 376              		.loc 5 938 0
 377 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 000c 1846     		mov	r0, r3
 379 000e FFF7FEFF 		bl	EE_ORTI_set_service
 939:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 380              		.loc 5 939 0
 381 0012 00BF     		nop
 382 0014 0837     		adds	r7, r7, #8
 383              		.cfi_def_cfa_offset 8
 384 0016 BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 0018 80BD     		pop	{r7, pc}
 388              		.cfi_endproc
 389              	.LFE38:
 390              		.size	EE_ORTI_set_service_out, .-EE_ORTI_set_service_out
 391 001a 00BF     		.section	.text.EE_ORTI_set_th_eq_dispatch_prio,"ax",%progbits
 392              		.align	2
 393              		.thumb
 394              		.thumb_func
 395              		.type	EE_ORTI_set_th_eq_dispatch_prio, %function
 396              	EE_ORTI_set_th_eq_dispatch_prio:
 397              	.LFB39:
 940:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 941:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 942:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 943:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 944:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 945:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 946:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 947:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 948:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_PRIORITY__
 949:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This flag enables the visualization of the current task priority in ORTI
 950:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    debuggers. */
 951:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 952:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority and that is the priority
 953:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    that is read by the ORTI debugger
 954:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: the ready priority set for the task
 955:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 956:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_th_priority[EE_MAX_TASK];
 957:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 958:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority saved when a task
 959:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked a resource. It works because a resource can be
 960:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked only by one task at a time.
 961:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    InitValue: all 0
 962:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 963:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 964:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_resource_oldpriority[EE_MAX_RESOURCE];
 965:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_RESOURCE && EE_MAX_RESOURCE > 0U */
 966:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 967:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp)
 968:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 969:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_th_priority[tmp] = EE_th_dispatch_prio[tmp];
 970:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 971:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 972:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index,
 973:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_TYPEPRIO prio)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 36


 974:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 975:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_ORTI_th_priority[index] = prio;
 976:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 977:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 978:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp) {}
 398              		.loc 5 978 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 8
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 403 0000 80B4     		push	{r7}
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 83B0     		sub	sp, sp, #12
 407              		.cfi_def_cfa_offset 16
 408 0004 00AF     		add	r7, sp, #0
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 411              		.loc 5 978 0
 412 0008 00BF     		nop
 413 000a 0C37     		adds	r7, r7, #12
 414              		.cfi_def_cfa_offset 4
 415 000c BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 000e 80BC     		pop	{r7}
 419              		.cfi_restore 7
 420              		.cfi_def_cfa_offset 0
 421 0010 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE39:
 424              		.size	EE_ORTI_set_th_eq_dispatch_prio, .-EE_ORTI_set_th_eq_dispatch_prio
 425 0012 00BF     		.section	.text.EE_as_set_execution_context,"ax",%progbits
 426              		.align	2
 427              		.thumb
 428              		.thumb_func
 429              		.type	EE_as_set_execution_context, %function
 430              	EE_as_set_execution_context:
 431              	.LFB41:
 979:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index, EE_TYPEPRIO prio) {}
 980:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_ORTI_PRIORITY__ */
 981:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 982:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 983:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 984:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 985:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 986:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 987:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 988:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 989:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Semaphores
 990:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 991:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 992:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Semaphores are not part of the OSEK API, please refer to the EE
 993:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    reference manual */
 994:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constants                                                               */
 995:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 996:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 37


 997:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the maximum unsigned integer */
 998:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MAX_SEM_COUNTER ((EE_UREG)-1)
 999:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1000:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data types                                                              */
1001:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
1002:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
1003:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1004:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_TYPESEM {
1005:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG   count;
1006:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_ECC1__) || defined(__OO_ECC2__)
1007:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    first;
1008:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    last;
1009:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
1010:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1011:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1012:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
1013:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct EE_TYPESEM  SemType;
1014:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1015:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
1016:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef SemType *SemRefType;
1017:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1018:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
1019:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1020:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
1021:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Autostart Features inside StartOS()
1022:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
1023:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1024:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: Autostart uses the symbol EE_MAX_APPMODE that represents
1025:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of different application modes in the system. */
1026:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1027:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_TASK__
1028:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1029:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for tasks.
1030:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1031:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of tasks that have to be automatically
1032:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      activated at startup for a given application mode.
1033:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1034:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - task contains the list of TIDs that have to be activated for a
1035:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1036:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1037:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1038:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_task_type {
1039:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG nt;
1040:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TID (*task)[]; /* pointer to array of TIDs */
1041:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1042:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1043:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1044:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1045:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_task_type
1046:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_task_data[EE_MAX_APPMODE];
1047:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1048:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1049:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1050:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_ALARM__
1051:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1052:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for alarms.
1053:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 38


1054:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of alarms that have to be automatically
1055:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      set at startup for a given application mode.
1056:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1057:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - alarm contains the list of Alarm IDs that have to be activated for a
1058:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1059:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1060:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1061:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_alarm_type {
1062:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG na;
1063:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TYPEALARM (*alarm)[];
1064:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1065:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1066:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1067:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1068:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_alarm_type
1069:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_alarm_data[EE_MAX_APPMODE];
1070:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1071:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each Alarm that is activated there should be an item in these
1072:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    arrays that contains the cycle and increment values that have to be
1073:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    used when activating a given alarm ID. Note that cycle/increment
1074:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are unique for each alarm activation time.
1075:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The size of these two arrays is MAXALARM.
1076:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1077:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_increment[EE_MAX_ALARM];
1078:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_cycle[EE_MAX_ALARM];
1079:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1080:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1081:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __MSRP__
1082:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*******************************************************************************
1083:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *               Autosar Multicore support Type Declarations
1084:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ******************************************************************************/
1085:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*  The following type declarations are added here and not inside AS kernel
1086:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     because i need "TryToGetSpinlockType *" to completely define EE_os_param
1087:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     type (used inside Error parameters structure).
1088:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     The problem is that theoretically there is not in C such a thing as
1089:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     "standard pointer dimension" but each pointer COULD HAVE his own dimension
1090:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     (it never happens... Actually the 99% of architectures has pointer and
1091:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     value registers with same dimension). */
1092:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1093:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOREID CoreIdType;
1094:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1095:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_USER_SPINLOCKS__
1096:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESPIN   SpinlockIdType;
1097:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_SPINLOCK ((SpinlockIdType)-1)
1098:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1099:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_NOSUCCESS = 0x0,
1101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_SUCCESS
1102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } TryToGetSpinlockType;
1103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  EE_AS_USER_SPINLOCKS__ */
1104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __MSRP__ */
1105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*[OS088] If an OS-Application makes a service call from the wrong context AND
1107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   is currently not inside a Category 1 ISR the Operating System module shall
1108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   not perform the requested action (the service call shall have no effect),
1109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   and return E_OS_CALLEVEL (see [12], section 13.1) or the "invalid value" of
1110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   the service. (BSW11009, BSW11013) */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 39


1111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef OS-Application contexts enum used to implement Autosar OS O0S88
1112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     requirement */
1113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Kernel_Context,
1115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TASK_Context,
1116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ISR2_Context,
1117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ErrorHook_Context,
1118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ProtectionHook_Context,
1119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PreTaskHook_Context,
1120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PostTaskHook_Context,
1121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   StartupHook_Context,
1122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ShutdownHook_Context,
1123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   AlarmCallback_Context,
1124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Idle_Context
1125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_TYPECONTEXT;
1126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SERVICE_PROTECTION__
1128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
1131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
1132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @var used by the kernel to flag in witch context is executing */
1136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPECONTEXT EE_as_execution_context;
1137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
1141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ EE_TYPECONTEXT  EE_as_get_execution_context( void )
1145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   return EE_as_execution_context;
1147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx )
1151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_as_execution_context = ctx;
1153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* EE_SERVICE_PROTECTION__ */
1155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_as_get_execution_context()     Kernel_Context
1156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx ) {
 432              		.loc 5 1157 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 40


 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 444 0006 0346     		mov	r3, r0
 445 0008 FB71     		strb	r3, [r7, #7]
1158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Unusefull operation to meet Linters requirements */
1159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   (void)ctx;
1160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 446              		.loc 5 1160 0
 447 000a 00BF     		nop
 448 000c 0C37     		adds	r7, r7, #12
 449              		.cfi_def_cfa_offset 4
 450 000e BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 0010 80BC     		pop	{r7}
 454              		.cfi_restore 7
 455              		.cfi_def_cfa_offset 0
 456 0012 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE41:
 459              		.size	EE_as_set_execution_context, .-EE_as_set_execution_context
 460              		.section	.text.EE_as_monitoring_the_stack,"ax",%progbits
 461              		.align	2
 462              		.thumb
 463              		.thumb_func
 464              		.type	EE_as_monitoring_the_stack, %function
 465              	EE_as_monitoring_the_stack:
 466              	.LFB50:
 467              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Copyright (C) 2002-2012  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * exception statement from your version.
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 41


  29:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  /** @file      ee_as_internal.h
  42:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   *  @brief     Internals for Autosar layer
  43:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   *  @author    Errico Guidieri
  44:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   *  @date      2012
  45:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   */
  46:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  47:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*
  48:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * PSoC Port and API Generation
  49:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Carlos Fernando Meier Martinez
  50:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  51:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  */
  52:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifndef PKG_KERNEL_AS_INC_EE_AS_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define PKG_KERNEL_AS_INC_EE_AS_INTERNAL_H
  55:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #include "ErikaOS_1_ee_as_kernel.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_USER_SPINLOCKS__
  59:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
  60:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                        Spinlock Internal Clean-Up
  61:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
  62:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ EE_TYPEBOOL 
  64:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     EE_as_has_spinlocks_locked( EE_TID tid )
  65:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
  66:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   SpinlockIdType const spinlock_id = EE_as_spinlocks_last[EE_CURRENTCPU];
  67:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   return ( (spinlock_id != INVALID_SPINLOCK) &&
  68:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****       (EE_as_spinlocks_locker_task_or_isr2[spinlock_id] == tid) );
  69:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
  70:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  71:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Internal Clean-up function */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** SpinlockIdType EE_as_release_all_spinlocks( EE_TID tid );
  73:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else  /* EE_AS_USER_SPINLOCKS__ */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_as_release_all_spinlocks(tid) ((void)0U)
  76:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_USER_SPINLOCKS__ */
  77:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  78:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
  79:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                        Schedule Tables Utilities
  80:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
  81:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_SCHEDULETABLES__
  82:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Utilities inline functions to check ticks and deviation values */
  83:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ TickType  EE_as_tick_min( TickType t1, TickType t2 )
  84:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
  85:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   if ( t1 <= t2 ) {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 42


  86:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     return t1;
  87:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   } else {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     return t2;
  89:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   }
  90:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
  91:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ EE_UREG  EE_as_abs( TickType t )
  93:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   if ( t < EE_TYPETICK_HALF_VALUE ) {
  95:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     return t;
  96:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   } else {
  97:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     return -t;
  98:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   }
  99:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
 100:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_SCHEDULETABLES__ */
 102:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_RPC__
 104:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
 105:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                   Synchronous Remote Procedure Calls
 106:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
 107:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Macro used to check if an id is a remote id */
 108:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_AS_ID_REMOTE(id)         ((((EE_UINT32)(id)) & \
 109:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     (EE_UINT32)EE_REMOTE_TID) != 0U)
 110:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Macro used to unmark a remote id */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_AS_UNMARK_REMOTE_ID(id)  (((EE_UINT32)(id)) & (~EE_REMOTE_TID))
 112:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 113:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief define that identify an invalid ServiceId */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define INVALID_SERVICE_ID      ((OSServiceIdType)-1)
 115:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define INVALID_ERROR           ((StatusType)-1)
 116:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 117:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief RPC Handler to be called inside IIRQ handler */
 118:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern void  EE_as_rpc_handler( void );
 119:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 121:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 122:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define API_START_SEC_CODE
 124:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #include "MemMap.inc"
 125:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef __EE_MEMORY_PROTECTION__
 128:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief The following implement a synchronous RPC kernel primitive from
 129:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     "user space" (so it's a syscall). */
 130:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern StatusType EE_as_rpc_from_us( OSServiceIdType ServiceId,
 131:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3 );
 132:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* __EE_MEMORY_PROTECTION__ */
 133:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ StatusType  EE_as_rpc_from_us( OSServiceIdType
 134:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ServiceId, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 135:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
 136:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   StatusType ev;
 137:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   register EE_FREG const flag = EE_hal_begin_nested_primitive();
 138:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ev = EE_as_rpc(ServiceId, param1, param2, param3);
 139:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_hal_end_nested_primitive(flag);
 140:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   return ev;
 141:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
 142:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* __EE_MEMORY_PROTECTION__ */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 43


 143:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 144:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define API_STOP_SEC_CODE
 145:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #include "MemMap.inc"
 146:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 147:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 148:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_RPC__ */
 149:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 151:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
 152:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                        OSApplication Utilities
 153:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
 154:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 155:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Used to terminate current OS-Application. */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_terminate_current_app_task( void );
 157:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Used to terminate current OS-Application. */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #if defined(EE_MAX_ISR2) && (EE_MAX_ISR2 > 0)
 160:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ void  EE_as_terminate_current_app( void )
 161:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
 162:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   if ( EE_hal_get_IRQ_nesting_level() == 0U ) {
 163:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     /* We are in a TASK */
 164:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     EE_as_terminate_current_app_task();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   } else {
 166:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     /* We are in the an ISR2 */
 167:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     (void)EE_as_TerminateISR2();
 168:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   }
 169:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
 170:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else  /* EE_MAX_ISR2 > 0 */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ void  EE_as_terminate_current_app( void )
 172:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
 173:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   /* There are no ISR2: We are in a TASK */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_as_terminate_current_app_task();
 175:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
 176:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_MAX_ISR2 > 0 */
 177:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 178:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /**
 179:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * @brief Supposed to be called by EE_as_TerminateISR2 to restore trackin
 180:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *  OSApplication global variable and eventually terminate stacked.
 181:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  */
 182:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_after_IRQ_interrupted_app ( ApplicationType interrupted_app );
 183:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* @brief Function determines the currently running OS-Application.
 185:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *         (a unique identifier has to be allocated to each application).
 186:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  */
 187:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #if 0
 188:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** ApplicationType EE_as_GetApplicationID_internal( void );
 189:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif
 190:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 191:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief his service determines if the OS-Applications, given by ApplID, is
 192:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *    allowed to use the IDs of a Task, ISR, Resource, Counter, Alarm or
 193:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *    Schedule Table in API calls. */
 194:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** ObjectAccessType EE_as_CheckObjectAccess_internal( ApplicationType ApplID,
 195:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ObjectTypeType ObjectType, EE_UTID ObjectID );
 196:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief his service determines the OS-Applications to which the
 198:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ID of a Task, ISR, Resource, Counter, Alarm or Schedule Table belong to. */
 199:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** ApplicationType EE_as_CheckObjectOwnership_internal( ObjectTypeType ObjectType,
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 44


 200:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_os_param_id ObjectID );
 201:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 202:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Internal part of TerminateApplication service */
 203:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_TerminateApplication_internal( ApplicationType Application,
 204:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   RestartType RestartOption ); 
 205:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 206:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* THESE HAL FUNCTIONS DECLARATION ARE PUT HERE BECAUSE SIGNATURE DEPENDS ON
 207:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****    AS KERNEL TYPES */
 208:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 209:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Call application hook with right privileges */
 210:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_hal_call_app_hook( EE_HOOKTYPE hook, ApplicationType app );
 211:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 212:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Call status application hook with right privileges */
 213:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_hal_call_app_status_hook( StatusType Error, EE_STATUSHOOKTYPE
 214:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   status_hook, ApplicationType app );
 215:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 216:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @brief Utility macro used to transform a Application ID in a bit mask */
 217:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_APP_TO_MASK(app_id)  ((EE_TYPEACCESSMASK)1U << (app_id))
 218:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_SERVICE_PROTECTION__
 220:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
 221:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *            OSApplication Service Protection Access Data Structures
 222:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
 223:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* [OS056] If an OS-object identifier is the parameter of an Operating System
 224:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     module's system service, and no sufficient access rights have been assigned
 225:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     to this OS-object at configuration time
 226:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     (Parameter Os[...]AccessingApplication) to the calling Task/Category 2 ISR,
 227:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     the Operating System module's system service shall return E_OS_ACCESS.
 228:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     (BSW11001, BSW11010, BSW11013) */
 229:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* [OS448]: The Operating System module shall prevent access of OS-Applications,
 230:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     trusted or non-trusted, to objects not belonging to this OS-Application,
 231:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     except access rights for such objects are explicitly granted by
 232:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     configuration.
 233:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** */
 234:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* [OS504] The Operating System module shall deny access to Operating System
 235:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     objects from other OS-Applications to an OS-Application which is not in
 236:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     state APPLICATION_ACCESSIBLE. */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* [OS509] If a service call is made on an Operating System object that is owned
 238:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     by another OS-Application without state APPLICATION_ACCESSIBLE,
 239:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     then the Operating System module shall return E_OS_ACCESS. */
 240:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 241:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for TASKs */
 242:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const EE_as_task_access_rules[/*EE_MAX_TASK*/];
 243:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for ISRs */
 245:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const EE_as_isr_access_rules[/*EE_MAX_ISR_ID*/];
 246:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 247:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifndef __OO_NO_RESOURCES__
 248:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for RESOURCESs */
 249:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const EE_as_resource_access_rules[/*EE_MAX_RESOURCE*/];
 250:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* !__OO_NO_RESOURCES__ */
 251:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 252:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || defined(EE_AS_SCHEDULETABLES__)
 253:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for COUNTERs */
 254:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const EE_as_counter_access_rules[/*EE_MAX_COUNTER*/];
 255:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* !__OO_NO_ALARMS__ || !EE_AS_SCHEDULETABLES__ */
 256:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 45


 257:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifndef __OO_NO_ALARMS__
 258:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for ALARMs */
 259:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const EE_as_alarm_access_rules[/*EE_MAX_ALARM*/];
 260:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* !__OO_NO_ALARMS__ */
 261:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_SCHEDULETABLES__
 263:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for SCHEDULE TABLEs */
 264:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_as_scheduletable_access_rules[/*EE_MAX_SCHEDULETABLE*/];
 266:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_SCHEDULETABLES__ */
 267:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_USER_SPINLOCKS__
 269:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @var Contains access rules for SCHEDULE TABLEs */
 270:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_TYPEACCESSMASK const 
 271:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_as_spinlock_access_rules[/*EE_MAX_SPINLOCK_USER*/];
 272:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_USER_SPINLOCKS__ */
 273:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 274:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* OSApplication Objects belog to active Macros */
 276:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_OSAPP_TASK_ACCESS(TaskID) (EE_as_Application_RAM[\
 277:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_th_app[(TaskID + 1U)]].ApplState == APPLICATION_ACCESSIBLE)
 278:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 279:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_OSAPP_ISR_ACCESS(ISRID) (EE_as_Application_RAM[\
 280:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_as_ISR_ROM[ISRID].ApplID].ApplState == APPLICATION_ACCESSIBLE)
 281:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 282:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_OSAPP_COUNTER_ACCESS(CounterID) (EE_as_Application_RAM[\
 283:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_counter_ROM[CounterID].ApplID].ApplState == APPLICATION_ACCESSIBLE)
 284:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 285:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_OSAPP_ALARM_ACCESS(AlarmID) (EE_as_Application_RAM[\
 286:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_alarm_ROM[AlarmID].ApplID].ApplState == APPLICATION_ACCESSIBLE)
 287:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 288:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_OSAPP_SCHED_TABLE_ACCESS(SchedTableID) (EE_as_Application_RAM[\
 289:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_as_Schedule_Table_ROM[SchedTableID].ApplID].ApplState == \
 290:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   APPLICATION_ACCESSIBLE)
 291:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 292:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Access Macros */
 293:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_TASK_ACCESS(TaskID, ApplID) (((EE_as_task_access_rules[TaskID] & \
 294:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_APP_TO_MASK(ApplID)) && EE_OSAPP_TASK_ACCESS(TaskID)))
 295:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_ISR_ACCESS(ISRID, ApplID) (((EE_as_isr_access_rules[ISRID] & \
 297:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_APP_TO_MASK(ApplID)) && EE_OSAPP_ISR_ACCESS(ISRID)))
 298:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 299:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_COUNTER_ACCESS(CounterID, ApplID) \
 300:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   (((EE_as_counter_access_rules[CounterID] & EE_APP_TO_MASK(ApplID)) && \
 301:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     EE_OSAPP_COUNTER_ACCESS(CounterID)))
 302:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 303:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_ALARM_ACCESS(AlarmID, ApplID) (((EE_as_alarm_access_rules[\
 304:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   AlarmID] & EE_APP_TO_MASK(ApplID)) && EE_OSAPP_ALARM_ACCESS(AlarmID)))
 305:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 306:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_SCHED_TABLE_ACCESS(SchedTableID, ApplID) \
 307:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   (((EE_as_scheduletable_access_rules[SchedTableID] & EE_APP_TO_MASK(ApplID)) \
 308:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****    && EE_OSAPP_SCHED_TABLE_ACCESS(SchedTableID)))
 309:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_RESOURCE_ACCESS(ResourceID, ApplID) \
 311:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ((EE_as_resource_access_rules[ResourceID] & EE_APP_TO_MASK(ApplID)))
 312:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 313:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_SPINLOCK_ACCESS(SpinlockID, ApplID) \
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 46


 314:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ((EE_as_spinlock_access_rules[SpinlockID] & EE_APP_TO_MASK(ApplID)))
 315:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 316:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Error Macros */
 317:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_TASK_ACCESS_ERR(TaskID, ApplID) (!EE_TASK_ACCESS(TaskID, ApplID))
 318:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_ISR_ACCESS_ERR(ISRID, ApplID) (!EE_ISR_ACCESS(ISRID, ApplID))
 320:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 321:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_COUNTER_ACCESS_ERR(CounterID, ApplID) (!EE_COUNTER_ACCESS(CounterID,\
 322:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ApplID))
 323:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_ALARM_ACCESS_ERR(AlarmID, ApplID) (!EE_ALARM_ACCESS(AlarmID, \
 325:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   ApplID))
 326:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 327:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_SCHED_TABLE_ACCESS_ERR(SchedTableID, ApplID) \
 328:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   (!EE_SCHED_TABLE_ACCESS(SchedTableID, ApplID))
 329:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 330:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_RESOURCE_ACCESS_ERR(ResourceID, ApplID) \
 331:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   (!EE_RESOURCE_ACCESS(ResourceID, ApplID))
 332:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 333:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_SPINLOCK_ACCESS_ERR(SpinlockID, ApplID) \
 334:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   (!EE_SPINLOCK_ACCESS(SpinlockID, ApplID))
 335:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 336:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_SERVICE_PROTECTION__ */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 338:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 339:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_HAS_PROTECTIONHOOK__
 340:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
 341:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                     ProtectionHook Internal Support
 342:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
 343:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 344:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /**
 345:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * @brief This function wraps the call to the protection hook.
 346:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Also, it does what is required to do according to what the ProtectionHook
 347:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * returns.
 348:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * @param error_app the OS-Application that caused the error
 349:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * @param error     the error to send to the ProtectionHook function
 350:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  */
 351:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_handle_protection_error( ApplicationType error_app,
 352:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   StatusType error );
 353:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* EE_AS_OSAPPLICATIONS__ */
 354:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /**
 355:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * @brief This function wraps the call to the protection hook.
 356:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Also, it does what is required to do according to what the ProtectionHook
 357:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * returns.
 358:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * @param error     the error to send to the ProtectionHook function
 359:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_handle_protection_error( StatusType error );
 361:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 362:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_HAS_PROTECTIONHOOK__ */
 363:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 364:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef __EE_MEMORY_PROTECTION__
 365:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
 366:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                   Memory Protection Internal Support
 367:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
 368:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** Syscall table */
 369:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** extern EE_FADDR const EE_syscall_table[/*EE_SYSCALL_NR*/];
 370:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 47


 371:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /** @typedef for TRUSTED Function pointers */
 372:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** typedef StatusType (*EE_TRUSTEDFUNCTYPE)(TrustedFunctionIndexType,
 373:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   TrustedFunctionParameterRefType);
 374:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 375:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* THIS HAL FUNCTIONS DECLARATION ARE PUT HERE BECAUSE SIGNATURE DEPENDS ON
 376:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****    AS KERNEL TYPES */
 377:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 378:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /**
 379:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * Return the access permission for the given memory area.  Defined in the CPU
 380:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  * layer. */
 381:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** AccessType EE_hal_get_app_mem_access(ApplicationType app,
 382:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   MemoryStartAddressType beg, MemorySizeType size);
 383:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #if defined(EE_SYSCALL_NR) && defined(EE_MAX_SYS_SERVICEID) &&\
 385:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 386:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ EE_TYPEBOOL 
 387:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_as_active_app_is_inside_trusted_function_call ( void )
 388:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** {
 389:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   return EE_as_Application_RAM[EE_as_active_app].
 390:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****     TrustedFunctionCallsCounter != 0U;
 391:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** }
 392:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_as_active_app_is_inside_trusted_function_call()  EE_FALSE
 394:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 395:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* __EE_MEMORY_PROTECTION__ */
 396:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #define EE_as_active_app_is_inside_trusted_function_call()  EE_FALSE
 397:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* __EE_MEMORY_PROTECTION__ */
 398:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 399:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /*******************************************************************************
 400:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  *                     Stack Monitoring Internal Support
 401:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****  ******************************************************************************/
 402:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_STACK_MONITORING__
 403:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 405:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Functions used to check and handle Stack Overflow, with short cut to
 406:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****    pass current application */
 407:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_check_and_handle_stack_overflow( ApplicationType appid,
 408:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****   EE_UREG stktop );
 409:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* EE_AS_OSAPPLICATIONS__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Functions used to check and handle Stack Overflow. Have to be to be
 411:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc ****    implemented in each porting that support stack monitoring */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_check_and_handle_stack_overflow( EE_UREG stktop );
 413:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif  /* EE_AS_OSAPPLICATIONS__ */
 414:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 415:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** /* Used Internally in Kernel primitives */
 416:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** void EE_as_monitoring_the_stack( void );
 417:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* EE_STACK_MONITORING__ */
 419:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 420:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ void 
 421:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** EE_as_check_and_handle_stack_overflow( ApplicationType appid, EE_UREG stktop ) {}
 422:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #else /* EE_AS_OSAPPLICATIONS__ */
 423:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ void 
 424:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** EE_as_check_and_handle_stack_overflow( EE_UREG stktop ) {}
 425:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 426:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** 
 427:Generated_Source\PSoC5/ErikaOS_1_ee_as_internal.inc **** __INLINE__ void  EE_as_monitoring_the_stack( void ) {}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 48


 468              		.loc 6 427 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 1, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473 0000 80B4     		push	{r7}
 474              		.cfi_def_cfa_offset 4
 475              		.cfi_offset 7, -4
 476 0002 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478              		.loc 6 427 0
 479 0004 00BF     		nop
 480 0006 BD46     		mov	sp, r7
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 0008 80BC     		pop	{r7}
 484              		.cfi_restore 7
 485              		.cfi_def_cfa_offset 0
 486 000a 7047     		bx	lr
 487              		.cfi_endproc
 488              	.LFE50:
 489              		.size	EE_as_monitoring_the_stack, .-EE_as_monitoring_the_stack
 490              		.section	.text.EE_os_notify_error_impl,"ax",%progbits
 491              		.align	2
 492              		.thumb
 493              		.thumb_func
 494              		.type	EE_os_notify_error_impl, %function
 495              	EE_os_notify_error_impl:
 496              	.LFB51:
 497              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 49


  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 50


  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 51


 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 498              		.loc 7 176 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 8
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503 0000 80B4     		push	{r7}
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 7, -4
 506 0002 83B0     		sub	sp, sp, #12
 507              		.cfi_def_cfa_offset 16
 508 0004 00AF     		add	r7, sp, #0
 509              		.cfi_def_cfa_register 7
 510 0006 0346     		mov	r3, r0
 511 0008 FB71     		strb	r3, [r7, #7]
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 512              		.loc 7 178 0
 513 000a 00BF     		nop
 514 000c 0C37     		adds	r7, r7, #12
 515              		.cfi_def_cfa_offset 4
 516 000e BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 52


 518              		@ sp needed
 519 0010 80BC     		pop	{r7}
 520              		.cfi_restore 7
 521              		.cfi_def_cfa_offset 0
 522 0012 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE51:
 525              		.size	EE_os_notify_error_impl, .-EE_os_notify_error_impl
 526              		.section	.text.EE_stk_queryfirst,"ax",%progbits
 527              		.align	2
 528              		.thumb
 529              		.thumb_func
 530              		.type	EE_stk_queryfirst, %function
 531              	EE_stk_queryfirst:
 532              	.LFB53:
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 53


 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 533              		.loc 7 239 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 543              		.loc 7 240 0
 544 0004 024B     		ldr	r3, .L22
 545 0006 1B68     		ldr	r3, [r3]
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 546              		.loc 7 241 0
 547 0008 1846     		mov	r0, r3
 548 000a BD46     		mov	sp, r7
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 000c 80BC     		pop	{r7}
 552              		.cfi_restore 7
 553              		.cfi_def_cfa_offset 0
 554 000e 7047     		bx	lr
 555              	.L23:
 556              		.align	2
 557              	.L22:
 558 0010 00000000 		.word	EE_stkfirst
 559              		.cfi_endproc
 560              	.LFE53:
 561              		.size	EE_stk_queryfirst, .-EE_stk_queryfirst
 562              		.section	.text.EE_oo_call_PreTaskHook,"ax",%progbits
 563              		.align	2
 564              		.thumb
 565              		.thumb_func
 566              		.type	EE_oo_call_PreTaskHook, %function
 567              	EE_oo_call_PreTaskHook:
 568              	.LFB57:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 54


 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 55


 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 56


 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 569              		.loc 7 398 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573 0000 80B5     		push	{r7, lr}
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 579              		.loc 7 400 0
 580 0004 0120     		movs	r0, #1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 57


 581 0006 FFF7FEFF 		bl	EE_as_set_execution_context
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 582              		.loc 7 401 0
 583 000a 00BF     		nop
 584 000c 80BD     		pop	{r7, pc}
 585              		.cfi_endproc
 586              	.LFE57:
 587              		.size	EE_oo_call_PreTaskHook, .-EE_oo_call_PreTaskHook
 588 000e 00BF     		.section	.text.EE_oo_call_PostTaskHook,"ax",%progbits
 589              		.align	2
 590              		.thumb
 591              		.thumb_func
 592              		.type	EE_oo_call_PostTaskHook, %function
 593              	EE_oo_call_PostTaskHook:
 594              	.LFB58:
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 595              		.loc 7 410 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600 0000 80B4     		push	{r7}
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 605              		.loc 7 410 0
 606 0004 00BF     		nop
 607 0006 BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 0008 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 000a 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE58:
 616              		.size	EE_oo_call_PostTaskHook, .-EE_oo_call_PostTaskHook
 617              		.section	.text.EE_oo_reset_th_event_active,"ax",%progbits
 618              		.align	2
 619              		.thumb
 620              		.thumb_func
 621              		.type	EE_oo_reset_th_event_active, %function
 622              	EE_oo_reset_th_event_active:
 623              	.LFB63:
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 58


 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 59


 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 60


 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 624              		.loc 7 554 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 8
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 629 0000 80B4     		push	{r7}
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 83B0     		sub	sp, sp, #12
 633              		.cfi_def_cfa_offset 16
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_def_cfa_register 7
 636 0006 7860     		str	r0, [r7, #4]
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 637              		.loc 7 555 0
 638 0008 044A     		ldr	r2, .L27
 639 000a 7B68     		ldr	r3, [r7, #4]
 640 000c 0021     		movs	r1, #0
 641 000e 42F82310 		str	r1, [r2, r3, lsl #2]
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 642              		.loc 7 556 0
 643 0012 00BF     		nop
 644 0014 0C37     		adds	r7, r7, #12
 645              		.cfi_def_cfa_offset 4
 646 0016 BD46     		mov	sp, r7
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 0018 80BC     		pop	{r7}
 650              		.cfi_restore 7
 651              		.cfi_def_cfa_offset 0
 652 001a 7047     		bx	lr
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 61


 653              	.L28:
 654              		.align	2
 655              	.L27:
 656 001c 00000000 		.word	EE_th_event_active
 657              		.cfi_endproc
 658              	.LFE63:
 659              		.size	EE_oo_reset_th_event_active, .-EE_oo_reset_th_event_active
 660              		.section	.text.EE_oo_run_next_task,"ax",%progbits
 661              		.align	2
 662              		.thumb
 663              		.thumb_func
 664              		.type	EE_oo_run_next_task, %function
 665              	EE_oo_run_next_task:
 666              	.LFB64:
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 667              		.loc 7 563 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 98B5     		push	{r3, r4, r7, lr}
 672              		.cfi_def_cfa_offset 16
 673              		.cfi_offset 3, -16
 674              		.cfi_offset 4, -12
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 679              		.loc 7 566 0
 680 0004 FFF7FEFF 		bl	EE_rq2stk_exchange
 681 0008 0446     		mov	r4, r0
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 682              		.loc 7 567 0
 683 000a 0A4B     		ldr	r3, .L33
 684 000c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 685 0010 002B     		cmp	r3, #0
 686 0012 09D0     		beq	.L30
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 687              		.loc 7 569 0
 688 0014 074B     		ldr	r3, .L33
 689 0016 0022     		movs	r2, #0
 690 0018 43F82420 		str	r2, [r3, r4, lsl #2]
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 691              		.loc 7 571 0
 692 001c FFF7FEFF 		bl	EE_oo_call_PreTaskHook
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 693              		.loc 7 572 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 62


 694 0020 2046     		mov	r0, r4
 695 0022 FFF7FEFF 		bl	EE_hal_stkchange
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 696              		.loc 7 577 0
 697 0026 02E0     		b	.L32
 698              	.L30:
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 699              		.loc 7 575 0
 700 0028 2046     		mov	r0, r4
 701 002a FFF7FEFF 		bl	EE_hal_ready2stacked
 702              	.L32:
 703              		.loc 7 577 0
 704 002e 00BF     		nop
 705 0030 98BD     		pop	{r3, r4, r7, pc}
 706              	.L34:
 707 0032 00BF     		.align	2
 708              	.L33:
 709 0034 00000000 		.word	EE_th_waswaiting
 710              		.cfi_endproc
 711              	.LFE64:
 712              		.size	EE_oo_run_next_task, .-EE_oo_run_next_task
 713              		.section	.text.EE_oo_set_th_status_ready,"ax",%progbits
 714              		.align	2
 715              		.thumb
 716              		.thumb_func
 717              		.type	EE_oo_set_th_status_ready, %function
 718              	EE_oo_set_th_status_ready:
 719              	.LFB65:
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 63


 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 720              		.loc 7 604 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 8
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724 0000 80B5     		push	{r7, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 82B0     		sub	sp, sp, #8
 729              		.cfi_def_cfa_offset 16
 730 0004 00AF     		add	r7, sp, #0
 731              		.cfi_def_cfa_register 7
 732 0006 7860     		str	r0, [r7, #4]
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 733              		.loc 7 605 0
 734 0008 084A     		ldr	r2, .L38
 735 000a 7B68     		ldr	r3, [r7, #4]
 736 000c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 737 0010 032B     		cmp	r3, #3
 738 0012 07D1     		bne	.L37
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 739              		.loc 7 606 0
 740 0014 054A     		ldr	r2, .L38
 741 0016 7B68     		ldr	r3, [r7, #4]
 742 0018 0221     		movs	r1, #2
 743 001a 42F82310 		str	r1, [r2, r3, lsl #2]
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 744              		.loc 7 607 0
 745 001e 7868     		ldr	r0, [r7, #4]
 746 0020 FFF7FEFF 		bl	EE_oo_reset_th_event_active
 747              	.L37:
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 748              		.loc 7 609 0
 749 0024 00BF     		nop
 750 0026 0837     		adds	r7, r7, #8
 751              		.cfi_def_cfa_offset 8
 752 0028 BD46     		mov	sp, r7
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 002a 80BD     		pop	{r7, pc}
 756              	.L39:
 757              		.align	2
 758              	.L38:
 759 002c 00000000 		.word	EE_th_status
 760              		.cfi_endproc
 761              	.LFE65:
 762              		.size	EE_oo_set_th_status_ready, .-EE_oo_set_th_status_ready
 763              		.section	.text.EE_oo_task_in_ready_queue,"ax",%progbits
 764              		.align	2
 765              		.thumb
 766              		.thumb_func
 767              		.type	EE_oo_task_in_ready_queue, %function
 768              	EE_oo_task_in_ready_queue:
 769              	.LFB66:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 64


 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 770              		.loc 7 624 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 8
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 82B0     		sub	sp, sp, #8
 779              		.cfi_def_cfa_offset 16
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 782 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 783              		.loc 7 626 0
 784 0008 094A     		ldr	r2, .L41
 785 000a 7B68     		ldr	r3, [r7, #4]
 786 000c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 787 0010 5A1E     		subs	r2, r3, #1
 788 0012 0749     		ldr	r1, .L41
 789 0014 7B68     		ldr	r3, [r7, #4]
 790 0016 41F82320 		str	r2, [r1, r3, lsl #2]
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 791              		.loc 7 628 0
 792 001a 7868     		ldr	r0, [r7, #4]
 793 001c FFF7FEFF 		bl	EE_oo_set_th_status_ready
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 794              		.loc 7 630 0
 795 0020 7868     		ldr	r0, [r7, #4]
 796 0022 FFF7FEFF 		bl	EE_rq_insert
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 797              		.loc 7 631 0
 798 0026 00BF     		nop
 799 0028 0837     		adds	r7, r7, #8
 800              		.cfi_def_cfa_offset 8
 801 002a BD46     		mov	sp, r7
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 65


 805              	.L42:
 806 002e 00BF     		.align	2
 807              	.L41:
 808 0030 00000000 		.word	EE_th_rnact
 809              		.cfi_endproc
 810              	.LFE66:
 811              		.size	EE_oo_task_in_ready_queue, .-EE_oo_task_in_ready_queue
 812              		.section	.text.EE_oo_preemption_point,"ax",%progbits
 813              		.align	2
 814              		.thumb
 815              		.thumb_func
 816              		.type	EE_oo_preemption_point, %function
 817              	EE_oo_preemption_point:
 818              	.LFB67:
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 819              		.loc 7 641 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 B0B5     		push	{r4, r5, r7, lr}
 824              		.cfi_def_cfa_offset 16
 825              		.cfi_offset 4, -16
 826              		.cfi_offset 5, -12
 827              		.cfi_offset 7, -8
 828              		.cfi_offset 14, -4
 829 0002 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 831              		.loc 7 645 0
 832 0004 FFF7FEFF 		bl	EE_stk_queryfirst
 833 0008 0546     		mov	r5, r0
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 834              		.loc 7 646 0
 835 000a FFF7FEFF 		bl	EE_rq_queryfirst
 836 000e 0446     		mov	r4, r0
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 66


 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 837              		.loc 7 671 0
 838 0010 B4F1FF3F 		cmp	r4, #-1
 839 0014 20D0     		beq	.L46
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 840              		.loc 7 674 0
 841 0016 114B     		ldr	r3, .L47
 842 0018 53F82420 		ldr	r2, [r3, r4, lsl #2]
 843 001c 104B     		ldr	r3, .L47+4
 844 001e 1B68     		ldr	r3, [r3]
 845 0020 9A42     		cmp	r2, r3
 846 0022 19D9     		bls	.L46
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 847              		.loc 7 676 0
 848 0024 B5F1FF3F 		cmp	r5, #-1
 849 0028 05D0     		beq	.L45
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 850              		.loc 7 677 0
 851 002a FFF7FEFF 		bl	EE_oo_call_PostTaskHook
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 852              		.loc 7 679 0
 853 002e 0D4B     		ldr	r3, .L47+8
 854 0030 0222     		movs	r2, #2
 855 0032 43F82520 		str	r2, [r3, r5, lsl #2]
 856              	.L45:
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
 857              		.loc 7 685 0
 858 0036 0C4B     		ldr	r3, .L47+12
 859 0038 53F82420 		ldr	r2, [r3, r4, lsl #2]
 860 003c 084B     		ldr	r3, .L47+4
 861 003e 1B68     		ldr	r3, [r3]
 862 0040 1343     		orrs	r3, r3, r2
 863 0042 074A     		ldr	r2, .L47+4
 864 0044 1360     		str	r3, [r2]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 67


 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 865              		.loc 7 687 0
 866 0046 074B     		ldr	r3, .L47+8
 867 0048 0022     		movs	r2, #0
 868 004a 43F82420 		str	r2, [r3, r4, lsl #2]
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_ORTI_set_th_eq_dispatch_prio(rq);
 869              		.loc 7 688 0
 870 004e 2046     		mov	r0, r4
 871 0050 FFF7FEFF 		bl	EE_ORTI_set_th_eq_dispatch_prio
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* "Press TP start for the first time" for this new activation/release of
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****             the TASK */
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_as_tp_active_start_on_TASK_stacking(rq);
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Execute context SWITCH, this method return when we have a switch
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****            back on the previous TASK contest. */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_run_next_task();
 872              		.loc 7 696 0
 873 0054 FFF7FEFF 		bl	EE_oo_run_next_task
 874              	.L46:
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       }
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 875              		.loc 7 700 0
 876 0058 00BF     		nop
 877 005a B0BD     		pop	{r4, r5, r7, pc}
 878              	.L48:
 879              		.align	2
 880              	.L47:
 881 005c 00000000 		.word	EE_th_ready_prio
 882 0060 00000000 		.word	EE_sys_ceiling
 883 0064 00000000 		.word	EE_th_status
 884 0068 00000000 		.word	EE_th_dispatch_prio
 885              		.cfi_endproc
 886              	.LFE67:
 887              		.size	EE_oo_preemption_point, .-EE_oo_preemption_point
 888              		.section	.text.EE_oo_counter_object_insert,"ax",%progbits
 889              		.align	2
 890              		.global	EE_oo_counter_object_insert
 891              		.thumb
 892              		.thumb_func
 893              		.type	EE_oo_counter_object_insert, %function
 894              	EE_oo_counter_object_insert:
 895              	.LFB70:
 896              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_altick.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * version 2 as published by the Free Software Foundation, 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 68


  11:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * CVS: $Id: ee_altick.c,v 1.5 2006/06/08 20:40:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  58:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_BCC1__) || defined(__OO_BCC2__) || defined(__OO_ECC1__) || defined(__OO_ECC2__)) 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* If local alarm or schedule tables are not defined: cut everything */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if ( (defined(EE_MAX_ALARM)) && (EE_MAX_ALARM > 0U) ) 			\
  62:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   || ( (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0U) )
  63:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_KEEP_ALARM_QUEUE_CODE
  64:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* (EE_MAX_ALARM > 0) || (EE_MAX_SCHEDULETABLE > 0U) */
  65:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  66:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(RTDRUID_CONFIGURATOR_NUMBER))				\
  67:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****  && (RTDRUID_CONFIGURATOR_NUMBER >= RTDRUID_CONFNUM_NO_ORTI_VARS)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 69


  68:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* ORTI variables */
  70:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_ORTI_ALARMTIME__)) && (defined(EE_KEEP_ALARM_QUEUE_CODE))
  71:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static EE_TYPETICK EE_ORTI_alarmtime[EE_MAX_ALARM
  72:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
  73:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   + EE_MAX_SCHEDULETABLE
  74:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   ];
  76:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_ORTI_ALARMTIME__ && EE_KEEP_ALARM_QUEUE_CODE */
  77:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  78:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* RTDRUID_CONFIGURATOR_NUMBER */
  79:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
  81:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0)
  82:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_KEEP_ALARM_QUEUE_CODE
  83:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_SCHEDULETABLE > 0 */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
  85:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_KEEP_ALARM_QUEUE_CODE
  87:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Increment equal to 0 means next tick. Has been used this convention to
  88:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    utilize all values from zero to counter.maxallowedvalue range */
  89:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** void EE_oo_counter_object_insert( CounterObjectType ObjectID,
  90:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   TickType increment )
  91:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 897              		.loc 8 91 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 8
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 902 0000 B0B4     		push	{r4, r5, r7}
 903              		.cfi_def_cfa_offset 12
 904              		.cfi_offset 4, -12
 905              		.cfi_offset 5, -8
 906              		.cfi_offset 7, -4
 907 0002 83B0     		sub	sp, sp, #12
 908              		.cfi_def_cfa_offset 24
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 912 0008 3960     		str	r1, [r7]
  92:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterObjectType  current, previous;
  93:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterType        ctr = EE_oo_counter_object_ROM[ObjectID].c;
 913              		.loc 8 93 0
 914 000a 3749     		ldr	r1, .L55
 915 000c 7A68     		ldr	r2, [r7, #4]
 916 000e 1346     		mov	r3, r2
 917 0010 5B00     		lsls	r3, r3, #1
 918 0012 1344     		add	r3, r3, r2
 919 0014 9B00     		lsls	r3, r3, #2
 920 0016 0B44     		add	r3, r3, r1
 921 0018 1D68     		ldr	r5, [r3]
  94:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  95:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_ORTI_ALARMTIME__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_ORTI_alarmtime[ObjectID] = increment + 1U + EE_counter_RAM[ctr].value;
  97:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_ORTI_ALARMTIME__ */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   current = EE_counter_RAM[ctr].first;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 70


 922              		.loc 8 99 0
 923 001a 344A     		ldr	r2, .L55+4
 924 001c EB00     		lsls	r3, r5, #3
 925 001e 1344     		add	r3, r3, r2
 926 0020 5C68     		ldr	r4, [r3, #4]
 100:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 101:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( current == INVALID_COUNTER_OBJECT ) {
 927              		.loc 8 101 0
 928 0022 B4F1FF3F 		cmp	r4, #-1
 929 0026 05D1     		bne	.L50
 102:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm becomes the first into the delta queue, because the queue was
 103:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        empty */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_counter_RAM[ctr].first = ObjectID;
 930              		.loc 8 104 0
 931 0028 304A     		ldr	r2, .L55+4
 932 002a EB00     		lsls	r3, r5, #3
 933 002c 1344     		add	r3, r3, r2
 934 002e 7A68     		ldr	r2, [r7, #4]
 935 0030 5A60     		str	r2, [r3, #4]
 936 0032 47E0     		b	.L51
 937              	.L50:
 105:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else if ( EE_oo_counter_object_RAM[current].delta > increment ) {
 938              		.loc 8 105 0
 939 0034 2E4A     		ldr	r2, .L55+8
 940 0036 2301     		lsls	r3, r4, #4
 941 0038 1344     		add	r3, r3, r2
 942 003a 0833     		adds	r3, r3, #8
 943 003c 1A68     		ldr	r2, [r3]
 944 003e 3B68     		ldr	r3, [r7]
 945 0040 9A42     		cmp	r2, r3
 946 0042 11D9     		bls	.L52
 106:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm becomes the first into the delta queue, because increment is
 107:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        less than previous delta */
 108:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_counter_RAM[ctr].first = ObjectID;
 947              		.loc 8 108 0
 948 0044 294A     		ldr	r2, .L55+4
 949 0046 EB00     		lsls	r3, r5, #3
 950 0048 1344     		add	r3, r3, r2
 951 004a 7A68     		ldr	r2, [r7, #4]
 952 004c 5A60     		str	r2, [r3, #4]
 109:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_counter_object_RAM[current].delta -= increment;
 953              		.loc 8 109 0
 954 004e 284A     		ldr	r2, .L55+8
 955 0050 2301     		lsls	r3, r4, #4
 956 0052 1344     		add	r3, r3, r2
 957 0054 0833     		adds	r3, r3, #8
 958 0056 1A68     		ldr	r2, [r3]
 959 0058 3B68     		ldr	r3, [r7]
 960 005a D21A     		subs	r2, r2, r3
 961 005c 2449     		ldr	r1, .L55+8
 962 005e 2301     		lsls	r3, r4, #4
 963 0060 0B44     		add	r3, r3, r1
 964 0062 0833     		adds	r3, r3, #8
 965 0064 1A60     		str	r2, [r3]
 966 0066 2DE0     		b	.L51
 967              	.L52:
 110:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 71


 111:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* The alarm is not the first into the delta queue */
 112:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 113:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Follow the delta chain until I reach the right place */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     do {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       increment -= EE_oo_counter_object_RAM[current].delta;
 968              		.loc 8 115 0
 969 0068 214A     		ldr	r2, .L55+8
 970 006a 2301     		lsls	r3, r4, #4
 971 006c 1344     		add	r3, r3, r2
 972 006e 0833     		adds	r3, r3, #8
 973 0070 1B68     		ldr	r3, [r3]
 974 0072 3A68     		ldr	r2, [r7]
 975 0074 D31A     		subs	r3, r2, r3
 976 0076 3B60     		str	r3, [r7]
 116:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       previous = current;
 977              		.loc 8 116 0
 978 0078 2546     		mov	r5, r4
 117:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       current = EE_oo_counter_object_RAM[current].next;
 979              		.loc 8 117 0
 980 007a 1D4A     		ldr	r2, .L55+8
 981 007c 2301     		lsls	r3, r4, #4
 982 007e 1344     		add	r3, r3, r2
 983 0080 0C33     		adds	r3, r3, #12
 984 0082 1C68     		ldr	r4, [r3]
 118:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } while( (current != INVALID_COUNTER_OBJECT) &&
 119:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              (EE_oo_counter_object_RAM[current].delta <= increment) );
 985              		.loc 8 119 0
 986 0084 B4F1FF3F 		cmp	r4, #-1
 987 0088 07D0     		beq	.L53
 988              		.loc 8 119 0 is_stmt 0 discriminator 1
 989 008a 194A     		ldr	r2, .L55+8
 990 008c 2301     		lsls	r3, r4, #4
 991 008e 1344     		add	r3, r3, r2
 992 0090 0833     		adds	r3, r3, #8
 993 0092 1A68     		ldr	r2, [r3]
 118:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } while( (current != INVALID_COUNTER_OBJECT) &&
 994              		.loc 8 118 0 is_stmt 1 discriminator 1
 995 0094 3B68     		ldr	r3, [r7]
 996 0096 9A42     		cmp	r2, r3
 997 0098 E6D9     		bls	.L52
 998              	.L53:
 120:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 121:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Insert the alarm between previous and current */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( current != INVALID_COUNTER_OBJECT ) {
 999              		.loc 8 122 0
 1000 009a B4F1FF3F 		cmp	r4, #-1
 1001 009e 0BD0     		beq	.L54
 123:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_counter_object_RAM[current].delta -= increment;
 1002              		.loc 8 123 0
 1003 00a0 134A     		ldr	r2, .L55+8
 1004 00a2 2301     		lsls	r3, r4, #4
 1005 00a4 1344     		add	r3, r3, r2
 1006 00a6 0833     		adds	r3, r3, #8
 1007 00a8 1A68     		ldr	r2, [r3]
 1008 00aa 3B68     		ldr	r3, [r7]
 1009 00ac D21A     		subs	r2, r2, r3
 1010 00ae 1049     		ldr	r1, .L55+8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 72


 1011 00b0 2301     		lsls	r3, r4, #4
 1012 00b2 0B44     		add	r3, r3, r1
 1013 00b4 0833     		adds	r3, r3, #8
 1014 00b6 1A60     		str	r2, [r3]
 1015              	.L54:
 124:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 125:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_counter_object_RAM[previous].next = ObjectID;
 1016              		.loc 8 125 0
 1017 00b8 0D4A     		ldr	r2, .L55+8
 1018 00ba 2B01     		lsls	r3, r5, #4
 1019 00bc 1344     		add	r3, r3, r2
 1020 00be 0C33     		adds	r3, r3, #12
 1021 00c0 7A68     		ldr	r2, [r7, #4]
 1022 00c2 1A60     		str	r2, [r3]
 1023              	.L51:
 126:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 127:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 128:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_oo_counter_object_RAM[ObjectID].delta = increment;
 1024              		.loc 8 128 0
 1025 00c4 0A4A     		ldr	r2, .L55+8
 1026 00c6 7B68     		ldr	r3, [r7, #4]
 1027 00c8 1B01     		lsls	r3, r3, #4
 1028 00ca 1344     		add	r3, r3, r2
 1029 00cc 0833     		adds	r3, r3, #8
 1030 00ce 3A68     		ldr	r2, [r7]
 1031 00d0 1A60     		str	r2, [r3]
 129:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_oo_counter_object_RAM[ObjectID].next = current;
 1032              		.loc 8 129 0
 1033 00d2 074A     		ldr	r2, .L55+8
 1034 00d4 7B68     		ldr	r3, [r7, #4]
 1035 00d6 1B01     		lsls	r3, r3, #4
 1036 00d8 1344     		add	r3, r3, r2
 1037 00da 0C33     		adds	r3, r3, #12
 1038 00dc 1C60     		str	r4, [r3]
 130:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1039              		.loc 8 130 0
 1040 00de 00BF     		nop
 1041 00e0 0C37     		adds	r7, r7, #12
 1042              		.cfi_def_cfa_offset 12
 1043 00e2 BD46     		mov	sp, r7
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 00e4 B0BC     		pop	{r4, r5, r7}
 1047              		.cfi_restore 7
 1048              		.cfi_restore 5
 1049              		.cfi_restore 4
 1050              		.cfi_def_cfa_offset 0
 1051 00e6 7047     		bx	lr
 1052              	.L56:
 1053              		.align	2
 1054              	.L55:
 1055 00e8 00000000 		.word	EE_oo_counter_object_ROM
 1056 00ec 00000000 		.word	EE_counter_RAM
 1057 00f0 00000000 		.word	EE_oo_counter_object_RAM
 1058              		.cfi_endproc
 1059              	.LFE70:
 1060              		.size	EE_oo_counter_object_insert, .-EE_oo_counter_object_insert
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 73


 1061              		.section	.text.EE_oo_handle_action_task,"ax",%progbits
 1062              		.align	2
 1063              		.thumb
 1064              		.thumb_func
 1065              		.type	EE_oo_handle_action_task, %function
 1066              	EE_oo_handle_action_task:
 1067              	.LFB71:
 131:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_KEEP_ALARM_QUEUE_CODE */
 132:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 133:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* If counters are not defined cut everything */
 134:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 135:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_COUNTER)) && (EE_MAX_COUNTER > 0U)
 136:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 137:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_task(EE_oo_action_ROM_type const * const p_action);
 138:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 139:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_task(EE_oo_action_ROM_type const * const
 140:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   p_action)
 141:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 1068              		.loc 8 141 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 8
 1071              		@ frame_needed = 1, uses_anonymous_args = 0
 1072 0000 90B5     		push	{r4, r7, lr}
 1073              		.cfi_def_cfa_offset 12
 1074              		.cfi_offset 4, -12
 1075              		.cfi_offset 7, -8
 1076              		.cfi_offset 14, -4
 1077 0002 83B0     		sub	sp, sp, #12
 1078              		.cfi_def_cfa_offset 24
 1079 0004 00AF     		add	r7, sp, #0
 1080              		.cfi_def_cfa_register 7
 1081 0006 7860     		str	r0, [r7, #4]
 142:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 143:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType ev;
 144:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Activate the task; NOTE: no pre-emption at all...
 145:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    This code was directly copied from ActivateTask */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register TaskType TaskID = 0;
 1082              		.loc 8 146 0
 1083 0008 0024     		movs	r4, #0
 147:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 148:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 1084              		.loc 8 148 0
 1085 000a 7B68     		ldr	r3, [r7, #4]
 1086 000c 002B     		cmp	r3, #0
 1087 000e 01D0     		beq	.L58
 149:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     TaskID = p_action->action_task;
 1088              		.loc 8 149 0
 1089 0010 7B68     		ldr	r3, [r7, #4]
 1090 0012 5C68     		ldr	r4, [r3, #4]
 1091              	.L58:
 150:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 151:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 152:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_RPC__
 153:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 154:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_param unmarked_tid;
 155:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     unmarked_tid.value_param = (EE_UREG)EE_UNMARK_REMOTE_TID(TaskID);
 156:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU in synchronous way */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 74


 157:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = EE_as_rpc(OSServiceId_ActivateTask, unmarked_tid,
 158:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_OS_INVALID_PARAM, EE_OS_INVALID_PARAM);
 159:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 160:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #elif defined(__RN_TASK__)
 161:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 162:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_TYPERN_PARAM par;
 163:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     par.pending = 1U;
 164:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU whether the thread do
 165:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        not become to the current CPU */
 166:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (void)EE_rn_send(EE_UNMARK_REMOTE_TID(TaskID), EE_RN_TASK, par);
 167:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 168:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 169:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_TASK__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 171:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_EXTENDED_STATUS__
 172:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* check if the task Id is valid */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 1092              		.loc 8 173 0
 1093 0014 002C     		cmp	r4, #0
 1094 0016 01DB     		blt	.L59
 1095              		.loc 8 173 0 is_stmt 0 discriminator 1
 1096 0018 032C     		cmp	r4, #3
 1097 001a 01DD     		ble	.L60
 1098              	.L59:
 174:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ID;
 1099              		.loc 8 174 0 is_stmt 1
 1100 001c 0324     		movs	r4, #3
 1101 001e 0AE0     		b	.L61
 1102              	.L60:
 175:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* XXX: This means a configuration Error it should never happens! */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else
 177:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_EXTENDED_STATUS__ */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 179:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* check for pending activations */
 180:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( EE_th_rnact[TaskID] == 0U ) {
 1103              		.loc 8 180 0
 1104 0020 094B     		ldr	r3, .L65
 1105 0022 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1106 0026 002B     		cmp	r3, #0
 1107 0028 01D1     		bne	.L62
 181:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_LIMIT;
 1108              		.loc 8 181 0
 1109 002a 0424     		movs	r4, #4
 1110 002c 03E0     		b	.L61
 1111              	.L62:
 182:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00469]: The Operating System module shall start an
 184:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           OsTaskTimeFrame when a task is activated successfully.
 185:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (SRS_Os_11008) */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00466]: If an attempt is made to activate a task before the
 187:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           end of an OsTaskTimeFrame then the Operating System module shall not
 188:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           perform the activation AND shall call the ProtectionHook()
 189:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           with E_OS_PROTECTION_ARRIVAL. */
 190:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Check Interarrival Frame */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) ) {
 192:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* insert the task in the ready queue */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_task_in_ready_queue(TaskID);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 75


 1112              		.loc 8 193 0
 1113 002e 2046     		mov	r0, r4
 1114 0030 FFF7FEFF 		bl	EE_oo_task_in_ready_queue
 194:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 195:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OK;
 1115              		.loc 8 195 0
 1116 0034 0024     		movs	r4, #0
 1117              	.L61:
 196:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 197:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_RPC__)) || (defined(__RN_TASK__))
 198:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 199:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_TASK__ */
 200:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 1118              		.loc 8 201 0
 1119 0036 002C     		cmp	r4, #0
 1120 0038 02D0     		beq	.L64
 202:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_HAS_ERRORHOOK__
 203:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_task_id);
 204:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_action_type);
 205:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_task_id,(EE_UREG)TaskID);
 206:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_action_type,(EE_UREG)EE_ACTION_TASK);
 207:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_HAS_ERRORHOOK__ */
 208:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_notify_error(OSId_Action, os_task_id, EE_OS_INVALID_PARAM,
 1121              		.loc 8 208 0
 1122 003a 2046     		mov	r0, r4
 1123 003c FFF7FEFF 		bl	EE_os_notify_error_impl
 1124              	.L64:
 209:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       os_action_type, ev);
 210:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 211:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1125              		.loc 8 211 0
 1126 0040 00BF     		nop
 1127 0042 0C37     		adds	r7, r7, #12
 1128              		.cfi_def_cfa_offset 12
 1129 0044 BD46     		mov	sp, r7
 1130              		.cfi_def_cfa_register 13
 1131              		@ sp needed
 1132 0046 90BD     		pop	{r4, r7, pc}
 1133              	.L66:
 1134              		.align	2
 1135              	.L65:
 1136 0048 00000000 		.word	EE_th_rnact
 1137              		.cfi_endproc
 1138              	.LFE71:
 1139              		.size	EE_oo_handle_action_task, .-EE_oo_handle_action_task
 1140              		.section	.text.EE_oo_handle_action_event,"ax",%progbits
 1141              		.align	2
 1142              		.thumb
 1143              		.thumb_func
 1144              		.type	EE_oo_handle_action_event, %function
 1145              	EE_oo_handle_action_event:
 1146              	.LFB72:
 212:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 214:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_event(EE_oo_action_ROM_type const * const p_action);
 215:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 76


 216:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_event(EE_oo_action_ROM_type const * const
 217:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   p_action)
 218:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 1147              		.loc 8 218 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151 0000 B0B5     		push	{r4, r5, r7, lr}
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 4, -16
 1154              		.cfi_offset 5, -12
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 82B0     		sub	sp, sp, #8
 1158              		.cfi_def_cfa_offset 24
 1159 0004 00AF     		add	r7, sp, #0
 1160              		.cfi_def_cfa_register 7
 1161 0006 7860     		str	r0, [r7, #4]
 219:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType     ev;
 221:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Set an event for a task... NOTE: no pre-emption at all...
 222:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      This code was directly copied from SetEvent */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register TaskType       TaskID  = 0;
 1162              		.loc 8 223 0
 1163 0008 0024     		movs	r4, #0
 224:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register EventMaskType  Mask    = 0U;
 1164              		.loc 8 224 0
 1165 000a 0025     		movs	r5, #0
 225:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 226:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 1166              		.loc 8 226 0
 1167 000c 7B68     		ldr	r3, [r7, #4]
 1168 000e 002B     		cmp	r3, #0
 1169 0010 03D0     		beq	.L68
 227:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     TaskID = p_action->action_task;
 1170              		.loc 8 227 0
 1171 0012 7B68     		ldr	r3, [r7, #4]
 1172 0014 5C68     		ldr	r4, [r3, #4]
 228:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     Mask = p_action->action_mask;
 1173              		.loc 8 228 0
 1174 0016 7B68     		ldr	r3, [r7, #4]
 1175 0018 9D68     		ldr	r5, [r3, #8]
 1176              	.L68:
 229:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 230:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 231:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_RPC__
 232:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 233:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_param unmarked_tid, as_mask;
 234:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     unmarked_tid.value_param = EE_UNMARK_REMOTE_TID(TaskID);
 236:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     as_mask.value_param      = Mask;
 237:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 238:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU in synchronous way */
 239:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = EE_as_rpc(OSServiceId_SetEvent, unmarked_tid,
 240:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       as_mask, EE_OS_INVALID_PARAM);
 241:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 242:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #elif defined( __RN_EVENT__ )
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 77


 243:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_IS_TID_REMOTE(TaskID) ) {
 244:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_TYPERN_PARAM par;
 245:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     par.ev = Mask;
 246:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* forward the request to another CPU whether the thread do
 247:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        not become to the current CPU */
 248:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (void)EE_rn_send((EE_SREG)EE_UNMARK_REMOTE_TID(TaskID), EE_RN_EVENT, par);
 249:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 250:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else {
 251:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_EVENT__ */
 252:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_EXTENDED_STATUS__    
 254:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* check if the task Id is valid */
 255:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 1177              		.loc 8 255 0
 1178 001a 002C     		cmp	r4, #0
 1179 001c 01DB     		blt	.L69
 1180              		.loc 8 255 0 is_stmt 0 discriminator 1
 1181 001e 032C     		cmp	r4, #3
 1182 0020 01DD     		ble	.L70
 1183              	.L69:
 256:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ID;
 1184              		.loc 8 256 0 is_stmt 1
 1185 0022 0324     		movs	r4, #3
 1186 0024 27E0     		b	.L71
 1187              	.L70:
 257:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else if ( EE_th_is_extended[TaskID] == EE_FALSE ) {
 1188              		.loc 8 257 0
 1189 0026 184B     		ldr	r3, .L77
 1190 0028 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1191 002c 002B     		cmp	r3, #0
 1192 002e 01D1     		bne	.L72
 258:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_ACCESS;
 1193              		.loc 8 258 0
 1194 0030 0124     		movs	r4, #1
 1195 0032 20E0     		b	.L71
 1196              	.L72:
 259:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else
 260:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* XXX: These means a configuration Error: it should never happens! */
 261:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_EXTENDED_STATUS__ */
 262:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 263:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( EE_th_status[TaskID] == SUSPENDED ) {
 1197              		.loc 8 263 0
 1198 0034 154B     		ldr	r3, .L77+4
 1199 0036 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1200 003a 032B     		cmp	r3, #3
 1201 003c 01D1     		bne	.L73
 264:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OS_STATE;
 1202              		.loc 8 264 0
 1203 003e 0724     		movs	r4, #7
 1204 0040 19E0     		b	.L71
 1205              	.L73:
 265:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 266:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00472] The Operating System module shall start an
 267:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           OsTaskTimeFrame when a task is released successfully.
 268:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (SRS_Os_11008) */
 269:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* [SWS_Os_00467] If an attempt is made to release a task before the end
 270:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           of an OsTaskTimeFrame then the Operating System module shall not
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 78


 271:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           perform the release AND shall call the ProtectionHook() with
 272:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           E_OS_PROTECTION_ARRIVAL AND the EVENT SHALL BE SET. */
 273:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Set the event mask only if the task is not suspended */
 274:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_th_event_active[TaskID] |= Mask;
 1206              		.loc 8 274 0
 1207 0042 134B     		ldr	r3, .L77+8
 1208 0044 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1209 0048 2B43     		orrs	r3, r3, r5
 1210 004a 114A     		ldr	r2, .L77+8
 1211 004c 42F82430 		str	r3, [r2, r4, lsl #2]
 275:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Check Interarrival Frame */
 276:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) )
 277:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Check if the task was waiting for an event we just set
 279:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          *
 280:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * WARNING:
 281:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * the test with status==WAITING is FUNDAMENTAL to avoid double
 282:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * insertion of the task in the ready queue!!! Example, when I call
 283:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * two times the same setevent... the first time the task must go in
 284:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * the ready queue, the second time NOT!!!
 285:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          */
 286:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( ((EE_th_event_waitmask[TaskID] & Mask) != 0U) &&
 1212              		.loc 8 286 0
 1213 0050 104B     		ldr	r3, .L77+12
 1214 0052 53F82430 		ldr	r3, [r3, r4, lsl #2]
 1215 0056 2B40     		ands	r3, r3, r5
 1216 0058 002B     		cmp	r3, #0
 1217 005a 0BD0     		beq	.L74
 287:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_th_status[TaskID] == WAITING) )
 1218              		.loc 8 287 0 discriminator 1
 1219 005c 0B4B     		ldr	r3, .L77+4
 1220 005e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 286:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_th_status[TaskID] == WAITING) )
 1221              		.loc 8 286 0 discriminator 1
 1222 0062 012B     		cmp	r3, #1
 1223 0064 06D1     		bne	.L74
 288:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 289:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* if yes, the task must go back into the READY state */
 290:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_th_status[TaskID] = READY;
 1224              		.loc 8 290 0
 1225 0066 094B     		ldr	r3, .L77+4
 1226 0068 0222     		movs	r2, #2
 1227 006a 43F82420 		str	r2, [r3, r4, lsl #2]
 291:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* insert the task in the ready queue */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_rq_insert(TaskID);
 1228              		.loc 8 292 0
 1229 006e 2046     		mov	r0, r4
 1230 0070 FFF7FEFF 		bl	EE_rq_insert
 1231              	.L74:
 293:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 294:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 295:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ev = E_OK;
 1232              		.loc 8 296 0
 1233 0074 0024     		movs	r4, #0
 1234              	.L71:
 297:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 79


 298:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_RPC__)) || (defined(__RN_TASK__))
 299:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 300:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ || __RN_TASK__ */
 301:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 302:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 1235              		.loc 8 302 0
 1236 0076 002C     		cmp	r4, #0
 1237 0078 02D0     		beq	.L76
 303:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef __OO_HAS_ERRORHOOK__
 304:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_task_id);
 305:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_mask);
 306:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM(os_action_type);
 307:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_task_id,(EE_UREG)TaskID);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_mask,Mask);
 309:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_OS_PARAM_VALUE(os_action_type,(EE_UREG)EE_ACTION_EVENT);
 310:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_HAS_ERRORHOOK__ */
 311:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_os_notify_error(OSId_Action, os_task_id, os_mask,
 1238              		.loc 8 311 0
 1239 007a 2046     		mov	r0, r4
 1240 007c FFF7FEFF 		bl	EE_os_notify_error_impl
 1241              	.L76:
 312:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       os_action_type, ev);
 313:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 314:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1242              		.loc 8 314 0
 1243 0080 00BF     		nop
 1244 0082 0837     		adds	r7, r7, #8
 1245              		.cfi_def_cfa_offset 16
 1246 0084 BD46     		mov	sp, r7
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 0086 B0BD     		pop	{r4, r5, r7, pc}
 1250              	.L78:
 1251              		.align	2
 1252              	.L77:
 1253 0088 00000000 		.word	EE_th_is_extended
 1254 008c 00000000 		.word	EE_th_status
 1255 0090 00000000 		.word	EE_th_event_active
 1256 0094 00000000 		.word	EE_th_event_waitmask
 1257              		.cfi_endproc
 1258              	.LFE72:
 1259              		.size	EE_oo_handle_action_event, .-EE_oo_handle_action_event
 1260              		.section	.text.EE_oo_handle_action_callback,"ax",%progbits
 1261              		.align	2
 1262              		.thumb
 1263              		.thumb_func
 1264              		.type	EE_oo_handle_action_callback, %function
 1265              	EE_oo_handle_action_callback:
 1266              	.LFB73:
 315:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 317:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_callback ( const EE_oo_action_ROM_type *
 318:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 					   const p_action );
 319:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 320:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 321:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_callback ( const EE_oo_action_ROM_type *
 322:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   const p_action )
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 80


 323:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 324:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Handle Alarm callback execution context */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_TYPECONTEXT prev_context = EE_as_execution_context;
 326:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 327:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_as_execution_context = AlarmCallback_Context;
 328:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   (p_action->f)();
 329:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_as_execution_context = prev_context;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 331:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #else /* EE_AS_OSAPPLICATIONS__ && EE_SERVICE_PROTECTION__ */
 332:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action_callback ( const EE_oo_action_ROM_type *
 333:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   const p_action ) {
 1267              		.loc 8 333 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 8
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271 0000 80B5     		push	{r7, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 7, -8
 1274              		.cfi_offset 14, -4
 1275 0002 82B0     		sub	sp, sp, #8
 1276              		.cfi_def_cfa_offset 16
 1277 0004 00AF     		add	r7, sp, #0
 1278              		.cfi_def_cfa_register 7
 1279 0006 7860     		str	r0, [r7, #4]
 334:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 1280              		.loc 8 334 0
 1281 0008 7B68     		ldr	r3, [r7, #4]
 1282 000a 002B     		cmp	r3, #0
 1283 000c 02D0     		beq	.L81
 335:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (p_action->f)();
 1284              		.loc 8 335 0
 1285 000e 7B68     		ldr	r3, [r7, #4]
 1286 0010 DB68     		ldr	r3, [r3, #12]
 1287 0012 9847     		blx	r3
 1288              	.L81:
 336:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 337:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1289              		.loc 8 337 0
 1290 0014 00BF     		nop
 1291 0016 0837     		adds	r7, r7, #8
 1292              		.cfi_def_cfa_offset 8
 1293 0018 BD46     		mov	sp, r7
 1294              		.cfi_def_cfa_register 13
 1295              		@ sp needed
 1296 001a 80BD     		pop	{r7, pc}
 1297              		.cfi_endproc
 1298              	.LFE73:
 1299              		.size	EE_oo_handle_action_callback, .-EE_oo_handle_action_callback
 1300              		.section	.text.EE_oo_handle_action,"ax",%progbits
 1301              		.align	2
 1302              		.thumb
 1303              		.thumb_func
 1304              		.type	EE_oo_handle_action, %function
 1305              	EE_oo_handle_action:
 1306              	.LFB74:
 338:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_OSAPPLICATIONS__ && EE_SERVICE_PROTECTION__ */
 339:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 81


 340:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action(EE_oo_action_ROM_type const * const p_action);
 341:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 342:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void EE_oo_handle_action(EE_oo_action_ROM_type const * const p_action)
 343:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 1307              		.loc 8 343 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 8
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311 0000 80B5     		push	{r7, lr}
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 82B0     		sub	sp, sp, #8
 1316              		.cfi_def_cfa_offset 16
 1317 0004 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
 1319 0006 7860     		str	r0, [r7, #4]
 344:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( p_action != NULL ) {
 1320              		.loc 8 344 0
 1321 0008 7B68     		ldr	r3, [r7, #4]
 1322 000a 002B     		cmp	r3, #0
 1323 000c 1BD0     		beq	.L90
 345:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     
 346:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     switch ( p_action->action_kind ) {
 1324              		.loc 8 346 0
 1325 000e 7B68     		ldr	r3, [r7, #4]
 1326 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 0012 032B     		cmp	r3, #3
 1328 0014 16D8     		bhi	.L91
 1329 0016 01A2     		adr	r2, .L86
 1330 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1331              		.p2align 2
 1332              	.L86:
 1333 001c 2D000000 		.word	.L85+1
 1334 0020 35000000 		.word	.L87+1
 1335 0024 45000000 		.word	.L91+1
 1336 0028 3D000000 		.word	.L89+1
 1337              		.p2align 1
 1338              	.L85:
 347:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 348:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case  EE_ACTION_TASK:
 349:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* activate the task */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         
 351:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action_task(p_action);
 1339              		.loc 8 351 0
 1340 002c 7868     		ldr	r0, [r7, #4]
 1341 002e FFF7FEFF 		bl	EE_oo_handle_action_task
 352:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 1342              		.loc 8 352 0
 1343 0032 08E0     		b	.L83
 1344              	.L87:
 353:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 354:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 355:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case EE_ACTION_EVENT:
 356:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* set an event for a task */
 357:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action_event(p_action);
 1345              		.loc 8 357 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 82


 1346 0034 7868     		ldr	r0, [r7, #4]
 1347 0036 FFF7FEFF 		bl	EE_oo_handle_action_event
 358:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 1348              		.loc 8 358 0
 1349 003a 04E0     		b	.L83
 1350              	.L89:
 359:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case  EE_ACTION_CALLBACK:
 362:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action_callback(p_action);
 1351              		.loc 8 362 0
 1352 003c 7868     		ldr	r0, [r7, #4]
 1353 003e FFF7FEFF 		bl	EE_oo_handle_action_callback
 363:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 1354              		.loc 8 363 0
 1355 0042 00E0     		b	.L83
 1356              	.L91:
 364:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       case EE_ACTION_COUNTER:
 366:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /*
 367:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * This "case" statement is not fully supported.
 368:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * It has been temporary commented to prevent from MISRA
 369:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * error dealing with recursive functions. If
 370:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * it will be fully supported and recursive call is
 371:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          * unavoidable, thus consider a MISRA deviation.
 372:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          */
 373:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Recursive Call
 374:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            TODO: HANDLE CYCLIC COUNTERS !!! */
 375:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if 0
 376:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_IncrementCounterImplementation(p_action->inccount);
 377:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 378:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 379:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       default:
 381:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Invalid action: this should never happen, as `action' is
 382:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            initialized by RT-Druid */
 383:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         break;
 1357              		.loc 8 383 0
 1358 0044 00BF     		nop
 1359              	.L83:
 1360              	.L90:
 384:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 385:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 386:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1361              		.loc 8 386 0
 1362 0046 00BF     		nop
 1363 0048 0837     		adds	r7, r7, #8
 1364              		.cfi_def_cfa_offset 8
 1365 004a BD46     		mov	sp, r7
 1366              		.cfi_def_cfa_register 13
 1367              		@ sp needed
 1368 004c 80BD     		pop	{r7, pc}
 1369              		.cfi_endproc
 1370              	.LFE74:
 1371              		.size	EE_oo_handle_action, .-EE_oo_handle_action
 1372 004e 00BF     		.section	.text.EE_oo_IncrementCounterImplementation,"ax",%progbits
 1373              		.align	2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 83


 1374              		.global	EE_oo_IncrementCounterImplementation
 1375              		.thumb
 1376              		.thumb_func
 1377              		.type	EE_oo_IncrementCounterImplementation, %function
 1378              	EE_oo_IncrementCounterImplementation:
 1379              	.LFB75:
 387:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** static void  EE_as_handle_schedule_table( ScheduleTableType STId )
 391:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 392:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   do {
 393:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Index to traverse expiry point actions */
 394:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_UREG                              i;
 395:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register TickType                             nextOffset;
 396:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Expiry point description */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_as_Expiry_Point_ROM_type const    *p_expiry_point;
 398:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Get Schedule Table Configuration Structures */
 399:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_as_Schedule_Table_ROM_type const  *p_schedule_table_ROM =
 400:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       &EE_as_Schedule_Table_ROM[STId];
 401:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register EE_as_Schedule_Table_RAM_type        *p_schedule_table_RAM =
 402:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       &EE_as_Schedule_Table_RAM[STId];
 403:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Expiry point position */
 404:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     register ExpiryPointType expiry_position = p_schedule_table_RAM->position;
 405:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 406:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* This can happen:
 407:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         - When a next schedule table is activated to stop the original
 408:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           schedule table after the final delay
 409:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         - When the original schedule table is repeating */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( expiry_position == INVALID_SCHEDULETABLE_POSITION ) {
 411:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Get the next Schedule Table */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       ScheduleTableType const nextSTId = p_schedule_table_RAM->next_table;
 413:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( nextSTId != INVALID_SCHEDULETABLE ) {
 415:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->status = SCHEDULETABLE_STOPPED;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* This is needed to stop the underlying alarm tied to the schedule
 417:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             table, otherwise the alarm handling cycle will be reschedule
 418:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             this alarm */
 419:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle = 0;
 420:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->next_table = INVALID_SCHEDULETABLE;
 421:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 422:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* nextSTId handling */
 423:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_ROM = &EE_as_Schedule_Table_ROM[nextSTId];
 424:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM = &EE_as_Schedule_Table_RAM[nextSTId];
 425:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 426:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->status      = SCHEDULETABLE_RUNNING;
 427:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 428:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         expiry_position = p_schedule_table_ROM->expiry_point_first;
 429:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 430:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->position    = expiry_position;
 431:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->next_table  = INVALID_SCHEDULETABLE;
 432:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 433:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         nextOffset      = EE_as_Expiry_Point_ROM[expiry_position].offset;
 434:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 435:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Handle special case of some expiry points with offset equal to
 436:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            zero */
 437:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( nextOffset > 0U ) {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 84


 438:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 439:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         } else {
 441:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Continue The Loop with the next Schedule Table expiry points:
 442:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              before them, evaluate next alarm event offset to enable
 443:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              underlying schedule table alarm (counter object). */
 444:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           do {
 445:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             ++expiry_position;
 446:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             nextOffset = EE_as_Expiry_Point_ROM[expiry_position].offset;
 447:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           } while ( (nextOffset == 0U) &&
 448:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             (expiry_position < p_schedule_table_ROM->expiry_point_last) );
 449:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           if ( nextOffset == 0U ) {
 450:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             nextOffset = p_schedule_table_ROM->duration;
 451:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           }
 452:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = nextSTId;
 453:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 454:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Schedule the alarm tied to the next Schedule Table */
 455:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_rel_counter_object_insertion(EE_MAX_ALARM + nextSTId,
 456:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           nextOffset, 0U);
 457:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } else {
 458:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Reapiting schedule table */
 459:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         expiry_position = p_schedule_table_ROM->expiry_point_first;
 460:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->position = expiry_position;
 461:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         nextOffset      = EE_as_Expiry_Point_ROM[expiry_position].offset;
 462:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( nextOffset > 0U ) {
 464:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* This is an Hack to let alarm handling cycle reschedule the schedule
 465:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              table alarm with the right offset (increment) */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle = nextOffset;
 467:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 468:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 469:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 470:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 472:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Get the Expiry point */
 473:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       p_expiry_point =  &EE_as_Expiry_Point_ROM[expiry_position];
 474:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       for ( i = p_expiry_point->actions_first;
 475:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             i <= p_expiry_point->actions_last; ++i )
 476:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Execute the action */
 478:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_handle_action( &EE_oo_action_ROM[i] );
 479:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 481:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Handle next expiry point insertion in alarm queue */
 482:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* if it is the last expiry point and if this is not a repeating
 483:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****          schedule table, handle next schedule table or stop it */
 484:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( expiry_position == p_schedule_table_ROM->expiry_point_last )
 485:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       {
 486:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* We reached the end of schedule table so we stop it */
 487:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( (p_schedule_table_RAM->next_table == INVALID_SCHEDULETABLE) &&
 488:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****            (p_schedule_table_ROM->repeated == 0) )
 489:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 490:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* [SWS_Os_00009] If the schedule table is single-shot, the Operating
 491:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              System module shall stop the processing of the schedule table
 492:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              Final Delay ticks after the Final Expiry Point is processed. */
 493:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           p_schedule_table_RAM->status     = SCHEDULETABLE_STOPPED;
 494:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /*  This is needed to stop the underlying alarm tied to the schedule
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 85


 495:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               table, otherwise the alarm handling cycle will be reschedule this
 496:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               alarm */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle = 0;
 498:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 499:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 500:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         } else {
 501:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Schedule the final delay for original schedule table */
 502:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           p_schedule_table_RAM->position = INVALID_SCHEDULETABLE_POSITION;
 503:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* [OS427] If the schedule table is single-shot, the Operating System
 504:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               module shall allow a Final Delay between
 505:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               0 .. OsCounterMaxAllowedValue of the underlying counter. */
 506:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* This is an Hack to let alarm handling cycle reschedule the schedule
 507:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               table alarm with the right offset (increment) */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* XXX: The final delay it's any value between
 509:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               0 .. OsCounterMaxAllowedValue. This means that I could have a
 510:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_oo_counter_object_RAM.cycle variable wrap around if I would
 511:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               sum an Initial Expiry Point Initial Offset directly here,
 512:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               instead I will handle this case as I have done for the
 513:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               'next table' */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           if ( p_schedule_table_ROM->duration > p_expiry_point->offset ) {
 515:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle =
 516:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               p_schedule_table_ROM->duration - p_expiry_point->offset;
 517:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             /* Exit From The Loop */
 518:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             STId = INVALID_SCHEDULETABLE;
 519:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           }
 520:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 521:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } else {
 522:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( p_schedule_table_ROM->sync_strategy != EE_SCHEDTABLE_SYNC_NONE ) {
 523:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* *** TODO: HANDLE SYNCRONIZATION *** */
 524:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 525:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Schedule the next expiry point */
 526:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         ++expiry_position;
 527:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         p_schedule_table_RAM->position = expiry_position;
 528:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         nextOffset = EE_as_Expiry_Point_ROM[expiry_position].offset;
 529:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if ( nextOffset > p_expiry_point->offset ) {
 530:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* This is an Hack to let alarm handling cycle reschedule the schedule
 531:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              table alarm with the right offset (increment) */
 532:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[EE_MAX_ALARM + STId].cntcycle =
 533:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             nextOffset - p_expiry_point->offset;
 534:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Exit From The Loop */
 535:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           STId = INVALID_SCHEDULETABLE;
 536:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 537:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 538:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 539:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } while ( STId != INVALID_SCHEDULETABLE );
 540:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 541:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_SCHEDULETABLE > 0 */
 542:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
 543:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 544:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** void EE_oo_IncrementCounterImplementation(CounterType CounterID)
 545:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 1380              		.loc 8 545 0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 8
 1383              		@ frame_needed = 1, uses_anonymous_args = 0
 1384 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1385              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 86


 1386              		.cfi_offset 4, -20
 1387              		.cfi_offset 5, -16
 1388              		.cfi_offset 6, -12
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 83B0     		sub	sp, sp, #12
 1392              		.cfi_def_cfa_offset 32
 1393 0004 00AF     		add	r7, sp, #0
 1394              		.cfi_def_cfa_register 7
 1395 0006 7860     		str	r0, [r7, #4]
 546:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* to_fire: Is the head of the splitted queue that have to be served at this
 547:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               counter tick. */
 548:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register CounterObjectType to_fire = EE_counter_RAM[CounterID].first;
 1396              		.loc 8 548 0
 1397 0008 524A     		ldr	r2, .L105
 1398 000a 7B68     		ldr	r3, [r7, #4]
 1399 000c DB00     		lsls	r3, r3, #3
 1400 000e 1344     		add	r3, r3, r2
 1401 0010 5C68     		ldr	r4, [r3, #4]
 549:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Increment the counter value or reset it when overcome maxallowedvalue.
 551:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      I need this behaviour for AS services GetCounterValue and GetElapsedValue
 552:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_counter_RAM[CounterID].value += 1U;
 1402              		.loc 8 553 0
 1403 0012 504A     		ldr	r2, .L105
 1404 0014 7B68     		ldr	r3, [r7, #4]
 1405 0016 52F83330 		ldr	r3, [r2, r3, lsl #3]
 1406 001a 5A1C     		adds	r2, r3, #1
 1407 001c 4D49     		ldr	r1, .L105
 1408 001e 7B68     		ldr	r3, [r7, #4]
 1409 0020 41F83320 		str	r2, [r1, r3, lsl #3]
 554:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if (EE_counter_RAM[CounterID].value >
 1410              		.loc 8 554 0
 1411 0024 4B4A     		ldr	r2, .L105
 1412 0026 7B68     		ldr	r3, [r7, #4]
 1413 0028 52F83310 		ldr	r1, [r2, r3, lsl #3]
 555:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_counter_ROM[CounterID].maxallowedvalue)
 1414              		.loc 8 555 0
 1415 002c 4A48     		ldr	r0, .L105+4
 1416 002e 7A68     		ldr	r2, [r7, #4]
 1417 0030 1346     		mov	r3, r2
 1418 0032 5B00     		lsls	r3, r3, #1
 1419 0034 1344     		add	r3, r3, r2
 1420 0036 9B00     		lsls	r3, r3, #2
 1421 0038 0344     		add	r3, r3, r0
 1422 003a 1B68     		ldr	r3, [r3]
 554:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if (EE_counter_RAM[CounterID].value >
 1423              		.loc 8 554 0
 1424 003c 9942     		cmp	r1, r3
 1425 003e 04D9     		bls	.L93
 556:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 557:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_counter_RAM[CounterID].value = 0U;
 1426              		.loc 8 557 0
 1427 0040 444A     		ldr	r2, .L105
 1428 0042 7B68     		ldr	r3, [r7, #4]
 1429 0044 0021     		movs	r1, #0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 87


 1430 0046 42F83310 		str	r1, [r2, r3, lsl #3]
 1431              	.L93:
 558:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 559:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 560:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* I split Alarm queue in two: The queue that SHALL be handled at this tick
 561:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      and the remainder.
 562:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****      current & previous are double indexes used to split the alarm queue.
 563:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****    */
 564:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* If the alarm queue is empty I have to do nothing */
 565:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( to_fire != INVALID_COUNTER_OBJECT ) {
 1432              		.loc 8 565 0
 1433 004a B4F1FF3F 		cmp	r4, #-1
 1434 004e 7DD0     		beq	.L104
 566:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* If the head of alarm queue has not delta equal to zero I have only
 567:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        to decrement the first alarm delta    */
 568:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if (EE_oo_counter_object_RAM[to_fire].delta == 0U) {
 1435              		.loc 8 568 0
 1436 0050 424A     		ldr	r2, .L105+8
 1437 0052 2301     		lsls	r3, r4, #4
 1438 0054 1344     		add	r3, r3, r2
 1439 0056 0833     		adds	r3, r3, #8
 1440 0058 1B68     		ldr	r3, [r3]
 1441 005a 002B     		cmp	r3, #0
 1442 005c 6BD1     		bne	.L95
 1443              	.LBB2:
 569:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* current point to the first alarm at the beginning */
 570:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       register CounterObjectType current = to_fire;
 1444              		.loc 8 570 0
 1445 005e 2546     		mov	r5, r4
 1446              	.L97:
 571:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* previous: Is a temporary copy of the index used as utility */
 572:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       register CounterObjectType previous;
 573:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 574:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       do {
 575:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Now I will use previous to hold the previous checked alarm */
 576:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         previous = current;
 1447              		.loc 8 576 0
 1448 0060 2E46     		mov	r6, r5
 577:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         current = EE_oo_counter_object_RAM[current].next;
 1449              		.loc 8 577 0
 1450 0062 3E4A     		ldr	r2, .L105+8
 1451 0064 2B01     		lsls	r3, r5, #4
 1452 0066 1344     		add	r3, r3, r2
 1453 0068 0C33     		adds	r3, r3, #12
 1454 006a 1D68     		ldr	r5, [r3]
 578:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } while ( (current != INVALID_COUNTER_OBJECT) &&
 579:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           (EE_oo_counter_object_RAM[current].delta == 0U) );
 1455              		.loc 8 579 0
 1456 006c B5F1FF3F 		cmp	r5, #-1
 1457 0070 06D0     		beq	.L96
 1458              		.loc 8 579 0 is_stmt 0 discriminator 1
 1459 0072 3A4A     		ldr	r2, .L105+8
 1460 0074 2B01     		lsls	r3, r5, #4
 1461 0076 1344     		add	r3, r3, r2
 1462 0078 0833     		adds	r3, r3, #8
 1463 007a 1B68     		ldr	r3, [r3]
 578:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } while ( (current != INVALID_COUNTER_OBJECT) &&
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 88


 1464              		.loc 8 578 0 is_stmt 1 discriminator 1
 1465 007c 002B     		cmp	r3, #0
 1466 007e EFD0     		beq	.L97
 1467              	.L96:
 580:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 581:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* I set the end of handled queue */
 582:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_counter_object_RAM[previous].next = INVALID_COUNTER_OBJECT;
 1468              		.loc 8 582 0
 1469 0080 364A     		ldr	r2, .L105+8
 1470 0082 3301     		lsls	r3, r6, #4
 1471 0084 1344     		add	r3, r3, r2
 1472 0086 0C33     		adds	r3, r3, #12
 1473 0088 4FF0FF32 		mov	r2, #-1
 1474 008c 1A60     		str	r2, [r3]
 583:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 584:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* I set the head of the alarm queue to the current value (maybe -1) */
 585:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_counter_RAM[CounterID].first = current;
 1475              		.loc 8 585 0
 1476 008e 314A     		ldr	r2, .L105
 1477 0090 7B68     		ldr	r3, [r7, #4]
 1478 0092 DB00     		lsls	r3, r3, #3
 1479 0094 1344     		add	r3, r3, r2
 1480 0096 5D60     		str	r5, [r3, #4]
 586:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* If not empty I decrement the first alarm delta in queue */
 588:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       if ( current != INVALID_COUNTER_OBJECT ) {
 1481              		.loc 8 588 0
 1482 0098 B5F1FF3F 		cmp	r5, #-1
 1483 009c 0AD0     		beq	.L98
 589:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         --EE_oo_counter_object_RAM[current].delta;
 1484              		.loc 8 589 0
 1485 009e 2F4A     		ldr	r2, .L105+8
 1486 00a0 2B01     		lsls	r3, r5, #4
 1487 00a2 1344     		add	r3, r3, r2
 1488 00a4 0833     		adds	r3, r3, #8
 1489 00a6 1B68     		ldr	r3, [r3]
 1490 00a8 5A1E     		subs	r2, r3, #1
 1491 00aa 2C49     		ldr	r1, .L105+8
 1492 00ac 2B01     		lsls	r3, r5, #4
 1493 00ae 0B44     		add	r3, r3, r1
 1494 00b0 0833     		adds	r3, r3, #8
 1495 00b2 1A60     		str	r2, [r3]
 1496              	.L98:
 590:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       }
 591:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 592:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* Handle the alarm queue active at this tick */
 593:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       do {
 594:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Select which handler call */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         switch ( EE_oo_counter_object_ROM[to_fire].kind ) {
 1497              		.loc 8 595 0
 1498 00b4 2A4A     		ldr	r2, .L105+12
 1499 00b6 2346     		mov	r3, r4
 1500 00b8 5B00     		lsls	r3, r3, #1
 1501 00ba 2344     		add	r3, r3, r4
 1502 00bc 9B00     		lsls	r3, r3, #2
 1503 00be 1344     		add	r3, r3, r2
 1504 00c0 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 89


 1505 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1506 00c4 002B     		cmp	r3, #0
 1507 00c6 00D0     		beq	.L100
 596:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_ALARM)) && (EE_MAX_ALARM > 0U)
 597:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           case EE_ALARM:
 598:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     
 599:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 600:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     {
 601:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         unsigned int alarmID;
 602:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         alarmID = EE_oo_counter_object_ROM[to_fire].spec_id;
 603:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         EE_oo_action_ROM_type *p_traceAction = &EE_oo_action_ROM[EE_alarm_ROM[
 604:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****                   EE_oo_counter_object_ROM[to_fire].spec_id].action_id];
 605:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if(EE_ACTION_TASK == p_traceAction->action_kind)
 606:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 607:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             traceALARM_ACTION_ACTIVATE_TASK(alarmID, p_traceAction->action_task);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if(EE_ACTION_CALLBACK == p_traceAction->action_kind)
 610:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         {
 611:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             //traceALARM_ACTION_CALLBACK(alarmID);
 612:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 613:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 614:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 615:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 616:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             EE_oo_handle_action(&EE_oo_action_ROM[EE_alarm_ROM[
 617:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_oo_counter_object_ROM[to_fire].spec_id].action_id]);
 618:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               break;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_ALARM > 0 */
 620:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_SCHEDULETABLES__
 621:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_MAX_SCHEDULETABLE)) && (EE_MAX_SCHEDULETABLE > 0)
 622:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           case EE_SCHEDULETABLE:
 623:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_as_handle_schedule_table(EE_oo_counter_object_ROM[to_fire].
 624:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****                 spec_id);
 625:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               break;
 626:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_SCHEDULETABLE > 0 */
 627:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_SCHEDULETABLES__ */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           default:
 629:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             /* Invalid counter object kind: this should never happen, as
 630:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****                `counter object` is initialized by RT-Druid */
 631:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****              break;
 1508              		.loc 8 631 0
 1509 00c8 14E0     		b	.L101
 1510              	.L100:
 617:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               break;
 1511              		.loc 8 617 0
 1512 00ca 254A     		ldr	r2, .L105+12
 1513 00cc 2346     		mov	r3, r4
 1514 00ce 5B00     		lsls	r3, r3, #1
 1515 00d0 2344     		add	r3, r3, r4
 1516 00d2 9B00     		lsls	r3, r3, #2
 1517 00d4 1344     		add	r3, r3, r2
 1518 00d6 0433     		adds	r3, r3, #4
 1519 00d8 1B68     		ldr	r3, [r3]
 1520 00da 224A     		ldr	r2, .L105+16
 1521 00dc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 616:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****               EE_oo_counter_object_ROM[to_fire].spec_id].action_id]);
 1522              		.loc 8 616 0
 1523 00e0 1346     		mov	r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 90


 1524 00e2 9B00     		lsls	r3, r3, #2
 1525 00e4 1344     		add	r3, r3, r2
 1526 00e6 9B00     		lsls	r3, r3, #2
 1527 00e8 1F4A     		ldr	r2, .L105+20
 1528 00ea 1344     		add	r3, r3, r2
 1529 00ec 1846     		mov	r0, r3
 1530 00ee FFF7FEFF 		bl	EE_oo_handle_action
 618:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_ALARM > 0 */
 1531              		.loc 8 618 0
 1532 00f2 00BF     		nop
 1533              	.L101:
 632:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 633:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 634:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* Save the actual alarm in previous and get the next to be executed */
 635:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         previous = to_fire;
 1534              		.loc 8 635 0
 1535 00f4 2646     		mov	r6, r4
 636:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         to_fire = EE_oo_counter_object_RAM[to_fire].next;
 1536              		.loc 8 636 0
 1537 00f6 194A     		ldr	r2, .L105+8
 1538 00f8 2301     		lsls	r3, r4, #4
 1539 00fa 1344     		add	r3, r3, r2
 1540 00fc 0C33     		adds	r3, r3, #12
 1541 00fe 1C68     		ldr	r4, [r3]
 637:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 638:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         /* The previous alarm is cyclic? */
 639:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         if (EE_oo_counter_object_RAM[previous].cntcycle > 0U) {
 1542              		.loc 8 639 0
 1543 0100 164A     		ldr	r2, .L105+8
 1544 0102 3301     		lsls	r3, r6, #4
 1545 0104 1344     		add	r3, r3, r2
 1546 0106 0433     		adds	r3, r3, #4
 1547 0108 1B68     		ldr	r3, [r3]
 1548 010a 002B     		cmp	r3, #0
 1549 010c 0AD0     		beq	.L102
 640:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Enqueue it again */
 641:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_insert(previous,
 642:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             (EE_oo_counter_object_RAM[previous].cntcycle - 1U));
 1550              		.loc 8 642 0
 1551 010e 134A     		ldr	r2, .L105+8
 1552 0110 3301     		lsls	r3, r6, #4
 1553 0112 1344     		add	r3, r3, r2
 1554 0114 0433     		adds	r3, r3, #4
 1555 0116 1B68     		ldr	r3, [r3]
 641:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****             (EE_oo_counter_object_RAM[previous].cntcycle - 1U));
 1556              		.loc 8 641 0
 1557 0118 013B     		subs	r3, r3, #1
 1558 011a 1946     		mov	r1, r3
 1559 011c 3046     		mov	r0, r6
 1560 011e FFF7FEFF 		bl	EE_oo_counter_object_insert
 1561 0122 04E0     		b	.L103
 1562              	.L102:
 643:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         } else {
 644:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           /* Counter Object no more used! */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****           EE_oo_counter_object_RAM[previous].used = EE_FALSE;
 1563              		.loc 8 645 0
 1564 0124 0D4A     		ldr	r2, .L105+8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 91


 1565 0126 3301     		lsls	r3, r6, #4
 1566 0128 1344     		add	r3, r3, r2
 1567 012a 0022     		movs	r2, #0
 1568 012c 1A60     		str	r2, [r3]
 1569              	.L103:
 646:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****         }
 647:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       } while ( to_fire != INVALID_COUNTER_OBJECT );
 1570              		.loc 8 647 0
 1571 012e B4F1FF3F 		cmp	r4, #-1
 1572 0132 BFD1     		bne	.L98
 1573              	.LBE2:
 648:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     } else {
 649:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       /* I do not handle any alarm but I have to decrement the first delta */
 650:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       --EE_oo_counter_object_RAM[to_fire].delta;
 651:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 652:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 653:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1574              		.loc 8 653 0
 1575 0134 0AE0     		b	.L104
 1576              	.L95:
 650:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 1577              		.loc 8 650 0
 1578 0136 094A     		ldr	r2, .L105+8
 1579 0138 2301     		lsls	r3, r4, #4
 1580 013a 1344     		add	r3, r3, r2
 1581 013c 0833     		adds	r3, r3, #8
 1582 013e 1B68     		ldr	r3, [r3]
 1583 0140 5A1E     		subs	r2, r3, #1
 1584 0142 0649     		ldr	r1, .L105+8
 1585 0144 2301     		lsls	r3, r4, #4
 1586 0146 0B44     		add	r3, r3, r1
 1587 0148 0833     		adds	r3, r3, #8
 1588 014a 1A60     		str	r2, [r3]
 1589              	.L104:
 1590              		.loc 8 653 0
 1591 014c 00BF     		nop
 1592 014e 0C37     		adds	r7, r7, #12
 1593              		.cfi_def_cfa_offset 20
 1594 0150 BD46     		mov	sp, r7
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 0152 F0BD     		pop	{r4, r5, r6, r7, pc}
 1598              	.L106:
 1599              		.align	2
 1600              	.L105:
 1601 0154 00000000 		.word	EE_counter_RAM
 1602 0158 00000000 		.word	EE_counter_ROM
 1603 015c 00000000 		.word	EE_oo_counter_object_RAM
 1604 0160 00000000 		.word	EE_oo_counter_object_ROM
 1605 0164 00000000 		.word	EE_alarm_ROM
 1606 0168 00000000 		.word	EE_oo_action_ROM
 1607              		.cfi_endproc
 1608              	.LFE75:
 1609              		.size	EE_oo_IncrementCounterImplementation, .-EE_oo_IncrementCounterImplementation
 1610              		.section	.text.EE_oo_IncrementCounterHardware,"ax",%progbits
 1611              		.align	2
 1612              		.global	EE_oo_IncrementCounterHardware
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 92


 1613              		.thumb
 1614              		.thumb_func
 1615              		.type	EE_oo_IncrementCounterHardware, %function
 1616              	EE_oo_IncrementCounterHardware:
 1617              	.LFB76:
 654:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 655:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Flag from wich index software counters starts */
 656:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_MAX_COUNTER_HW
 657:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_SOFT_COUNTERS_START EE_MAX_COUNTER_HW
 658:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #else
 659:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #define EE_SOFT_COUNTERS_START 0
 660:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_MAX_COUNTER_HW */
 661:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 662:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* Internal primitive */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID)
 664:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 1618              		.loc 8 664 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 8
 1621              		@ frame_needed = 1, uses_anonymous_args = 0
 1622 0000 B0B5     		push	{r4, r5, r7, lr}
 1623              		.cfi_def_cfa_offset 16
 1624              		.cfi_offset 4, -16
 1625              		.cfi_offset 5, -12
 1626              		.cfi_offset 7, -8
 1627              		.cfi_offset 14, -4
 1628 0002 82B0     		sub	sp, sp, #8
 1629              		.cfi_def_cfa_offset 24
 1630 0004 00AF     		add	r7, sp, #0
 1631              		.cfi_def_cfa_register 7
 1632 0006 7860     		str	r0, [r7, #4]
 665:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 666:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType ev;
 667:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Start Critical Section */
 668:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register EE_FREG const flag = EE_hal_begin_nested_primitive();
 1633              		.loc 8 668 0
 1634 0008 FFF7FEFF 		bl	EE_hal_begin_nested_primitive
 1635 000c 0546     		mov	r5, r0
 669:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_SERVICE_PROTECTION__
 670:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* This function can be call only inside the Kernel */
 671:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_as_execution_context != Kernel_Context ) {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_CALLEVEL;
 673:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 674:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_SERVICE_PROTECTION__ */
 675:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (EE_SOFT_COUNTERS_START > 0)
 676:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( CounterID >= (CounterType)EE_SOFT_COUNTERS_START ) {
 677:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_ID;
 678:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 679:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* (EE_SOFT_COUNTERS_START > 0) */
 680:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 681:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_IncrementCounterImplementation(CounterID);
 1636              		.loc 8 681 0
 1637 000e 7868     		ldr	r0, [r7, #4]
 1638 0010 FFF7FEFF 		bl	EE_oo_IncrementCounterImplementation
 682:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 1639              		.loc 8 682 0
 1640 0014 0024     		movs	r4, #0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 93


 683:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 684:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* This if statement is not always necessary */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_SERVICE_PROTECTION__)) || (EE_SOFT_COUNTERS_START > 0)
 686:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 687:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 688:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_ORTI_set_lasterror(ev);
 689:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_notify_error_service(OSId_Kernel, ev);
 690:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* XXX: This is in any case a Kernel Bug it should never happens */
 691:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_SERVICE_PROTECTION__)) || (EE_SOFT_COUNTERS_START > 0)
 692:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 693:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif
 694:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 695:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_hal_end_nested_primitive(flag);
 1641              		.loc 8 695 0
 1642 0016 2846     		mov	r0, r5
 1643 0018 FFF7FEFF 		bl	EE_hal_end_nested_primitive
 696:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   return ev;
 1644              		.loc 8 696 0
 1645 001c 2346     		mov	r3, r4
 697:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1646              		.loc 8 697 0
 1647 001e 1846     		mov	r0, r3
 1648 0020 0837     		adds	r7, r7, #8
 1649              		.cfi_def_cfa_offset 16
 1650 0022 BD46     		mov	sp, r7
 1651              		.cfi_def_cfa_register 13
 1652              		@ sp needed
 1653 0024 B0BD     		pop	{r4, r5, r7, pc}
 1654              		.cfi_endproc
 1655              	.LFE76:
 1656              		.size	EE_oo_IncrementCounterHardware, .-EE_oo_IncrementCounterHardware
 1657 0026 00BF     		.section	.text.EE_oo_IncrementCounter,"ax",%progbits
 1658              		.align	2
 1659              		.global	EE_oo_IncrementCounter
 1660              		.thumb
 1661              		.thumb_func
 1662              		.type	EE_oo_IncrementCounter, %function
 1663              	EE_oo_IncrementCounter:
 1664              	.LFB77:
 698:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 699:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifndef __PRIVATE_INCREMENTCOUNTER__
 700:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** /* [OS399]: IncrementCounter */
 701:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** StatusType EE_oo_IncrementCounter(CounterType CounterID)
 702:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** {
 1665              		.loc 8 702 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 8
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0000 B0B5     		push	{r4, r5, r7, lr}
 1670              		.cfi_def_cfa_offset 16
 1671              		.cfi_offset 4, -16
 1672              		.cfi_offset 5, -12
 1673              		.cfi_offset 7, -8
 1674              		.cfi_offset 14, -4
 1675 0002 82B0     		sub	sp, sp, #8
 1676              		.cfi_def_cfa_offset 24
 1677 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 94


 1678              		.cfi_def_cfa_register 7
 1679 0006 7860     		str	r0, [r7, #4]
 703:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Error Value */
 704:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   register StatusType ev;
 705:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* Primitive Lock Procedure */
 706:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
 1680              		.loc 8 706 0
 1681 0008 FFF7FEFF 		bl	EE_hal_begin_nested_primitive
 1682 000c 0546     		mov	r5, r0
 707:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 708:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_INCREMENTCOUNTER);
 1683              		.loc 8 708 0
 1684 000e 3820     		movs	r0, #56
 1685 0010 FFF7FEFF 		bl	EE_ORTI_set_service_in
 709:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 710:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_as_monitoring_the_stack();
 1686              		.loc 8 710 0
 1687 0014 FFF7FEFF 		bl	EE_as_monitoring_the_stack
 711:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 712:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_SERVICE_PROTECTION__
 713:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
 714:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
 715:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       then the Operating System shall ignore the service AND shall return
 716:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
 717:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 718:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 719:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       shall not perform the requested action (the service call shall have no
 720:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
 721:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 722:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* IncrementCounter is callable by Task and ISR2 */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_as_execution_context > ISR2_Context ) {
 724:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_CALLEVEL;
 725:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else if ( EE_oo_check_disableint_error() ) {
 726:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_DISABLEDINT;
 727:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 728:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_SERVICE_PROTECTION__ */
 729:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 730:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if ( (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__)) ) \
 731:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   || (defined (__OO_EXTENDED_STATUS__))
 732:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #ifdef EE_AS_RPC__
 733:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS589]: All functions that are not allowed to operate cross core shall
 734:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       return E_OS_CORE in extended status if called with parameters that
 735:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       require a cross core operation. (BSW4080013) */
 736:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_AS_ID_REMOTE(CounterID) )
 737:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 738:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_CORE;
 739:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 740:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_RPC__ */
 741:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   /* [OS285]: If the input parameter CounterID in a call of IncrementCounter()
 742:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       is not valid OR the counter is a hardware counter, IncrementCounter()
 743:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       shall return E_OS_ID. */
 744:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if (
 1688              		.loc 8 744 0
 1689 0018 7B68     		ldr	r3, [r7, #4]
 1690 001a 002B     		cmp	r3, #0
 1691 001c 01D0     		beq	.L110
 745:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (EE_SOFT_COUNTERS_START > 0)
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 95


 746:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (CounterID < (CounterType)EE_SOFT_COUNTERS_START) ||
 747:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* (EE_SOFT_COUNTERS_START > 0) */
 748:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     (CounterID >= EE_MAX_COUNTER) )
 749:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 750:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_ID;
 1692              		.loc 8 750 0
 1693 001e 0324     		movs	r4, #3
 1694 0020 0AE0     		b	.L114
 1695              	.L110:
 751:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 752:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 753:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( EE_COUNTER_ACCESS_ERR(CounterID, EE_as_active_app) ) {
 754:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OS_ACCESS;
 755:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   } else
 756:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ ||
 758:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** E_SERVICE_PROTECTION__ ||
 759:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** __OO_EXTENDED_STATUS__ */
 760:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   {
 761:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* Call to function that actually increment the counter */
 762:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_IncrementCounterImplementation(CounterID);
 1696              		.loc 8 762 0
 1697 0022 7868     		ldr	r0, [r7, #4]
 1698 0024 FFF7FEFF 		bl	EE_oo_IncrementCounterImplementation
 763:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 764:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     /* After all counter updates check if I'm not in a ISR2 and then
 765:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****        execute rescheduling. */
 766:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     if ( EE_hal_get_IRQ_nesting_level() == 0U ) {
 1699              		.loc 8 766 0
 1700 0028 FFF7FEFF 		bl	EE_hal_get_IRQ_nesting_level
 1701 002c 0346     		mov	r3, r0
 1702 002e 002B     		cmp	r3, #0
 1703 0030 01D1     		bne	.L112
 767:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****       EE_oo_preemption_point();
 1704              		.loc 8 767 0
 1705 0032 FFF7FEFF 		bl	EE_oo_preemption_point
 1706              	.L112:
 768:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     }
 769:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     ev = E_OK;
 1707              		.loc 8 769 0
 1708 0036 0024     		movs	r4, #0
 1709              	.L114:
 770:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 771:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 772:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   if ( ev != E_OK ) {
 773:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_ORTI_set_lasterror(ev);
 774:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****     EE_oo_notify_error_IncrementCounter(CounterID, ev);
 775:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   }
 776:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 777:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_INCREMENTCOUNTER);
 1710              		.loc 8 777 0
 1711 0038 3820     		movs	r0, #56
 1712 003a FFF7FEFF 		bl	EE_ORTI_set_service_out
 778:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 1713              		.loc 8 778 0
 1714 003e 2846     		mov	r0, r5
 1715 0040 FFF7FEFF 		bl	EE_hal_end_nested_primitive
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 96


 779:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** 
 780:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c ****   return ev;
 1716              		.loc 8 780 0
 1717 0044 2346     		mov	r3, r4
 781:Generated_Source\PSoC5/ErikaOS_1_ee_altick.c **** }
 1718              		.loc 8 781 0
 1719 0046 1846     		mov	r0, r3
 1720 0048 0837     		adds	r7, r7, #8
 1721              		.cfi_def_cfa_offset 16
 1722 004a BD46     		mov	sp, r7
 1723              		.cfi_def_cfa_register 13
 1724              		@ sp needed
 1725 004c B0BD     		pop	{r4, r5, r7, pc}
 1726              		.cfi_endproc
 1727              	.LFE77:
 1728              		.size	EE_oo_IncrementCounter, .-EE_oo_IncrementCounter
 1729 004e 00BF     		.text
 1730              	.Letext0:
 1731              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 1732              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 1733              		.section	.debug_info,"",%progbits
 1734              	.Ldebug_info0:
 1735 0000 920A0000 		.4byte	0xa92
 1736 0004 0400     		.2byte	0x4
 1737 0006 00000000 		.4byte	.Ldebug_abbrev0
 1738 000a 04       		.byte	0x4
 1739 000b 01       		.uleb128 0x1
 1740 000c 75000000 		.4byte	.LASF139
 1741 0010 0C       		.byte	0xc
 1742 0011 C3050000 		.4byte	.LASF140
 1743 0015 86020000 		.4byte	.LASF141
 1744 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1745 001d 00000000 		.4byte	0
 1746 0021 00000000 		.4byte	.Ldebug_line0
 1747 0025 02       		.uleb128 0x2
 1748 0026 01       		.byte	0x1
 1749 0027 06       		.byte	0x6
 1750 0028 AA010000 		.4byte	.LASF0
 1751 002c 02       		.uleb128 0x2
 1752 002d 01       		.byte	0x1
 1753 002e 08       		.byte	0x8
 1754 002f 22070000 		.4byte	.LASF1
 1755 0033 02       		.uleb128 0x2
 1756 0034 02       		.byte	0x2
 1757 0035 05       		.byte	0x5
 1758 0036 60070000 		.4byte	.LASF2
 1759 003a 02       		.uleb128 0x2
 1760 003b 02       		.byte	0x2
 1761 003c 07       		.byte	0x7
 1762 003d 09040000 		.4byte	.LASF3
 1763 0041 02       		.uleb128 0x2
 1764 0042 04       		.byte	0x4
 1765 0043 05       		.byte	0x5
 1766 0044 27020000 		.4byte	.LASF4
 1767 0048 02       		.uleb128 0x2
 1768 0049 04       		.byte	0x4
 1769 004a 07       		.byte	0x7
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 97


 1770 004b E1030000 		.4byte	.LASF5
 1771 004f 02       		.uleb128 0x2
 1772 0050 08       		.byte	0x8
 1773 0051 05       		.byte	0x5
 1774 0052 9C010000 		.4byte	.LASF6
 1775 0056 02       		.uleb128 0x2
 1776 0057 08       		.byte	0x8
 1777 0058 07       		.byte	0x7
 1778 0059 0F010000 		.4byte	.LASF7
 1779 005d 03       		.uleb128 0x3
 1780 005e 04       		.byte	0x4
 1781 005f 05       		.byte	0x5
 1782 0060 696E7400 		.ascii	"int\000"
 1783 0064 02       		.uleb128 0x2
 1784 0065 04       		.byte	0x4
 1785 0066 07       		.byte	0x7
 1786 0067 8F030000 		.4byte	.LASF8
 1787 006b 02       		.uleb128 0x2
 1788 006c 08       		.byte	0x8
 1789 006d 04       		.byte	0x4
 1790 006e 97050000 		.4byte	.LASF9
 1791 0072 04       		.uleb128 0x4
 1792 0073 C5040000 		.4byte	.LASF10
 1793 0077 09       		.byte	0x9
 1794 0078 3E       		.byte	0x3e
 1795 0079 2C000000 		.4byte	0x2c
 1796 007d 04       		.uleb128 0x4
 1797 007e 9C030000 		.4byte	.LASF11
 1798 0082 09       		.byte	0x9
 1799 0083 3F       		.byte	0x3f
 1800 0084 25000000 		.4byte	0x25
 1801 0088 04       		.uleb128 0x4
 1802 0089 D9060000 		.4byte	.LASF12
 1803 008d 09       		.byte	0x9
 1804 008e 52       		.byte	0x52
 1805 008f 3A000000 		.4byte	0x3a
 1806 0093 04       		.uleb128 0x4
 1807 0094 7F090000 		.4byte	.LASF13
 1808 0098 09       		.byte	0x9
 1809 0099 53       		.byte	0x53
 1810 009a 5D000000 		.4byte	0x5d
 1811 009e 04       		.uleb128 0x4
 1812 009f 6E090000 		.4byte	.LASF14
 1813 00a3 09       		.byte	0x9
 1814 00a4 54       		.byte	0x54
 1815 00a5 64000000 		.4byte	0x64
 1816 00a9 05       		.uleb128 0x5
 1817 00aa 04       		.byte	0x4
 1818 00ab AF000000 		.4byte	0xaf
 1819 00af 06       		.uleb128 0x6
 1820 00b0 04       		.uleb128 0x4
 1821 00b1 CE040000 		.4byte	.LASF15
 1822 00b5 09       		.byte	0x9
 1823 00b6 70       		.byte	0x70
 1824 00b7 A9000000 		.4byte	0xa9
 1825 00bb 04       		.uleb128 0x4
 1826 00bc A4030000 		.4byte	.LASF16
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 98


 1827 00c0 01       		.byte	0x1
 1828 00c1 4D       		.byte	0x4d
 1829 00c2 9E000000 		.4byte	0x9e
 1830 00c6 04       		.uleb128 0x4
 1831 00c7 270A0000 		.4byte	.LASF17
 1832 00cb 01       		.byte	0x1
 1833 00cc 4F       		.byte	0x4f
 1834 00cd 9E000000 		.4byte	0x9e
 1835 00d1 04       		.uleb128 0x4
 1836 00d2 03010000 		.4byte	.LASF18
 1837 00d6 01       		.byte	0x1
 1838 00d7 54       		.byte	0x54
 1839 00d8 BB000000 		.4byte	0xbb
 1840 00dc 04       		.uleb128 0x4
 1841 00dd 53030000 		.4byte	.LASF19
 1842 00e1 01       		.byte	0x1
 1843 00e2 78       		.byte	0x78
 1844 00e3 93000000 		.4byte	0x93
 1845 00e7 07       		.uleb128 0x7
 1846 00e8 27050000 		.4byte	.LASF20
 1847 00ec 05       		.byte	0x5
 1848 00ed 1101     		.2byte	0x111
 1849 00ef 88000000 		.4byte	0x88
 1850 00f3 07       		.uleb128 0x7
 1851 00f4 83010000 		.4byte	.LASF21
 1852 00f8 05       		.byte	0x5
 1853 00f9 F701     		.2byte	0x1f7
 1854 00fb DC000000 		.4byte	0xdc
 1855 00ff 07       		.uleb128 0x7
 1856 0100 CD010000 		.4byte	.LASF22
 1857 0104 05       		.byte	0x5
 1858 0105 2C02     		.2byte	0x22c
 1859 0107 BB000000 		.4byte	0xbb
 1860 010b 07       		.uleb128 0x7
 1861 010c 41000000 		.4byte	.LASF23
 1862 0110 05       		.byte	0x5
 1863 0111 3502     		.2byte	0x235
 1864 0113 BB000000 		.4byte	0xbb
 1865 0117 07       		.uleb128 0x7
 1866 0118 09080000 		.4byte	.LASF24
 1867 011c 05       		.byte	0x5
 1868 011d 5D02     		.2byte	0x25d
 1869 011f BB000000 		.4byte	0xbb
 1870 0123 07       		.uleb128 0x7
 1871 0124 6A000000 		.4byte	.LASF25
 1872 0128 05       		.byte	0x5
 1873 0129 6302     		.2byte	0x263
 1874 012b BB000000 		.4byte	0xbb
 1875 012f 07       		.uleb128 0x7
 1876 0130 DF040000 		.4byte	.LASF26
 1877 0134 05       		.byte	0x5
 1878 0135 6C02     		.2byte	0x26c
 1879 0137 BB000000 		.4byte	0xbb
 1880 013b 08       		.uleb128 0x8
 1881 013c 0C       		.byte	0xc
 1882 013d 05       		.byte	0x5
 1883 013e 7202     		.2byte	0x272
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 99


 1884 0140 6C010000 		.4byte	0x16c
 1885 0144 09       		.uleb128 0x9
 1886 0145 8C010000 		.4byte	.LASF27
 1887 0149 05       		.byte	0x5
 1888 014a 7302     		.2byte	0x273
 1889 014c 0B010000 		.4byte	0x10b
 1890 0150 00       		.byte	0
 1891 0151 09       		.uleb128 0x9
 1892 0152 22060000 		.4byte	.LASF28
 1893 0156 05       		.byte	0x5
 1894 0157 7402     		.2byte	0x274
 1895 0159 0B010000 		.4byte	0x10b
 1896 015d 04       		.byte	0x4
 1897 015e 09       		.uleb128 0x9
 1898 015f 4A030000 		.4byte	.LASF29
 1899 0163 05       		.byte	0x5
 1900 0164 7502     		.2byte	0x275
 1901 0166 0B010000 		.4byte	0x10b
 1902 016a 08       		.byte	0x8
 1903 016b 00       		.byte	0
 1904 016c 07       		.uleb128 0x7
 1905 016d A3070000 		.4byte	.LASF30
 1906 0171 05       		.byte	0x5
 1907 0172 7A02     		.2byte	0x27a
 1908 0174 3B010000 		.4byte	0x13b
 1909 0178 08       		.uleb128 0x8
 1910 0179 08       		.byte	0x8
 1911 017a 05       		.byte	0x5
 1912 017b 7D02     		.2byte	0x27d
 1913 017d 9C010000 		.4byte	0x19c
 1914 0181 09       		.uleb128 0x9
 1915 0182 5A030000 		.4byte	.LASF31
 1916 0186 05       		.byte	0x5
 1917 0187 7E02     		.2byte	0x27e
 1918 0189 0B010000 		.4byte	0x10b
 1919 018d 00       		.byte	0
 1920 018e 09       		.uleb128 0x9
 1921 018f 03080000 		.4byte	.LASF32
 1922 0193 05       		.byte	0x5
 1923 0194 7F02     		.2byte	0x27f
 1924 0196 17010000 		.4byte	0x117
 1925 019a 04       		.byte	0x4
 1926 019b 00       		.byte	0
 1927 019c 07       		.uleb128 0x7
 1928 019d FB010000 		.4byte	.LASF33
 1929 01a1 05       		.byte	0x5
 1930 01a2 8002     		.2byte	0x280
 1931 01a4 78010000 		.4byte	0x178
 1932 01a8 0A       		.uleb128 0xa
 1933 01a9 01       		.byte	0x1
 1934 01aa 2C000000 		.4byte	0x2c
 1935 01ae 05       		.byte	0x5
 1936 01af 8A02     		.2byte	0x28a
 1937 01b1 C2010000 		.4byte	0x1c2
 1938 01b5 0B       		.uleb128 0xb
 1939 01b6 30070000 		.4byte	.LASF34
 1940 01ba 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 100


 1941 01bb 0B       		.uleb128 0xb
 1942 01bc E3060000 		.4byte	.LASF35
 1943 01c0 01       		.byte	0x1
 1944 01c1 00       		.byte	0
 1945 01c2 07       		.uleb128 0x7
 1946 01c3 3D040000 		.4byte	.LASF36
 1947 01c7 05       		.byte	0x5
 1948 01c8 8D02     		.2byte	0x28d
 1949 01ca A8010000 		.4byte	0x1a8
 1950 01ce 07       		.uleb128 0x7
 1951 01cf 7F040000 		.4byte	.LASF37
 1952 01d3 05       		.byte	0x5
 1953 01d4 9002     		.2byte	0x290
 1954 01d6 C2010000 		.4byte	0x1c2
 1955 01da 08       		.uleb128 0x8
 1956 01db 0C       		.byte	0xc
 1957 01dc 05       		.byte	0x5
 1958 01dd 9402     		.2byte	0x294
 1959 01df 09020000 		.4byte	0x209
 1960 01e3 0C       		.uleb128 0xc
 1961 01e4 6300     		.ascii	"c\000"
 1962 01e6 05       		.byte	0x5
 1963 01e7 9602     		.2byte	0x296
 1964 01e9 2F010000 		.4byte	0x12f
 1965 01ed 00       		.byte	0
 1966 01ee 09       		.uleb128 0x9
 1967 01ef 7A080000 		.4byte	.LASF38
 1968 01f3 05       		.byte	0x5
 1969 01f4 9802     		.2byte	0x298
 1970 01f6 17010000 		.4byte	0x117
 1971 01fa 04       		.byte	0x4
 1972 01fb 09       		.uleb128 0x9
 1973 01fc 04040000 		.4byte	.LASF39
 1974 0200 05       		.byte	0x5
 1975 0201 9A02     		.2byte	0x29a
 1976 0203 CE010000 		.4byte	0x1ce
 1977 0207 08       		.byte	0x8
 1978 0208 00       		.byte	0
 1979 0209 07       		.uleb128 0x7
 1980 020a 65010000 		.4byte	.LASF40
 1981 020e 05       		.byte	0x5
 1982 020f 9B02     		.2byte	0x29b
 1983 0211 DA010000 		.4byte	0x1da
 1984 0215 08       		.uleb128 0x8
 1985 0216 10       		.byte	0x10
 1986 0217 05       		.byte	0x5
 1987 0218 9F02     		.2byte	0x29f
 1988 021a 53020000 		.4byte	0x253
 1989 021e 09       		.uleb128 0x9
 1990 021f 53060000 		.4byte	.LASF41
 1991 0223 05       		.byte	0x5
 1992 0224 A002     		.2byte	0x2a0
 1993 0226 D1000000 		.4byte	0xd1
 1994 022a 00       		.byte	0
 1995 022b 09       		.uleb128 0x9
 1996 022c BC090000 		.4byte	.LASF42
 1997 0230 05       		.byte	0x5
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 101


 1998 0231 A102     		.2byte	0x2a1
 1999 0233 0B010000 		.4byte	0x10b
 2000 0237 04       		.byte	0x4
 2001 0238 09       		.uleb128 0x9
 2002 0239 5F010000 		.4byte	.LASF43
 2003 023d 05       		.byte	0x5
 2004 023e A202     		.2byte	0x2a2
 2005 0240 0B010000 		.4byte	0x10b
 2006 0244 08       		.byte	0x8
 2007 0245 09       		.uleb128 0x9
 2008 0246 3C000000 		.4byte	.LASF44
 2009 024a 05       		.byte	0x5
 2010 024b A302     		.2byte	0x2a3
 2011 024d 17010000 		.4byte	0x117
 2012 0251 0C       		.byte	0xc
 2013 0252 00       		.byte	0
 2014 0253 07       		.uleb128 0x7
 2015 0254 7F060000 		.4byte	.LASF45
 2016 0258 05       		.byte	0x5
 2017 0259 A402     		.2byte	0x2a4
 2018 025b 15020000 		.4byte	0x215
 2019 025f 0A       		.uleb128 0xa
 2020 0260 01       		.byte	0x1
 2021 0261 2C000000 		.4byte	0x2c
 2022 0265 05       		.byte	0x5
 2023 0266 A702     		.2byte	0x2a7
 2024 0268 85020000 		.4byte	0x285
 2025 026c 0B       		.uleb128 0xb
 2026 026d 1B080000 		.4byte	.LASF46
 2027 0271 00       		.byte	0
 2028 0272 0B       		.uleb128 0xb
 2029 0273 96080000 		.4byte	.LASF47
 2030 0277 01       		.byte	0x1
 2031 0278 0B       		.uleb128 0xb
 2032 0279 4A080000 		.4byte	.LASF48
 2033 027d 02       		.byte	0x2
 2034 027e 0B       		.uleb128 0xb
 2035 027f C6070000 		.4byte	.LASF49
 2036 0283 03       		.byte	0x3
 2037 0284 00       		.byte	0
 2038 0285 07       		.uleb128 0x7
 2039 0286 B6010000 		.4byte	.LASF50
 2040 028a 05       		.byte	0x5
 2041 028b AC02     		.2byte	0x2ac
 2042 028d 5F020000 		.4byte	0x25f
 2043 0291 07       		.uleb128 0x7
 2044 0292 39090000 		.4byte	.LASF51
 2045 0296 05       		.byte	0x5
 2046 0297 AF02     		.2byte	0x2af
 2047 0299 85020000 		.4byte	0x285
 2048 029d 08       		.uleb128 0x8
 2049 029e 14       		.byte	0x14
 2050 029f 05       		.byte	0x5
 2051 02a0 B202     		.2byte	0x2b2
 2052 02a2 E6020000 		.4byte	0x2e6
 2053 02a6 09       		.uleb128 0x9
 2054 02a7 D3080000 		.4byte	.LASF52
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 102


 2055 02ab 05       		.byte	0x5
 2056 02ac B302     		.2byte	0x2b3
 2057 02ae 91020000 		.4byte	0x291
 2058 02b2 00       		.byte	0
 2059 02b3 09       		.uleb128 0x9
 2060 02b4 EB090000 		.4byte	.LASF53
 2061 02b8 05       		.byte	0x5
 2062 02b9 B402     		.2byte	0x2b4
 2063 02bb F3000000 		.4byte	0xf3
 2064 02bf 04       		.byte	0x4
 2065 02c0 09       		.uleb128 0x9
 2066 02c1 BA070000 		.4byte	.LASF54
 2067 02c5 05       		.byte	0x5
 2068 02c6 B602     		.2byte	0x2b6
 2069 02c8 FF000000 		.4byte	0xff
 2070 02cc 08       		.byte	0x8
 2071 02cd 0C       		.uleb128 0xc
 2072 02ce 6600     		.ascii	"f\000"
 2073 02d0 05       		.byte	0x5
 2074 02d1 B802     		.2byte	0x2b8
 2075 02d3 B0000000 		.4byte	0xb0
 2076 02d7 0C       		.byte	0xc
 2077 02d8 09       		.uleb128 0x9
 2078 02d9 57070000 		.4byte	.LASF55
 2079 02dd 05       		.byte	0x5
 2080 02de BA02     		.2byte	0x2ba
 2081 02e0 2F010000 		.4byte	0x12f
 2082 02e4 10       		.byte	0x10
 2083 02e5 00       		.byte	0
 2084 02e6 07       		.uleb128 0x7
 2085 02e7 C3060000 		.4byte	.LASF56
 2086 02eb 05       		.byte	0x5
 2087 02ec BB02     		.2byte	0x2bb
 2088 02ee 9D020000 		.4byte	0x29d
 2089 02f2 08       		.uleb128 0x8
 2090 02f3 04       		.byte	0x4
 2091 02f4 05       		.byte	0x5
 2092 02f5 BD02     		.2byte	0x2bd
 2093 02f7 09030000 		.4byte	0x309
 2094 02fb 09       		.uleb128 0x9
 2095 02fc 0C050000 		.4byte	.LASF57
 2096 0300 05       		.byte	0x5
 2097 0301 BF02     		.2byte	0x2bf
 2098 0303 23010000 		.4byte	0x123
 2099 0307 00       		.byte	0
 2100 0308 00       		.byte	0
 2101 0309 07       		.uleb128 0x7
 2102 030a AC030000 		.4byte	.LASF58
 2103 030e 05       		.byte	0x5
 2104 030f C402     		.2byte	0x2c4
 2105 0311 F2020000 		.4byte	0x2f2
 2106 0315 07       		.uleb128 0x7
 2107 0316 3B010000 		.4byte	.LASF59
 2108 031a 05       		.byte	0x5
 2109 031b 2103     		.2byte	0x321
 2110 031d 2C000000 		.4byte	0x2c
 2111 0321 0A       		.uleb128 0xa
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 103


 2112 0322 01       		.byte	0x1
 2113 0323 2C000000 		.4byte	0x2c
 2114 0327 05       		.byte	0x5
 2115 0328 5904     		.2byte	0x459
 2116 032a 71030000 		.4byte	0x371
 2117 032e 0B       		.uleb128 0xb
 2118 032f 2F060000 		.4byte	.LASF60
 2119 0333 00       		.byte	0
 2120 0334 0B       		.uleb128 0xb
 2121 0335 46060000 		.4byte	.LASF61
 2122 0339 01       		.byte	0x1
 2123 033a 0B       		.uleb128 0xb
 2124 033b 00000000 		.4byte	.LASF62
 2125 033f 02       		.byte	0x2
 2126 0340 0B       		.uleb128 0xb
 2127 0341 4B050000 		.4byte	.LASF63
 2128 0345 03       		.byte	0x3
 2129 0346 0B       		.uleb128 0xb
 2130 0347 80050000 		.4byte	.LASF64
 2131 034b 04       		.byte	0x4
 2132 034c 0B       		.uleb128 0xb
 2133 034d 37050000 		.4byte	.LASF65
 2134 0351 05       		.byte	0x5
 2135 0352 0B       		.uleb128 0xb
 2136 0353 12020000 		.4byte	.LASF66
 2137 0357 06       		.byte	0x6
 2138 0358 0B       		.uleb128 0xb
 2139 0359 CD030000 		.4byte	.LASF67
 2140 035d 07       		.byte	0x7
 2141 035e 0B       		.uleb128 0xb
 2142 035f C5090000 		.4byte	.LASF68
 2143 0363 08       		.byte	0x8
 2144 0364 0B       		.uleb128 0xb
 2145 0365 5C040000 		.4byte	.LASF69
 2146 0369 09       		.byte	0x9
 2147 036a 0B       		.uleb128 0xb
 2148 036b B6050000 		.4byte	.LASF70
 2149 036f 0A       		.byte	0xa
 2150 0370 00       		.byte	0
 2151 0371 07       		.uleb128 0x7
 2152 0372 5C080000 		.4byte	.LASF71
 2153 0376 05       		.byte	0x5
 2154 0377 6504     		.2byte	0x465
 2155 0379 21030000 		.4byte	0x321
 2156 037d 0D       		.uleb128 0xd
 2157 037e 0B070000 		.4byte	.LASF74
 2158 0382 01       		.byte	0x1
 2159 0383 DC       		.byte	0xdc
 2160 0384 00000000 		.4byte	.LFB11
 2161 0388 18000000 		.4byte	.LFE11-.LFB11
 2162 038c 01       		.uleb128 0x1
 2163 038d 9C       		.byte	0x9c
 2164 038e 9F030000 		.4byte	0x39f
 2165 0392 0E       		.uleb128 0xe
 2166 0393 6600     		.ascii	"f\000"
 2167 0395 01       		.byte	0x1
 2168 0396 DC       		.byte	0xdc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 104


 2169 0397 C6000000 		.4byte	0xc6
 2170 039b 02       		.uleb128 0x2
 2171 039c 91       		.byte	0x91
 2172 039d 74       		.sleb128 -12
 2173 039e 00       		.byte	0
 2174 039f 0F       		.uleb128 0xf
 2175 03a0 FD090000 		.4byte	.LASF142
 2176 03a4 01       		.byte	0x1
 2177 03a5 F1       		.byte	0xf1
 2178 03a6 C6000000 		.4byte	0xc6
 2179 03aa 00000000 		.4byte	.LFB12
 2180 03ae 1A000000 		.4byte	.LFE12-.LFB12
 2181 03b2 01       		.uleb128 0x1
 2182 03b3 9C       		.byte	0x9c
 2183 03b4 C7030000 		.4byte	0x3c7
 2184 03b8 10       		.uleb128 0x10
 2185 03b9 F5010000 		.4byte	.LASF92
 2186 03bd 01       		.byte	0x1
 2187 03be F4       		.byte	0xf4
 2188 03bf C6000000 		.4byte	0xc6
 2189 03c3 02       		.uleb128 0x2
 2190 03c4 91       		.byte	0x91
 2191 03c5 74       		.sleb128 -12
 2192 03c6 00       		.byte	0
 2193 03c7 11       		.uleb128 0x11
 2194 03c8 DF080000 		.4byte	.LASF72
 2195 03cc 02       		.byte	0x2
 2196 03cd 4D       		.byte	0x4d
 2197 03ce BB000000 		.4byte	0xbb
 2198 03d2 00000000 		.4byte	.LFB23
 2199 03d6 14000000 		.4byte	.LFE23-.LFB23
 2200 03da 01       		.uleb128 0x1
 2201 03db 9C       		.byte	0x9c
 2202 03dc 12       		.uleb128 0x12
 2203 03dd B5080000 		.4byte	.LASF73
 2204 03e1 03       		.byte	0x3
 2205 03e2 60       		.byte	0x60
 2206 03e3 C6000000 		.4byte	0xc6
 2207 03e7 00000000 		.4byte	.LFB25
 2208 03eb 0E000000 		.4byte	.LFE25-.LFB25
 2209 03ef 01       		.uleb128 0x1
 2210 03f0 9C       		.byte	0x9c
 2211 03f1 13       		.uleb128 0x13
 2212 03f2 20000000 		.4byte	.LASF75
 2213 03f6 03       		.byte	0x3
 2214 03f7 68       		.byte	0x68
 2215 03f8 00000000 		.4byte	.LFB26
 2216 03fc 16000000 		.4byte	.LFE26-.LFB26
 2217 0400 01       		.uleb128 0x1
 2218 0401 9C       		.byte	0x9c
 2219 0402 13040000 		.4byte	0x413
 2220 0406 0E       		.uleb128 0xe
 2221 0407 6600     		.ascii	"f\000"
 2222 0409 03       		.byte	0x3
 2223 040a 68       		.byte	0x68
 2224 040b C6000000 		.4byte	0xc6
 2225 040f 02       		.uleb128 0x2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 105


 2226 0410 91       		.byte	0x91
 2227 0411 74       		.sleb128 -12
 2228 0412 00       		.byte	0
 2229 0413 13       		.uleb128 0x13
 2230 0414 28090000 		.4byte	.LASF76
 2231 0418 04       		.byte	0x4
 2232 0419 98       		.byte	0x98
 2233 041a 00000000 		.4byte	.LFB32
 2234 041e 1C000000 		.4byte	.LFE32-.LFB32
 2235 0422 01       		.uleb128 0x1
 2236 0423 9C       		.byte	0x9c
 2237 0424 37040000 		.4byte	0x437
 2238 0428 0E       		.uleb128 0xe
 2239 0429 74696400 		.ascii	"tid\000"
 2240 042d 04       		.byte	0x4
 2241 042e 98       		.byte	0x98
 2242 042f DC000000 		.4byte	0xdc
 2243 0433 02       		.uleb128 0x2
 2244 0434 91       		.byte	0x91
 2245 0435 74       		.sleb128 -12
 2246 0436 00       		.byte	0
 2247 0437 13       		.uleb128 0x13
 2248 0438 26010000 		.4byte	.LASF77
 2249 043c 04       		.byte	0x4
 2250 043d A5       		.byte	0xa5
 2251 043e 00000000 		.4byte	.LFB33
 2252 0442 16000000 		.4byte	.LFE33-.LFB33
 2253 0446 01       		.uleb128 0x1
 2254 0447 9C       		.byte	0x9c
 2255 0448 5B040000 		.4byte	0x45b
 2256 044c 0E       		.uleb128 0xe
 2257 044d 74696400 		.ascii	"tid\000"
 2258 0451 04       		.byte	0x4
 2259 0452 A5       		.byte	0xa5
 2260 0453 DC000000 		.4byte	0xdc
 2261 0457 02       		.uleb128 0x2
 2262 0458 91       		.byte	0x91
 2263 0459 74       		.sleb128 -12
 2264 045a 00       		.byte	0
 2265 045b 14       		.uleb128 0x14
 2266 045c FC080000 		.4byte	.LASF78
 2267 0460 05       		.byte	0x5
 2268 0461 9703     		.2byte	0x397
 2269 0463 00000000 		.4byte	.LFB36
 2270 0467 14000000 		.4byte	.LFE36-.LFB36
 2271 046b 01       		.uleb128 0x1
 2272 046c 9C       		.byte	0x9c
 2273 046d 81040000 		.4byte	0x481
 2274 0471 15       		.uleb128 0x15
 2275 0472 73727600 		.ascii	"srv\000"
 2276 0476 05       		.byte	0x5
 2277 0477 9703     		.2byte	0x397
 2278 0479 72000000 		.4byte	0x72
 2279 047d 02       		.uleb128 0x2
 2280 047e 91       		.byte	0x91
 2281 047f 77       		.sleb128 -9
 2282 0480 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 106


 2283 0481 16       		.uleb128 0x16
 2284 0482 4A000000 		.4byte	.LASF79
 2285 0486 05       		.byte	0x5
 2286 0487 A303     		.2byte	0x3a3
 2287 0489 00000000 		.4byte	.LFB37
 2288 048d 1E000000 		.4byte	.LFE37-.LFB37
 2289 0491 01       		.uleb128 0x1
 2290 0492 9C       		.byte	0x9c
 2291 0493 A6040000 		.4byte	0x4a6
 2292 0497 15       		.uleb128 0x15
 2293 0498 696400   		.ascii	"id\000"
 2294 049b 05       		.byte	0x5
 2295 049c A303     		.2byte	0x3a3
 2296 049e 72000000 		.4byte	0x72
 2297 04a2 02       		.uleb128 0x2
 2298 04a3 91       		.byte	0x91
 2299 04a4 77       		.sleb128 -9
 2300 04a5 00       		.byte	0
 2301 04a6 16       		.uleb128 0x16
 2302 04a7 6E020000 		.4byte	.LASF80
 2303 04ab 05       		.byte	0x5
 2304 04ac A803     		.2byte	0x3a8
 2305 04ae 00000000 		.4byte	.LFB38
 2306 04b2 1A000000 		.4byte	.LFE38-.LFB38
 2307 04b6 01       		.uleb128 0x1
 2308 04b7 9C       		.byte	0x9c
 2309 04b8 CB040000 		.4byte	0x4cb
 2310 04bc 15       		.uleb128 0x15
 2311 04bd 696400   		.ascii	"id\000"
 2312 04c0 05       		.byte	0x5
 2313 04c1 A803     		.2byte	0x3a8
 2314 04c3 72000000 		.4byte	0x72
 2315 04c7 02       		.uleb128 0x2
 2316 04c8 91       		.byte	0x91
 2317 04c9 77       		.sleb128 -9
 2318 04ca 00       		.byte	0
 2319 04cb 14       		.uleb128 0x14
 2320 04cc 2A080000 		.4byte	.LASF81
 2321 04d0 05       		.byte	0x5
 2322 04d1 D203     		.2byte	0x3d2
 2323 04d3 00000000 		.4byte	.LFB39
 2324 04d7 12000000 		.4byte	.LFE39-.LFB39
 2325 04db 01       		.uleb128 0x1
 2326 04dc 9C       		.byte	0x9c
 2327 04dd F1040000 		.4byte	0x4f1
 2328 04e1 15       		.uleb128 0x15
 2329 04e2 746D7000 		.ascii	"tmp\000"
 2330 04e6 05       		.byte	0x5
 2331 04e7 D203     		.2byte	0x3d2
 2332 04e9 DC000000 		.4byte	0xdc
 2333 04ed 02       		.uleb128 0x2
 2334 04ee 91       		.byte	0x91
 2335 04ef 74       		.sleb128 -12
 2336 04f0 00       		.byte	0
 2337 04f1 14       		.uleb128 0x14
 2338 04f2 D9070000 		.4byte	.LASF82
 2339 04f6 05       		.byte	0x5
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 107


 2340 04f7 8404     		.2byte	0x484
 2341 04f9 00000000 		.4byte	.LFB41
 2342 04fd 14000000 		.4byte	.LFE41-.LFB41
 2343 0501 01       		.uleb128 0x1
 2344 0502 9C       		.byte	0x9c
 2345 0503 17050000 		.4byte	0x517
 2346 0507 15       		.uleb128 0x15
 2347 0508 63747800 		.ascii	"ctx\000"
 2348 050c 05       		.byte	0x5
 2349 050d 8504     		.2byte	0x485
 2350 050f 71030000 		.4byte	0x371
 2351 0513 02       		.uleb128 0x2
 2352 0514 91       		.byte	0x91
 2353 0515 77       		.sleb128 -9
 2354 0516 00       		.byte	0
 2355 0517 17       		.uleb128 0x17
 2356 0518 07060000 		.4byte	.LASF86
 2357 051c 06       		.byte	0x6
 2358 051d AB01     		.2byte	0x1ab
 2359 051f 00000000 		.4byte	.LFB50
 2360 0523 0C000000 		.4byte	.LFE50-.LFB50
 2361 0527 01       		.uleb128 0x1
 2362 0528 9C       		.byte	0x9c
 2363 0529 0D       		.uleb128 0xd
 2364 052a 10090000 		.4byte	.LASF83
 2365 052e 07       		.byte	0x7
 2366 052f AF       		.byte	0xaf
 2367 0530 00000000 		.4byte	.LFB51
 2368 0534 14000000 		.4byte	.LFE51-.LFB51
 2369 0538 01       		.uleb128 0x1
 2370 0539 9C       		.byte	0x9c
 2371 053a 4D050000 		.4byte	0x54d
 2372 053e 18       		.uleb128 0x18
 2373 053f F7090000 		.4byte	.LASF84
 2374 0543 07       		.byte	0x7
 2375 0544 AF       		.byte	0xaf
 2376 0545 15030000 		.4byte	0x315
 2377 0549 02       		.uleb128 0x2
 2378 054a 91       		.byte	0x91
 2379 054b 77       		.sleb128 -9
 2380 054c 00       		.byte	0
 2381 054d 11       		.uleb128 0x11
 2382 054e 7D030000 		.4byte	.LASF85
 2383 0552 07       		.byte	0x7
 2384 0553 EE       		.byte	0xee
 2385 0554 DC000000 		.4byte	0xdc
 2386 0558 00000000 		.4byte	.LFB53
 2387 055c 14000000 		.4byte	.LFE53-.LFB53
 2388 0560 01       		.uleb128 0x1
 2389 0561 9C       		.byte	0x9c
 2390 0562 19       		.uleb128 0x19
 2391 0563 9D060000 		.4byte	.LASF87
 2392 0567 07       		.byte	0x7
 2393 0568 8D01     		.2byte	0x18d
 2394 056a 00000000 		.4byte	.LFB57
 2395 056e 0E000000 		.4byte	.LFE57-.LFB57
 2396 0572 01       		.uleb128 0x1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 108


 2397 0573 9C       		.byte	0x9c
 2398 0574 17       		.uleb128 0x17
 2399 0575 58060000 		.4byte	.LASF88
 2400 0579 07       		.byte	0x7
 2401 057a 9A01     		.2byte	0x19a
 2402 057c 00000000 		.4byte	.LFB58
 2403 0580 0C000000 		.4byte	.LFE58-.LFB58
 2404 0584 01       		.uleb128 0x1
 2405 0585 9C       		.byte	0x9c
 2406 0586 14       		.uleb128 0x14
 2407 0587 FC020000 		.4byte	.LASF89
 2408 058b 07       		.byte	0x7
 2409 058c 2902     		.2byte	0x229
 2410 058e 00000000 		.4byte	.LFB63
 2411 0592 20000000 		.4byte	.LFE63-.LFB63
 2412 0596 01       		.uleb128 0x1
 2413 0597 9C       		.byte	0x9c
 2414 0598 AC050000 		.4byte	0x5ac
 2415 059c 1A       		.uleb128 0x1a
 2416 059d 88090000 		.4byte	.LASF90
 2417 05a1 07       		.byte	0x7
 2418 05a2 2902     		.2byte	0x229
 2419 05a4 F3000000 		.4byte	0xf3
 2420 05a8 02       		.uleb128 0x2
 2421 05a9 91       		.byte	0x91
 2422 05aa 74       		.sleb128 -12
 2423 05ab 00       		.byte	0
 2424 05ac 16       		.uleb128 0x16
 2425 05ad 93090000 		.4byte	.LASF91
 2426 05b1 07       		.byte	0x7
 2427 05b2 3202     		.2byte	0x232
 2428 05b4 00000000 		.4byte	.LFB64
 2429 05b8 38000000 		.4byte	.LFE64-.LFB64
 2430 05bc 01       		.uleb128 0x1
 2431 05bd 9C       		.byte	0x9c
 2432 05be D1050000 		.4byte	0x5d1
 2433 05c2 1B       		.uleb128 0x1b
 2434 05c3 746D7000 		.ascii	"tmp\000"
 2435 05c7 07       		.byte	0x7
 2436 05c8 3402     		.2byte	0x234
 2437 05ca F3000000 		.4byte	0xf3
 2438 05ce 01       		.uleb128 0x1
 2439 05cf 54       		.byte	0x54
 2440 05d0 00       		.byte	0
 2441 05d1 16       		.uleb128 0x16
 2442 05d2 54090000 		.4byte	.LASF93
 2443 05d6 07       		.byte	0x7
 2444 05d7 5B02     		.2byte	0x25b
 2445 05d9 00000000 		.4byte	.LFB65
 2446 05dd 30000000 		.4byte	.LFE65-.LFB65
 2447 05e1 01       		.uleb128 0x1
 2448 05e2 9C       		.byte	0x9c
 2449 05e3 F7050000 		.4byte	0x5f7
 2450 05e7 1A       		.uleb128 0x1a
 2451 05e8 78090000 		.4byte	.LASF94
 2452 05ec 07       		.byte	0x7
 2453 05ed 5B02     		.2byte	0x25b
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 109


 2454 05ef F3000000 		.4byte	0xf3
 2455 05f3 02       		.uleb128 0x2
 2456 05f4 91       		.byte	0x91
 2457 05f5 74       		.sleb128 -12
 2458 05f6 00       		.byte	0
 2459 05f7 16       		.uleb128 0x16
 2460 05f8 E2020000 		.4byte	.LASF95
 2461 05fc 07       		.byte	0x7
 2462 05fd 6F02     		.2byte	0x26f
 2463 05ff 00000000 		.4byte	.LFB66
 2464 0603 34000000 		.4byte	.LFE66-.LFB66
 2465 0607 01       		.uleb128 0x1
 2466 0608 9C       		.byte	0x9c
 2467 0609 1D060000 		.4byte	0x61d
 2468 060d 15       		.uleb128 0x15
 2469 060e 74696400 		.ascii	"tid\000"
 2470 0612 07       		.byte	0x7
 2471 0613 6F02     		.2byte	0x26f
 2472 0615 F3000000 		.4byte	0xf3
 2473 0619 02       		.uleb128 0x2
 2474 061a 91       		.byte	0x91
 2475 061b 74       		.sleb128 -12
 2476 061c 00       		.byte	0
 2477 061d 16       		.uleb128 0x16
 2478 061e F4060000 		.4byte	.LASF96
 2479 0622 07       		.byte	0x7
 2480 0623 8002     		.2byte	0x280
 2481 0625 00000000 		.4byte	.LFB67
 2482 0629 6C000000 		.4byte	.LFE67-.LFB67
 2483 062d 01       		.uleb128 0x1
 2484 062e 9C       		.byte	0x9c
 2485 062f 4F060000 		.4byte	0x64f
 2486 0633 1C       		.uleb128 0x1c
 2487 0634 3E060000 		.4byte	.LASF97
 2488 0638 07       		.byte	0x7
 2489 0639 8202     		.2byte	0x282
 2490 063b DC000000 		.4byte	0xdc
 2491 063f 01       		.uleb128 0x1
 2492 0640 55       		.byte	0x55
 2493 0641 1B       		.uleb128 0x1b
 2494 0642 727100   		.ascii	"rq\000"
 2495 0645 07       		.byte	0x7
 2496 0646 8202     		.2byte	0x282
 2497 0648 DC000000 		.4byte	0xdc
 2498 064c 01       		.uleb128 0x1
 2499 064d 54       		.byte	0x54
 2500 064e 00       		.byte	0
 2501 064f 1D       		.uleb128 0x1d
 2502 0650 95040000 		.4byte	.LASF107
 2503 0654 08       		.byte	0x8
 2504 0655 59       		.byte	0x59
 2505 0656 00000000 		.4byte	.LFB70
 2506 065a F4000000 		.4byte	.LFE70-.LFB70
 2507 065e 01       		.uleb128 0x1
 2508 065f 9C       		.byte	0x9c
 2509 0660 A8060000 		.4byte	0x6a8
 2510 0664 18       		.uleb128 0x18
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 110


 2511 0665 34040000 		.4byte	.LASF98
 2512 0669 08       		.byte	0x8
 2513 066a 59       		.byte	0x59
 2514 066b 17010000 		.4byte	0x117
 2515 066f 02       		.uleb128 0x2
 2516 0670 91       		.byte	0x91
 2517 0671 6C       		.sleb128 -20
 2518 0672 18       		.uleb128 0x18
 2519 0673 0D000000 		.4byte	.LASF99
 2520 0677 08       		.byte	0x8
 2521 0678 5A       		.byte	0x5a
 2522 0679 0B010000 		.4byte	0x10b
 2523 067d 02       		.uleb128 0x2
 2524 067e 91       		.byte	0x91
 2525 067f 68       		.sleb128 -24
 2526 0680 10       		.uleb128 0x10
 2527 0681 3E060000 		.4byte	.LASF97
 2528 0685 08       		.byte	0x8
 2529 0686 5C       		.byte	0x5c
 2530 0687 17010000 		.4byte	0x117
 2531 068b 01       		.uleb128 0x1
 2532 068c 54       		.byte	0x54
 2533 068d 10       		.uleb128 0x10
 2534 068e 61000000 		.4byte	.LASF100
 2535 0692 08       		.byte	0x8
 2536 0693 5C       		.byte	0x5c
 2537 0694 17010000 		.4byte	0x117
 2538 0698 01       		.uleb128 0x1
 2539 0699 55       		.byte	0x55
 2540 069a 1E       		.uleb128 0x1e
 2541 069b 63747200 		.ascii	"ctr\000"
 2542 069f 08       		.byte	0x8
 2543 06a0 5D       		.byte	0x5d
 2544 06a1 2F010000 		.4byte	0x12f
 2545 06a5 01       		.uleb128 0x1
 2546 06a6 55       		.byte	0x55
 2547 06a7 00       		.byte	0
 2548 06a8 13       		.uleb128 0x13
 2549 06a9 30020000 		.4byte	.LASF101
 2550 06ad 08       		.byte	0x8
 2551 06ae 8B       		.byte	0x8b
 2552 06af 00000000 		.4byte	.LFB71
 2553 06b3 4C000000 		.4byte	.LFE71-.LFB71
 2554 06b7 01       		.uleb128 0x1
 2555 06b8 9C       		.byte	0x9c
 2556 06b9 E5060000 		.4byte	0x6e5
 2557 06bd 18       		.uleb128 0x18
 2558 06be 17000000 		.4byte	.LASF102
 2559 06c2 08       		.byte	0x8
 2560 06c3 8C       		.byte	0x8c
 2561 06c4 F0060000 		.4byte	0x6f0
 2562 06c8 02       		.uleb128 0x2
 2563 06c9 91       		.byte	0x91
 2564 06ca 6C       		.sleb128 -20
 2565 06cb 1E       		.uleb128 0x1e
 2566 06cc 657600   		.ascii	"ev\000"
 2567 06cf 08       		.byte	0x8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 111


 2568 06d0 8F       		.byte	0x8f
 2569 06d1 15030000 		.4byte	0x315
 2570 06d5 01       		.uleb128 0x1
 2571 06d6 54       		.byte	0x54
 2572 06d7 10       		.uleb128 0x10
 2573 06d8 78090000 		.4byte	.LASF94
 2574 06dc 08       		.byte	0x8
 2575 06dd 92       		.byte	0x92
 2576 06de F3000000 		.4byte	0xf3
 2577 06e2 01       		.uleb128 0x1
 2578 06e3 54       		.byte	0x54
 2579 06e4 00       		.byte	0
 2580 06e5 05       		.uleb128 0x5
 2581 06e6 04       		.byte	0x4
 2582 06e7 EB060000 		.4byte	0x6eb
 2583 06eb 1F       		.uleb128 0x1f
 2584 06ec E6020000 		.4byte	0x2e6
 2585 06f0 1F       		.uleb128 0x1f
 2586 06f1 E5060000 		.4byte	0x6e5
 2587 06f5 13       		.uleb128 0x13
 2588 06f6 5D050000 		.4byte	.LASF103
 2589 06fa 08       		.byte	0x8
 2590 06fb D8       		.byte	0xd8
 2591 06fc 00000000 		.4byte	.LFB72
 2592 0700 98000000 		.4byte	.LFE72-.LFB72
 2593 0704 01       		.uleb128 0x1
 2594 0705 9C       		.byte	0x9c
 2595 0706 3F070000 		.4byte	0x73f
 2596 070a 18       		.uleb128 0x18
 2597 070b 17000000 		.4byte	.LASF102
 2598 070f 08       		.byte	0x8
 2599 0710 D9       		.byte	0xd9
 2600 0711 F0060000 		.4byte	0x6f0
 2601 0715 02       		.uleb128 0x2
 2602 0716 91       		.byte	0x91
 2603 0717 6C       		.sleb128 -20
 2604 0718 1E       		.uleb128 0x1e
 2605 0719 657600   		.ascii	"ev\000"
 2606 071c 08       		.byte	0x8
 2607 071d DC       		.byte	0xdc
 2608 071e 15030000 		.4byte	0x315
 2609 0722 01       		.uleb128 0x1
 2610 0723 54       		.byte	0x54
 2611 0724 10       		.uleb128 0x10
 2612 0725 78090000 		.4byte	.LASF94
 2613 0729 08       		.byte	0x8
 2614 072a DF       		.byte	0xdf
 2615 072b F3000000 		.4byte	0xf3
 2616 072f 01       		.uleb128 0x1
 2617 0730 54       		.byte	0x54
 2618 0731 10       		.uleb128 0x10
 2619 0732 B0080000 		.4byte	.LASF104
 2620 0736 08       		.byte	0x8
 2621 0737 E0       		.byte	0xe0
 2622 0738 FF000000 		.4byte	0xff
 2623 073c 01       		.uleb128 0x1
 2624 073d 55       		.byte	0x55
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 112


 2625 073e 00       		.byte	0
 2626 073f 16       		.uleb128 0x16
 2627 0740 60030000 		.4byte	.LASF105
 2628 0744 08       		.byte	0x8
 2629 0745 4C01     		.2byte	0x14c
 2630 0747 00000000 		.4byte	.LFB73
 2631 074b 1C000000 		.4byte	.LFE73-.LFB73
 2632 074f 01       		.uleb128 0x1
 2633 0750 9C       		.byte	0x9c
 2634 0751 65070000 		.4byte	0x765
 2635 0755 1A       		.uleb128 0x1a
 2636 0756 17000000 		.4byte	.LASF102
 2637 075a 08       		.byte	0x8
 2638 075b 4D01     		.2byte	0x14d
 2639 075d F0060000 		.4byte	0x6f0
 2640 0761 02       		.uleb128 0x2
 2641 0762 91       		.byte	0x91
 2642 0763 74       		.sleb128 -12
 2643 0764 00       		.byte	0
 2644 0765 16       		.uleb128 0x16
 2645 0766 82080000 		.4byte	.LASF106
 2646 076a 08       		.byte	0x8
 2647 076b 5601     		.2byte	0x156
 2648 076d 00000000 		.4byte	.LFB74
 2649 0771 4E000000 		.4byte	.LFE74-.LFB74
 2650 0775 01       		.uleb128 0x1
 2651 0776 9C       		.byte	0x9c
 2652 0777 8B070000 		.4byte	0x78b
 2653 077b 1A       		.uleb128 0x1a
 2654 077c 17000000 		.4byte	.LASF102
 2655 0780 08       		.byte	0x8
 2656 0781 5601     		.2byte	0x156
 2657 0783 F0060000 		.4byte	0x6f0
 2658 0787 02       		.uleb128 0x2
 2659 0788 91       		.byte	0x91
 2660 0789 74       		.sleb128 -12
 2661 078a 00       		.byte	0
 2662 078b 20       		.uleb128 0x20
 2663 078c 49020000 		.4byte	.LASF108
 2664 0790 08       		.byte	0x8
 2665 0791 2002     		.2byte	0x220
 2666 0793 00000000 		.4byte	.LFB75
 2667 0797 6C010000 		.4byte	.LFE75-.LFB75
 2668 079b 01       		.uleb128 0x1
 2669 079c 9C       		.byte	0x9c
 2670 079d E5070000 		.4byte	0x7e5
 2671 07a1 1A       		.uleb128 0x1a
 2672 07a2 A6080000 		.4byte	.LASF109
 2673 07a6 08       		.byte	0x8
 2674 07a7 2002     		.2byte	0x220
 2675 07a9 2F010000 		.4byte	0x12f
 2676 07ad 02       		.uleb128 0x2
 2677 07ae 91       		.byte	0x91
 2678 07af 64       		.sleb128 -28
 2679 07b0 1C       		.uleb128 0x1c
 2680 07b1 EB040000 		.4byte	.LASF110
 2681 07b5 08       		.byte	0x8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 113


 2682 07b6 2402     		.2byte	0x224
 2683 07b8 17010000 		.4byte	0x117
 2684 07bc 01       		.uleb128 0x1
 2685 07bd 54       		.byte	0x54
 2686 07be 21       		.uleb128 0x21
 2687 07bf 5E000000 		.4byte	.LBB2
 2688 07c3 D6000000 		.4byte	.LBE2-.LBB2
 2689 07c7 1C       		.uleb128 0x1c
 2690 07c8 3E060000 		.4byte	.LASF97
 2691 07cc 08       		.byte	0x8
 2692 07cd 3A02     		.2byte	0x23a
 2693 07cf 17010000 		.4byte	0x117
 2694 07d3 01       		.uleb128 0x1
 2695 07d4 55       		.byte	0x55
 2696 07d5 1C       		.uleb128 0x1c
 2697 07d6 61000000 		.4byte	.LASF100
 2698 07da 08       		.byte	0x8
 2699 07db 3C02     		.2byte	0x23c
 2700 07dd 17010000 		.4byte	0x117
 2701 07e1 01       		.uleb128 0x1
 2702 07e2 56       		.byte	0x56
 2703 07e3 00       		.byte	0
 2704 07e4 00       		.byte	0
 2705 07e5 22       		.uleb128 0x22
 2706 07e6 6A070000 		.4byte	.LASF112
 2707 07ea 08       		.byte	0x8
 2708 07eb 9702     		.2byte	0x297
 2709 07ed 15030000 		.4byte	0x315
 2710 07f1 00000000 		.4byte	.LFB76
 2711 07f5 26000000 		.4byte	.LFE76-.LFB76
 2712 07f9 01       		.uleb128 0x1
 2713 07fa 9C       		.byte	0x9c
 2714 07fb 2A080000 		.4byte	0x82a
 2715 07ff 1A       		.uleb128 0x1a
 2716 0800 A6080000 		.4byte	.LASF109
 2717 0804 08       		.byte	0x8
 2718 0805 9702     		.2byte	0x297
 2719 0807 2F010000 		.4byte	0x12f
 2720 080b 02       		.uleb128 0x2
 2721 080c 91       		.byte	0x91
 2722 080d 6C       		.sleb128 -20
 2723 080e 1B       		.uleb128 0x1b
 2724 080f 657600   		.ascii	"ev\000"
 2725 0812 08       		.byte	0x8
 2726 0813 9A02     		.2byte	0x29a
 2727 0815 15030000 		.4byte	0x315
 2728 0819 01       		.uleb128 0x1
 2729 081a 54       		.byte	0x54
 2730 081b 1C       		.uleb128 0x1c
 2731 081c 9E070000 		.4byte	.LASF111
 2732 0820 08       		.byte	0x8
 2733 0821 9C02     		.2byte	0x29c
 2734 0823 2A080000 		.4byte	0x82a
 2735 0827 01       		.uleb128 0x1
 2736 0828 55       		.byte	0x55
 2737 0829 00       		.byte	0
 2738 082a 1F       		.uleb128 0x1f
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 114


 2739 082b C6000000 		.4byte	0xc6
 2740 082f 22       		.uleb128 0x22
 2741 0830 F0050000 		.4byte	.LASF113
 2742 0834 08       		.byte	0x8
 2743 0835 BD02     		.2byte	0x2bd
 2744 0837 15030000 		.4byte	0x315
 2745 083b 00000000 		.4byte	.LFB77
 2746 083f 4E000000 		.4byte	.LFE77-.LFB77
 2747 0843 01       		.uleb128 0x1
 2748 0844 9C       		.byte	0x9c
 2749 0845 74080000 		.4byte	0x874
 2750 0849 1A       		.uleb128 0x1a
 2751 084a A6080000 		.4byte	.LASF109
 2752 084e 08       		.byte	0x8
 2753 084f BD02     		.2byte	0x2bd
 2754 0851 2F010000 		.4byte	0x12f
 2755 0855 02       		.uleb128 0x2
 2756 0856 91       		.byte	0x91
 2757 0857 6C       		.sleb128 -20
 2758 0858 1B       		.uleb128 0x1b
 2759 0859 657600   		.ascii	"ev\000"
 2760 085c 08       		.byte	0x8
 2761 085d C002     		.2byte	0x2c0
 2762 085f 15030000 		.4byte	0x315
 2763 0863 01       		.uleb128 0x1
 2764 0864 54       		.byte	0x54
 2765 0865 1C       		.uleb128 0x1c
 2766 0866 9E070000 		.4byte	.LASF111
 2767 086a 08       		.byte	0x8
 2768 086b C202     		.2byte	0x2c2
 2769 086d C6000000 		.4byte	0xc6
 2770 0871 01       		.uleb128 0x1
 2771 0872 55       		.byte	0x55
 2772 0873 00       		.byte	0
 2773 0874 23       		.uleb128 0x23
 2774 0875 A7090000 		.4byte	.LASF114
 2775 0879 02       		.byte	0x2
 2776 087a 44       		.byte	0x44
 2777 087b BB000000 		.4byte	0xbb
 2778 087f 23       		.uleb128 0x23
 2779 0880 31030000 		.4byte	.LASF115
 2780 0884 04       		.byte	0x4
 2781 0885 48       		.byte	0x48
 2782 0886 DC000000 		.4byte	0xdc
 2783 088a 24       		.uleb128 0x24
 2784 088b A1080000 		.4byte	0x8a1
 2785 088f 9A080000 		.4byte	0x89a
 2786 0893 25       		.uleb128 0x25
 2787 0894 9A080000 		.4byte	0x89a
 2788 0898 03       		.byte	0x3
 2789 0899 00       		.byte	0
 2790 089a 02       		.uleb128 0x2
 2791 089b 04       		.byte	0x4
 2792 089c 07       		.byte	0x7
 2793 089d 77050000 		.4byte	.LASF116
 2794 08a1 1F       		.uleb128 0x1f
 2795 08a2 BB000000 		.4byte	0xbb
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 115


 2796 08a6 23       		.uleb128 0x23
 2797 08a7 DA090000 		.4byte	.LASF117
 2798 08ab 05       		.byte	0x5
 2799 08ac B2       		.byte	0xb2
 2800 08ad B1080000 		.4byte	0x8b1
 2801 08b1 1F       		.uleb128 0x1f
 2802 08b2 8A080000 		.4byte	0x88a
 2803 08b6 23       		.uleb128 0x23
 2804 08b7 B1040000 		.4byte	.LASF118
 2805 08bb 05       		.byte	0x5
 2806 08bc B3       		.byte	0xb3
 2807 08bd C1080000 		.4byte	0x8c1
 2808 08c1 1F       		.uleb128 0x1f
 2809 08c2 8A080000 		.4byte	0x88a
 2810 08c6 24       		.uleb128 0x24
 2811 08c7 BB000000 		.4byte	0xbb
 2812 08cb D6080000 		.4byte	0x8d6
 2813 08cf 25       		.uleb128 0x25
 2814 08d0 9A080000 		.4byte	0x89a
 2815 08d4 03       		.byte	0x3
 2816 08d5 00       		.byte	0
 2817 08d6 23       		.uleb128 0x23
 2818 08d7 72040000 		.4byte	.LASF119
 2819 08db 05       		.byte	0x5
 2820 08dc CA       		.byte	0xca
 2821 08dd C6080000 		.4byte	0x8c6
 2822 08e1 24       		.uleb128 0x24
 2823 08e2 DC000000 		.4byte	0xdc
 2824 08e6 F1080000 		.4byte	0x8f1
 2825 08ea 25       		.uleb128 0x25
 2826 08eb 9A080000 		.4byte	0x89a
 2827 08ef 03       		.byte	0x3
 2828 08f0 00       		.byte	0
 2829 08f1 23       		.uleb128 0x23
 2830 08f2 39070000 		.4byte	.LASF120
 2831 08f6 05       		.byte	0x5
 2832 08f7 D2       		.byte	0xd2
 2833 08f8 E1080000 		.4byte	0x8e1
 2834 08fc 23       		.uleb128 0x23
 2835 08fd 48090000 		.4byte	.LASF121
 2836 0901 05       		.byte	0x5
 2837 0902 DA       		.byte	0xda
 2838 0903 C6080000 		.4byte	0x8c6
 2839 0907 23       		.uleb128 0x23
 2840 0908 C1030000 		.4byte	.LASF122
 2841 090c 05       		.byte	0x5
 2842 090d E2       		.byte	0xe2
 2843 090e DC000000 		.4byte	0xdc
 2844 0912 23       		.uleb128 0x23
 2845 0913 70060000 		.4byte	.LASF123
 2846 0917 05       		.byte	0x5
 2847 0918 F7       		.byte	0xf7
 2848 0919 BB000000 		.4byte	0xbb
 2849 091d 26       		.uleb128 0x26
 2850 091e F5070000 		.4byte	.LASF124
 2851 0922 05       		.byte	0x5
 2852 0923 3F01     		.2byte	0x13f
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 116


 2853 0925 E7000000 		.4byte	0xe7
 2854 0929 26       		.uleb128 0x26
 2855 092a 44070000 		.4byte	.LASF125
 2856 092e 05       		.byte	0x5
 2857 092f 5C01     		.2byte	0x15c
 2858 0931 C6080000 		.4byte	0x8c6
 2859 0935 26       		.uleb128 0x26
 2860 0936 89070000 		.4byte	.LASF126
 2861 093a 05       		.byte	0x5
 2862 093b 6101     		.2byte	0x161
 2863 093d C6080000 		.4byte	0x8c6
 2864 0941 24       		.uleb128 0x24
 2865 0942 D1000000 		.4byte	0xd1
 2866 0946 51090000 		.4byte	0x951
 2867 094a 25       		.uleb128 0x25
 2868 094b 9A080000 		.4byte	0x89a
 2869 094f 03       		.byte	0x3
 2870 0950 00       		.byte	0
 2871 0951 26       		.uleb128 0x26
 2872 0952 F3030000 		.4byte	.LASF127
 2873 0956 05       		.byte	0x5
 2874 0957 6701     		.2byte	0x167
 2875 0959 41090000 		.4byte	0x941
 2876 095d 24       		.uleb128 0x24
 2877 095e 6D090000 		.4byte	0x96d
 2878 0962 6D090000 		.4byte	0x96d
 2879 0966 25       		.uleb128 0x25
 2880 0967 9A080000 		.4byte	0x89a
 2881 096b 03       		.byte	0x3
 2882 096c 00       		.byte	0
 2883 096d 1F       		.uleb128 0x1f
 2884 096e D1000000 		.4byte	0xd1
 2885 0972 26       		.uleb128 0x26
 2886 0973 150A0000 		.4byte	.LASF128
 2887 0977 05       		.byte	0x5
 2888 0978 7401     		.2byte	0x174
 2889 097a 7E090000 		.4byte	0x97e
 2890 097e 1F       		.uleb128 0x1f
 2891 097f 5D090000 		.4byte	0x95d
 2892 0983 24       		.uleb128 0x24
 2893 0984 93090000 		.4byte	0x993
 2894 0988 93090000 		.4byte	0x993
 2895 098c 25       		.uleb128 0x25
 2896 098d 9A080000 		.4byte	0x89a
 2897 0991 00       		.byte	0
 2898 0992 00       		.byte	0
 2899 0993 1F       		.uleb128 0x1f
 2900 0994 6C010000 		.4byte	0x16c
 2901 0998 26       		.uleb128 0x26
 2902 0999 B4060000 		.4byte	.LASF129
 2903 099d 05       		.byte	0x5
 2904 099e CA02     		.2byte	0x2ca
 2905 09a0 A4090000 		.4byte	0x9a4
 2906 09a4 1F       		.uleb128 0x1f
 2907 09a5 83090000 		.4byte	0x983
 2908 09a9 24       		.uleb128 0x24
 2909 09aa B9090000 		.4byte	0x9b9
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 117


 2910 09ae B9090000 		.4byte	0x9b9
 2911 09b2 25       		.uleb128 0x25
 2912 09b3 9A080000 		.4byte	0x89a
 2913 09b7 00       		.byte	0
 2914 09b8 00       		.byte	0
 2915 09b9 1F       		.uleb128 0x1f
 2916 09ba 09020000 		.4byte	0x209
 2917 09be 26       		.uleb128 0x26
 2918 09bf F3040000 		.4byte	.LASF130
 2919 09c3 05       		.byte	0x5
 2920 09c4 DD02     		.2byte	0x2dd
 2921 09c6 CA090000 		.4byte	0x9ca
 2922 09ca 1F       		.uleb128 0x1f
 2923 09cb A9090000 		.4byte	0x9a9
 2924 09cf 24       		.uleb128 0x24
 2925 09d0 EB060000 		.4byte	0x6eb
 2926 09d4 DF090000 		.4byte	0x9df
 2927 09d8 25       		.uleb128 0x25
 2928 09d9 9A080000 		.4byte	0x89a
 2929 09dd 00       		.byte	0
 2930 09de 00       		.byte	0
 2931 09df 26       		.uleb128 0x26
 2932 09e0 16050000 		.4byte	.LASF131
 2933 09e4 05       		.byte	0x5
 2934 09e5 E602     		.2byte	0x2e6
 2935 09e7 EB090000 		.4byte	0x9eb
 2936 09eb 1F       		.uleb128 0x1f
 2937 09ec CF090000 		.4byte	0x9cf
 2938 09f0 24       		.uleb128 0x24
 2939 09f1 000A0000 		.4byte	0xa00
 2940 09f5 000A0000 		.4byte	0xa00
 2941 09f9 25       		.uleb128 0x25
 2942 09fa 9A080000 		.4byte	0x89a
 2943 09fe 00       		.byte	0
 2944 09ff 00       		.byte	0
 2945 0a00 1F       		.uleb128 0x1f
 2946 0a01 09030000 		.4byte	0x309
 2947 0a05 26       		.uleb128 0x26
 2948 0a06 DB010000 		.4byte	.LASF132
 2949 0a0a 05       		.byte	0x5
 2950 0a0b EE02     		.2byte	0x2ee
 2951 0a0d 110A0000 		.4byte	0xa11
 2952 0a11 1F       		.uleb128 0x1f
 2953 0a12 F0090000 		.4byte	0x9f0
 2954 0a16 24       		.uleb128 0x24
 2955 0a17 9C010000 		.4byte	0x19c
 2956 0a1b 260A0000 		.4byte	0xa26
 2957 0a1f 25       		.uleb128 0x25
 2958 0a20 9A080000 		.4byte	0x89a
 2959 0a24 00       		.byte	0
 2960 0a25 00       		.byte	0
 2961 0a26 26       		.uleb128 0x26
 2962 0a27 6B080000 		.4byte	.LASF133
 2963 0a2b 05       		.byte	0x5
 2964 0a2c FB02     		.2byte	0x2fb
 2965 0a2e 160A0000 		.4byte	0xa16
 2966 0a32 24       		.uleb128 0x24
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 118


 2967 0a33 53020000 		.4byte	0x253
 2968 0a37 420A0000 		.4byte	0xa42
 2969 0a3b 25       		.uleb128 0x25
 2970 0a3c 9A080000 		.4byte	0x89a
 2971 0a40 00       		.byte	0
 2972 0a41 00       		.byte	0
 2973 0a42 26       		.uleb128 0x26
 2974 0a43 46010000 		.4byte	.LASF134
 2975 0a47 05       		.byte	0x5
 2976 0a48 0403     		.2byte	0x304
 2977 0a4a 320A0000 		.4byte	0xa32
 2978 0a4e 23       		.uleb128 0x23
 2979 0a4f 1C040000 		.4byte	.LASF135
 2980 0a53 0A       		.byte	0xa
 2981 0a54 40       		.byte	0x40
 2982 0a55 BB000000 		.4byte	0xbb
 2983 0a59 23       		.uleb128 0x23
 2984 0a5a 18030000 		.4byte	.LASF136
 2985 0a5e 0A       		.byte	0xa
 2986 0a5f 47       		.byte	0x47
 2987 0a60 C6000000 		.4byte	0xc6
 2988 0a64 23       		.uleb128 0x23
 2989 0a65 A3050000 		.4byte	.LASF137
 2990 0a69 0A       		.byte	0xa
 2991 0a6a 4A       		.byte	0x4a
 2992 0a6b BB000000 		.4byte	0xbb
 2993 0a6f 24       		.uleb128 0x24
 2994 0a70 7F0A0000 		.4byte	0xa7f
 2995 0a74 7F0A0000 		.4byte	0xa7f
 2996 0a78 25       		.uleb128 0x25
 2997 0a79 9A080000 		.4byte	0x89a
 2998 0a7d FF       		.byte	0xff
 2999 0a7e 00       		.byte	0
 3000 0a7f 1F       		.uleb128 0x1f
 3001 0a80 7D000000 		.4byte	0x7d
 3002 0a84 26       		.uleb128 0x26
 3003 0a85 E8010000 		.4byte	.LASF138
 3004 0a89 07       		.byte	0x7
 3005 0a8a AB01     		.2byte	0x1ab
 3006 0a8c 900A0000 		.4byte	0xa90
 3007 0a90 1F       		.uleb128 0x1f
 3008 0a91 6F0A0000 		.4byte	0xa6f
 3009 0a95 00       		.byte	0
 3010              		.section	.debug_abbrev,"",%progbits
 3011              	.Ldebug_abbrev0:
 3012 0000 01       		.uleb128 0x1
 3013 0001 11       		.uleb128 0x11
 3014 0002 01       		.byte	0x1
 3015 0003 25       		.uleb128 0x25
 3016 0004 0E       		.uleb128 0xe
 3017 0005 13       		.uleb128 0x13
 3018 0006 0B       		.uleb128 0xb
 3019 0007 03       		.uleb128 0x3
 3020 0008 0E       		.uleb128 0xe
 3021 0009 1B       		.uleb128 0x1b
 3022 000a 0E       		.uleb128 0xe
 3023 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 119


 3024 000c 17       		.uleb128 0x17
 3025 000d 11       		.uleb128 0x11
 3026 000e 01       		.uleb128 0x1
 3027 000f 10       		.uleb128 0x10
 3028 0010 17       		.uleb128 0x17
 3029 0011 00       		.byte	0
 3030 0012 00       		.byte	0
 3031 0013 02       		.uleb128 0x2
 3032 0014 24       		.uleb128 0x24
 3033 0015 00       		.byte	0
 3034 0016 0B       		.uleb128 0xb
 3035 0017 0B       		.uleb128 0xb
 3036 0018 3E       		.uleb128 0x3e
 3037 0019 0B       		.uleb128 0xb
 3038 001a 03       		.uleb128 0x3
 3039 001b 0E       		.uleb128 0xe
 3040 001c 00       		.byte	0
 3041 001d 00       		.byte	0
 3042 001e 03       		.uleb128 0x3
 3043 001f 24       		.uleb128 0x24
 3044 0020 00       		.byte	0
 3045 0021 0B       		.uleb128 0xb
 3046 0022 0B       		.uleb128 0xb
 3047 0023 3E       		.uleb128 0x3e
 3048 0024 0B       		.uleb128 0xb
 3049 0025 03       		.uleb128 0x3
 3050 0026 08       		.uleb128 0x8
 3051 0027 00       		.byte	0
 3052 0028 00       		.byte	0
 3053 0029 04       		.uleb128 0x4
 3054 002a 16       		.uleb128 0x16
 3055 002b 00       		.byte	0
 3056 002c 03       		.uleb128 0x3
 3057 002d 0E       		.uleb128 0xe
 3058 002e 3A       		.uleb128 0x3a
 3059 002f 0B       		.uleb128 0xb
 3060 0030 3B       		.uleb128 0x3b
 3061 0031 0B       		.uleb128 0xb
 3062 0032 49       		.uleb128 0x49
 3063 0033 13       		.uleb128 0x13
 3064 0034 00       		.byte	0
 3065 0035 00       		.byte	0
 3066 0036 05       		.uleb128 0x5
 3067 0037 0F       		.uleb128 0xf
 3068 0038 00       		.byte	0
 3069 0039 0B       		.uleb128 0xb
 3070 003a 0B       		.uleb128 0xb
 3071 003b 49       		.uleb128 0x49
 3072 003c 13       		.uleb128 0x13
 3073 003d 00       		.byte	0
 3074 003e 00       		.byte	0
 3075 003f 06       		.uleb128 0x6
 3076 0040 15       		.uleb128 0x15
 3077 0041 00       		.byte	0
 3078 0042 27       		.uleb128 0x27
 3079 0043 19       		.uleb128 0x19
 3080 0044 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 120


 3081 0045 00       		.byte	0
 3082 0046 07       		.uleb128 0x7
 3083 0047 16       		.uleb128 0x16
 3084 0048 00       		.byte	0
 3085 0049 03       		.uleb128 0x3
 3086 004a 0E       		.uleb128 0xe
 3087 004b 3A       		.uleb128 0x3a
 3088 004c 0B       		.uleb128 0xb
 3089 004d 3B       		.uleb128 0x3b
 3090 004e 05       		.uleb128 0x5
 3091 004f 49       		.uleb128 0x49
 3092 0050 13       		.uleb128 0x13
 3093 0051 00       		.byte	0
 3094 0052 00       		.byte	0
 3095 0053 08       		.uleb128 0x8
 3096 0054 13       		.uleb128 0x13
 3097 0055 01       		.byte	0x1
 3098 0056 0B       		.uleb128 0xb
 3099 0057 0B       		.uleb128 0xb
 3100 0058 3A       		.uleb128 0x3a
 3101 0059 0B       		.uleb128 0xb
 3102 005a 3B       		.uleb128 0x3b
 3103 005b 05       		.uleb128 0x5
 3104 005c 01       		.uleb128 0x1
 3105 005d 13       		.uleb128 0x13
 3106 005e 00       		.byte	0
 3107 005f 00       		.byte	0
 3108 0060 09       		.uleb128 0x9
 3109 0061 0D       		.uleb128 0xd
 3110 0062 00       		.byte	0
 3111 0063 03       		.uleb128 0x3
 3112 0064 0E       		.uleb128 0xe
 3113 0065 3A       		.uleb128 0x3a
 3114 0066 0B       		.uleb128 0xb
 3115 0067 3B       		.uleb128 0x3b
 3116 0068 05       		.uleb128 0x5
 3117 0069 49       		.uleb128 0x49
 3118 006a 13       		.uleb128 0x13
 3119 006b 38       		.uleb128 0x38
 3120 006c 0B       		.uleb128 0xb
 3121 006d 00       		.byte	0
 3122 006e 00       		.byte	0
 3123 006f 0A       		.uleb128 0xa
 3124 0070 04       		.uleb128 0x4
 3125 0071 01       		.byte	0x1
 3126 0072 0B       		.uleb128 0xb
 3127 0073 0B       		.uleb128 0xb
 3128 0074 49       		.uleb128 0x49
 3129 0075 13       		.uleb128 0x13
 3130 0076 3A       		.uleb128 0x3a
 3131 0077 0B       		.uleb128 0xb
 3132 0078 3B       		.uleb128 0x3b
 3133 0079 05       		.uleb128 0x5
 3134 007a 01       		.uleb128 0x1
 3135 007b 13       		.uleb128 0x13
 3136 007c 00       		.byte	0
 3137 007d 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 121


 3138 007e 0B       		.uleb128 0xb
 3139 007f 28       		.uleb128 0x28
 3140 0080 00       		.byte	0
 3141 0081 03       		.uleb128 0x3
 3142 0082 0E       		.uleb128 0xe
 3143 0083 1C       		.uleb128 0x1c
 3144 0084 0B       		.uleb128 0xb
 3145 0085 00       		.byte	0
 3146 0086 00       		.byte	0
 3147 0087 0C       		.uleb128 0xc
 3148 0088 0D       		.uleb128 0xd
 3149 0089 00       		.byte	0
 3150 008a 03       		.uleb128 0x3
 3151 008b 08       		.uleb128 0x8
 3152 008c 3A       		.uleb128 0x3a
 3153 008d 0B       		.uleb128 0xb
 3154 008e 3B       		.uleb128 0x3b
 3155 008f 05       		.uleb128 0x5
 3156 0090 49       		.uleb128 0x49
 3157 0091 13       		.uleb128 0x13
 3158 0092 38       		.uleb128 0x38
 3159 0093 0B       		.uleb128 0xb
 3160 0094 00       		.byte	0
 3161 0095 00       		.byte	0
 3162 0096 0D       		.uleb128 0xd
 3163 0097 2E       		.uleb128 0x2e
 3164 0098 01       		.byte	0x1
 3165 0099 03       		.uleb128 0x3
 3166 009a 0E       		.uleb128 0xe
 3167 009b 3A       		.uleb128 0x3a
 3168 009c 0B       		.uleb128 0xb
 3169 009d 3B       		.uleb128 0x3b
 3170 009e 0B       		.uleb128 0xb
 3171 009f 27       		.uleb128 0x27
 3172 00a0 19       		.uleb128 0x19
 3173 00a1 11       		.uleb128 0x11
 3174 00a2 01       		.uleb128 0x1
 3175 00a3 12       		.uleb128 0x12
 3176 00a4 06       		.uleb128 0x6
 3177 00a5 40       		.uleb128 0x40
 3178 00a6 18       		.uleb128 0x18
 3179 00a7 9742     		.uleb128 0x2117
 3180 00a9 19       		.uleb128 0x19
 3181 00aa 01       		.uleb128 0x1
 3182 00ab 13       		.uleb128 0x13
 3183 00ac 00       		.byte	0
 3184 00ad 00       		.byte	0
 3185 00ae 0E       		.uleb128 0xe
 3186 00af 05       		.uleb128 0x5
 3187 00b0 00       		.byte	0
 3188 00b1 03       		.uleb128 0x3
 3189 00b2 08       		.uleb128 0x8
 3190 00b3 3A       		.uleb128 0x3a
 3191 00b4 0B       		.uleb128 0xb
 3192 00b5 3B       		.uleb128 0x3b
 3193 00b6 0B       		.uleb128 0xb
 3194 00b7 49       		.uleb128 0x49
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 122


 3195 00b8 13       		.uleb128 0x13
 3196 00b9 02       		.uleb128 0x2
 3197 00ba 18       		.uleb128 0x18
 3198 00bb 00       		.byte	0
 3199 00bc 00       		.byte	0
 3200 00bd 0F       		.uleb128 0xf
 3201 00be 2E       		.uleb128 0x2e
 3202 00bf 01       		.byte	0x1
 3203 00c0 03       		.uleb128 0x3
 3204 00c1 0E       		.uleb128 0xe
 3205 00c2 3A       		.uleb128 0x3a
 3206 00c3 0B       		.uleb128 0xb
 3207 00c4 3B       		.uleb128 0x3b
 3208 00c5 0B       		.uleb128 0xb
 3209 00c6 27       		.uleb128 0x27
 3210 00c7 19       		.uleb128 0x19
 3211 00c8 49       		.uleb128 0x49
 3212 00c9 13       		.uleb128 0x13
 3213 00ca 11       		.uleb128 0x11
 3214 00cb 01       		.uleb128 0x1
 3215 00cc 12       		.uleb128 0x12
 3216 00cd 06       		.uleb128 0x6
 3217 00ce 40       		.uleb128 0x40
 3218 00cf 18       		.uleb128 0x18
 3219 00d0 9742     		.uleb128 0x2117
 3220 00d2 19       		.uleb128 0x19
 3221 00d3 01       		.uleb128 0x1
 3222 00d4 13       		.uleb128 0x13
 3223 00d5 00       		.byte	0
 3224 00d6 00       		.byte	0
 3225 00d7 10       		.uleb128 0x10
 3226 00d8 34       		.uleb128 0x34
 3227 00d9 00       		.byte	0
 3228 00da 03       		.uleb128 0x3
 3229 00db 0E       		.uleb128 0xe
 3230 00dc 3A       		.uleb128 0x3a
 3231 00dd 0B       		.uleb128 0xb
 3232 00de 3B       		.uleb128 0x3b
 3233 00df 0B       		.uleb128 0xb
 3234 00e0 49       		.uleb128 0x49
 3235 00e1 13       		.uleb128 0x13
 3236 00e2 02       		.uleb128 0x2
 3237 00e3 18       		.uleb128 0x18
 3238 00e4 00       		.byte	0
 3239 00e5 00       		.byte	0
 3240 00e6 11       		.uleb128 0x11
 3241 00e7 2E       		.uleb128 0x2e
 3242 00e8 00       		.byte	0
 3243 00e9 03       		.uleb128 0x3
 3244 00ea 0E       		.uleb128 0xe
 3245 00eb 3A       		.uleb128 0x3a
 3246 00ec 0B       		.uleb128 0xb
 3247 00ed 3B       		.uleb128 0x3b
 3248 00ee 0B       		.uleb128 0xb
 3249 00ef 27       		.uleb128 0x27
 3250 00f0 19       		.uleb128 0x19
 3251 00f1 49       		.uleb128 0x49
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 123


 3252 00f2 13       		.uleb128 0x13
 3253 00f3 11       		.uleb128 0x11
 3254 00f4 01       		.uleb128 0x1
 3255 00f5 12       		.uleb128 0x12
 3256 00f6 06       		.uleb128 0x6
 3257 00f7 40       		.uleb128 0x40
 3258 00f8 18       		.uleb128 0x18
 3259 00f9 9742     		.uleb128 0x2117
 3260 00fb 19       		.uleb128 0x19
 3261 00fc 00       		.byte	0
 3262 00fd 00       		.byte	0
 3263 00fe 12       		.uleb128 0x12
 3264 00ff 2E       		.uleb128 0x2e
 3265 0100 00       		.byte	0
 3266 0101 03       		.uleb128 0x3
 3267 0102 0E       		.uleb128 0xe
 3268 0103 3A       		.uleb128 0x3a
 3269 0104 0B       		.uleb128 0xb
 3270 0105 3B       		.uleb128 0x3b
 3271 0106 0B       		.uleb128 0xb
 3272 0107 27       		.uleb128 0x27
 3273 0108 19       		.uleb128 0x19
 3274 0109 49       		.uleb128 0x49
 3275 010a 13       		.uleb128 0x13
 3276 010b 11       		.uleb128 0x11
 3277 010c 01       		.uleb128 0x1
 3278 010d 12       		.uleb128 0x12
 3279 010e 06       		.uleb128 0x6
 3280 010f 40       		.uleb128 0x40
 3281 0110 18       		.uleb128 0x18
 3282 0111 9642     		.uleb128 0x2116
 3283 0113 19       		.uleb128 0x19
 3284 0114 00       		.byte	0
 3285 0115 00       		.byte	0
 3286 0116 13       		.uleb128 0x13
 3287 0117 2E       		.uleb128 0x2e
 3288 0118 01       		.byte	0x1
 3289 0119 03       		.uleb128 0x3
 3290 011a 0E       		.uleb128 0xe
 3291 011b 3A       		.uleb128 0x3a
 3292 011c 0B       		.uleb128 0xb
 3293 011d 3B       		.uleb128 0x3b
 3294 011e 0B       		.uleb128 0xb
 3295 011f 27       		.uleb128 0x27
 3296 0120 19       		.uleb128 0x19
 3297 0121 11       		.uleb128 0x11
 3298 0122 01       		.uleb128 0x1
 3299 0123 12       		.uleb128 0x12
 3300 0124 06       		.uleb128 0x6
 3301 0125 40       		.uleb128 0x40
 3302 0126 18       		.uleb128 0x18
 3303 0127 9642     		.uleb128 0x2116
 3304 0129 19       		.uleb128 0x19
 3305 012a 01       		.uleb128 0x1
 3306 012b 13       		.uleb128 0x13
 3307 012c 00       		.byte	0
 3308 012d 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 124


 3309 012e 14       		.uleb128 0x14
 3310 012f 2E       		.uleb128 0x2e
 3311 0130 01       		.byte	0x1
 3312 0131 03       		.uleb128 0x3
 3313 0132 0E       		.uleb128 0xe
 3314 0133 3A       		.uleb128 0x3a
 3315 0134 0B       		.uleb128 0xb
 3316 0135 3B       		.uleb128 0x3b
 3317 0136 05       		.uleb128 0x5
 3318 0137 27       		.uleb128 0x27
 3319 0138 19       		.uleb128 0x19
 3320 0139 11       		.uleb128 0x11
 3321 013a 01       		.uleb128 0x1
 3322 013b 12       		.uleb128 0x12
 3323 013c 06       		.uleb128 0x6
 3324 013d 40       		.uleb128 0x40
 3325 013e 18       		.uleb128 0x18
 3326 013f 9742     		.uleb128 0x2117
 3327 0141 19       		.uleb128 0x19
 3328 0142 01       		.uleb128 0x1
 3329 0143 13       		.uleb128 0x13
 3330 0144 00       		.byte	0
 3331 0145 00       		.byte	0
 3332 0146 15       		.uleb128 0x15
 3333 0147 05       		.uleb128 0x5
 3334 0148 00       		.byte	0
 3335 0149 03       		.uleb128 0x3
 3336 014a 08       		.uleb128 0x8
 3337 014b 3A       		.uleb128 0x3a
 3338 014c 0B       		.uleb128 0xb
 3339 014d 3B       		.uleb128 0x3b
 3340 014e 05       		.uleb128 0x5
 3341 014f 49       		.uleb128 0x49
 3342 0150 13       		.uleb128 0x13
 3343 0151 02       		.uleb128 0x2
 3344 0152 18       		.uleb128 0x18
 3345 0153 00       		.byte	0
 3346 0154 00       		.byte	0
 3347 0155 16       		.uleb128 0x16
 3348 0156 2E       		.uleb128 0x2e
 3349 0157 01       		.byte	0x1
 3350 0158 03       		.uleb128 0x3
 3351 0159 0E       		.uleb128 0xe
 3352 015a 3A       		.uleb128 0x3a
 3353 015b 0B       		.uleb128 0xb
 3354 015c 3B       		.uleb128 0x3b
 3355 015d 05       		.uleb128 0x5
 3356 015e 27       		.uleb128 0x27
 3357 015f 19       		.uleb128 0x19
 3358 0160 11       		.uleb128 0x11
 3359 0161 01       		.uleb128 0x1
 3360 0162 12       		.uleb128 0x12
 3361 0163 06       		.uleb128 0x6
 3362 0164 40       		.uleb128 0x40
 3363 0165 18       		.uleb128 0x18
 3364 0166 9642     		.uleb128 0x2116
 3365 0168 19       		.uleb128 0x19
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 125


 3366 0169 01       		.uleb128 0x1
 3367 016a 13       		.uleb128 0x13
 3368 016b 00       		.byte	0
 3369 016c 00       		.byte	0
 3370 016d 17       		.uleb128 0x17
 3371 016e 2E       		.uleb128 0x2e
 3372 016f 00       		.byte	0
 3373 0170 03       		.uleb128 0x3
 3374 0171 0E       		.uleb128 0xe
 3375 0172 3A       		.uleb128 0x3a
 3376 0173 0B       		.uleb128 0xb
 3377 0174 3B       		.uleb128 0x3b
 3378 0175 05       		.uleb128 0x5
 3379 0176 27       		.uleb128 0x27
 3380 0177 19       		.uleb128 0x19
 3381 0178 11       		.uleb128 0x11
 3382 0179 01       		.uleb128 0x1
 3383 017a 12       		.uleb128 0x12
 3384 017b 06       		.uleb128 0x6
 3385 017c 40       		.uleb128 0x40
 3386 017d 18       		.uleb128 0x18
 3387 017e 9742     		.uleb128 0x2117
 3388 0180 19       		.uleb128 0x19
 3389 0181 00       		.byte	0
 3390 0182 00       		.byte	0
 3391 0183 18       		.uleb128 0x18
 3392 0184 05       		.uleb128 0x5
 3393 0185 00       		.byte	0
 3394 0186 03       		.uleb128 0x3
 3395 0187 0E       		.uleb128 0xe
 3396 0188 3A       		.uleb128 0x3a
 3397 0189 0B       		.uleb128 0xb
 3398 018a 3B       		.uleb128 0x3b
 3399 018b 0B       		.uleb128 0xb
 3400 018c 49       		.uleb128 0x49
 3401 018d 13       		.uleb128 0x13
 3402 018e 02       		.uleb128 0x2
 3403 018f 18       		.uleb128 0x18
 3404 0190 00       		.byte	0
 3405 0191 00       		.byte	0
 3406 0192 19       		.uleb128 0x19
 3407 0193 2E       		.uleb128 0x2e
 3408 0194 00       		.byte	0
 3409 0195 03       		.uleb128 0x3
 3410 0196 0E       		.uleb128 0xe
 3411 0197 3A       		.uleb128 0x3a
 3412 0198 0B       		.uleb128 0xb
 3413 0199 3B       		.uleb128 0x3b
 3414 019a 05       		.uleb128 0x5
 3415 019b 27       		.uleb128 0x27
 3416 019c 19       		.uleb128 0x19
 3417 019d 11       		.uleb128 0x11
 3418 019e 01       		.uleb128 0x1
 3419 019f 12       		.uleb128 0x12
 3420 01a0 06       		.uleb128 0x6
 3421 01a1 40       		.uleb128 0x40
 3422 01a2 18       		.uleb128 0x18
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 126


 3423 01a3 9642     		.uleb128 0x2116
 3424 01a5 19       		.uleb128 0x19
 3425 01a6 00       		.byte	0
 3426 01a7 00       		.byte	0
 3427 01a8 1A       		.uleb128 0x1a
 3428 01a9 05       		.uleb128 0x5
 3429 01aa 00       		.byte	0
 3430 01ab 03       		.uleb128 0x3
 3431 01ac 0E       		.uleb128 0xe
 3432 01ad 3A       		.uleb128 0x3a
 3433 01ae 0B       		.uleb128 0xb
 3434 01af 3B       		.uleb128 0x3b
 3435 01b0 05       		.uleb128 0x5
 3436 01b1 49       		.uleb128 0x49
 3437 01b2 13       		.uleb128 0x13
 3438 01b3 02       		.uleb128 0x2
 3439 01b4 18       		.uleb128 0x18
 3440 01b5 00       		.byte	0
 3441 01b6 00       		.byte	0
 3442 01b7 1B       		.uleb128 0x1b
 3443 01b8 34       		.uleb128 0x34
 3444 01b9 00       		.byte	0
 3445 01ba 03       		.uleb128 0x3
 3446 01bb 08       		.uleb128 0x8
 3447 01bc 3A       		.uleb128 0x3a
 3448 01bd 0B       		.uleb128 0xb
 3449 01be 3B       		.uleb128 0x3b
 3450 01bf 05       		.uleb128 0x5
 3451 01c0 49       		.uleb128 0x49
 3452 01c1 13       		.uleb128 0x13
 3453 01c2 02       		.uleb128 0x2
 3454 01c3 18       		.uleb128 0x18
 3455 01c4 00       		.byte	0
 3456 01c5 00       		.byte	0
 3457 01c6 1C       		.uleb128 0x1c
 3458 01c7 34       		.uleb128 0x34
 3459 01c8 00       		.byte	0
 3460 01c9 03       		.uleb128 0x3
 3461 01ca 0E       		.uleb128 0xe
 3462 01cb 3A       		.uleb128 0x3a
 3463 01cc 0B       		.uleb128 0xb
 3464 01cd 3B       		.uleb128 0x3b
 3465 01ce 05       		.uleb128 0x5
 3466 01cf 49       		.uleb128 0x49
 3467 01d0 13       		.uleb128 0x13
 3468 01d1 02       		.uleb128 0x2
 3469 01d2 18       		.uleb128 0x18
 3470 01d3 00       		.byte	0
 3471 01d4 00       		.byte	0
 3472 01d5 1D       		.uleb128 0x1d
 3473 01d6 2E       		.uleb128 0x2e
 3474 01d7 01       		.byte	0x1
 3475 01d8 3F       		.uleb128 0x3f
 3476 01d9 19       		.uleb128 0x19
 3477 01da 03       		.uleb128 0x3
 3478 01db 0E       		.uleb128 0xe
 3479 01dc 3A       		.uleb128 0x3a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 127


 3480 01dd 0B       		.uleb128 0xb
 3481 01de 3B       		.uleb128 0x3b
 3482 01df 0B       		.uleb128 0xb
 3483 01e0 27       		.uleb128 0x27
 3484 01e1 19       		.uleb128 0x19
 3485 01e2 11       		.uleb128 0x11
 3486 01e3 01       		.uleb128 0x1
 3487 01e4 12       		.uleb128 0x12
 3488 01e5 06       		.uleb128 0x6
 3489 01e6 40       		.uleb128 0x40
 3490 01e7 18       		.uleb128 0x18
 3491 01e8 9742     		.uleb128 0x2117
 3492 01ea 19       		.uleb128 0x19
 3493 01eb 01       		.uleb128 0x1
 3494 01ec 13       		.uleb128 0x13
 3495 01ed 00       		.byte	0
 3496 01ee 00       		.byte	0
 3497 01ef 1E       		.uleb128 0x1e
 3498 01f0 34       		.uleb128 0x34
 3499 01f1 00       		.byte	0
 3500 01f2 03       		.uleb128 0x3
 3501 01f3 08       		.uleb128 0x8
 3502 01f4 3A       		.uleb128 0x3a
 3503 01f5 0B       		.uleb128 0xb
 3504 01f6 3B       		.uleb128 0x3b
 3505 01f7 0B       		.uleb128 0xb
 3506 01f8 49       		.uleb128 0x49
 3507 01f9 13       		.uleb128 0x13
 3508 01fa 02       		.uleb128 0x2
 3509 01fb 18       		.uleb128 0x18
 3510 01fc 00       		.byte	0
 3511 01fd 00       		.byte	0
 3512 01fe 1F       		.uleb128 0x1f
 3513 01ff 26       		.uleb128 0x26
 3514 0200 00       		.byte	0
 3515 0201 49       		.uleb128 0x49
 3516 0202 13       		.uleb128 0x13
 3517 0203 00       		.byte	0
 3518 0204 00       		.byte	0
 3519 0205 20       		.uleb128 0x20
 3520 0206 2E       		.uleb128 0x2e
 3521 0207 01       		.byte	0x1
 3522 0208 3F       		.uleb128 0x3f
 3523 0209 19       		.uleb128 0x19
 3524 020a 03       		.uleb128 0x3
 3525 020b 0E       		.uleb128 0xe
 3526 020c 3A       		.uleb128 0x3a
 3527 020d 0B       		.uleb128 0xb
 3528 020e 3B       		.uleb128 0x3b
 3529 020f 05       		.uleb128 0x5
 3530 0210 27       		.uleb128 0x27
 3531 0211 19       		.uleb128 0x19
 3532 0212 11       		.uleb128 0x11
 3533 0213 01       		.uleb128 0x1
 3534 0214 12       		.uleb128 0x12
 3535 0215 06       		.uleb128 0x6
 3536 0216 40       		.uleb128 0x40
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 128


 3537 0217 18       		.uleb128 0x18
 3538 0218 9642     		.uleb128 0x2116
 3539 021a 19       		.uleb128 0x19
 3540 021b 01       		.uleb128 0x1
 3541 021c 13       		.uleb128 0x13
 3542 021d 00       		.byte	0
 3543 021e 00       		.byte	0
 3544 021f 21       		.uleb128 0x21
 3545 0220 0B       		.uleb128 0xb
 3546 0221 01       		.byte	0x1
 3547 0222 11       		.uleb128 0x11
 3548 0223 01       		.uleb128 0x1
 3549 0224 12       		.uleb128 0x12
 3550 0225 06       		.uleb128 0x6
 3551 0226 00       		.byte	0
 3552 0227 00       		.byte	0
 3553 0228 22       		.uleb128 0x22
 3554 0229 2E       		.uleb128 0x2e
 3555 022a 01       		.byte	0x1
 3556 022b 3F       		.uleb128 0x3f
 3557 022c 19       		.uleb128 0x19
 3558 022d 03       		.uleb128 0x3
 3559 022e 0E       		.uleb128 0xe
 3560 022f 3A       		.uleb128 0x3a
 3561 0230 0B       		.uleb128 0xb
 3562 0231 3B       		.uleb128 0x3b
 3563 0232 05       		.uleb128 0x5
 3564 0233 27       		.uleb128 0x27
 3565 0234 19       		.uleb128 0x19
 3566 0235 49       		.uleb128 0x49
 3567 0236 13       		.uleb128 0x13
 3568 0237 11       		.uleb128 0x11
 3569 0238 01       		.uleb128 0x1
 3570 0239 12       		.uleb128 0x12
 3571 023a 06       		.uleb128 0x6
 3572 023b 40       		.uleb128 0x40
 3573 023c 18       		.uleb128 0x18
 3574 023d 9642     		.uleb128 0x2116
 3575 023f 19       		.uleb128 0x19
 3576 0240 01       		.uleb128 0x1
 3577 0241 13       		.uleb128 0x13
 3578 0242 00       		.byte	0
 3579 0243 00       		.byte	0
 3580 0244 23       		.uleb128 0x23
 3581 0245 34       		.uleb128 0x34
 3582 0246 00       		.byte	0
 3583 0247 03       		.uleb128 0x3
 3584 0248 0E       		.uleb128 0xe
 3585 0249 3A       		.uleb128 0x3a
 3586 024a 0B       		.uleb128 0xb
 3587 024b 3B       		.uleb128 0x3b
 3588 024c 0B       		.uleb128 0xb
 3589 024d 49       		.uleb128 0x49
 3590 024e 13       		.uleb128 0x13
 3591 024f 3F       		.uleb128 0x3f
 3592 0250 19       		.uleb128 0x19
 3593 0251 3C       		.uleb128 0x3c
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 129


 3594 0252 19       		.uleb128 0x19
 3595 0253 00       		.byte	0
 3596 0254 00       		.byte	0
 3597 0255 24       		.uleb128 0x24
 3598 0256 01       		.uleb128 0x1
 3599 0257 01       		.byte	0x1
 3600 0258 49       		.uleb128 0x49
 3601 0259 13       		.uleb128 0x13
 3602 025a 01       		.uleb128 0x1
 3603 025b 13       		.uleb128 0x13
 3604 025c 00       		.byte	0
 3605 025d 00       		.byte	0
 3606 025e 25       		.uleb128 0x25
 3607 025f 21       		.uleb128 0x21
 3608 0260 00       		.byte	0
 3609 0261 49       		.uleb128 0x49
 3610 0262 13       		.uleb128 0x13
 3611 0263 2F       		.uleb128 0x2f
 3612 0264 0B       		.uleb128 0xb
 3613 0265 00       		.byte	0
 3614 0266 00       		.byte	0
 3615 0267 26       		.uleb128 0x26
 3616 0268 34       		.uleb128 0x34
 3617 0269 00       		.byte	0
 3618 026a 03       		.uleb128 0x3
 3619 026b 0E       		.uleb128 0xe
 3620 026c 3A       		.uleb128 0x3a
 3621 026d 0B       		.uleb128 0xb
 3622 026e 3B       		.uleb128 0x3b
 3623 026f 05       		.uleb128 0x5
 3624 0270 49       		.uleb128 0x49
 3625 0271 13       		.uleb128 0x13
 3626 0272 3F       		.uleb128 0x3f
 3627 0273 19       		.uleb128 0x19
 3628 0274 3C       		.uleb128 0x3c
 3629 0275 19       		.uleb128 0x19
 3630 0276 00       		.byte	0
 3631 0277 00       		.byte	0
 3632 0278 00       		.byte	0
 3633              		.section	.debug_aranges,"",%progbits
 3634 0000 04010000 		.4byte	0x104
 3635 0004 0200     		.2byte	0x2
 3636 0006 00000000 		.4byte	.Ldebug_info0
 3637 000a 04       		.byte	0x4
 3638 000b 00       		.byte	0
 3639 000c 0000     		.2byte	0
 3640 000e 0000     		.2byte	0
 3641 0010 00000000 		.4byte	.LFB11
 3642 0014 18000000 		.4byte	.LFE11-.LFB11
 3643 0018 00000000 		.4byte	.LFB12
 3644 001c 1A000000 		.4byte	.LFE12-.LFB12
 3645 0020 00000000 		.4byte	.LFB23
 3646 0024 14000000 		.4byte	.LFE23-.LFB23
 3647 0028 00000000 		.4byte	.LFB25
 3648 002c 0E000000 		.4byte	.LFE25-.LFB25
 3649 0030 00000000 		.4byte	.LFB26
 3650 0034 16000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 130


 3651 0038 00000000 		.4byte	.LFB32
 3652 003c 1C000000 		.4byte	.LFE32-.LFB32
 3653 0040 00000000 		.4byte	.LFB33
 3654 0044 16000000 		.4byte	.LFE33-.LFB33
 3655 0048 00000000 		.4byte	.LFB36
 3656 004c 14000000 		.4byte	.LFE36-.LFB36
 3657 0050 00000000 		.4byte	.LFB37
 3658 0054 1E000000 		.4byte	.LFE37-.LFB37
 3659 0058 00000000 		.4byte	.LFB38
 3660 005c 1A000000 		.4byte	.LFE38-.LFB38
 3661 0060 00000000 		.4byte	.LFB39
 3662 0064 12000000 		.4byte	.LFE39-.LFB39
 3663 0068 00000000 		.4byte	.LFB41
 3664 006c 14000000 		.4byte	.LFE41-.LFB41
 3665 0070 00000000 		.4byte	.LFB50
 3666 0074 0C000000 		.4byte	.LFE50-.LFB50
 3667 0078 00000000 		.4byte	.LFB51
 3668 007c 14000000 		.4byte	.LFE51-.LFB51
 3669 0080 00000000 		.4byte	.LFB53
 3670 0084 14000000 		.4byte	.LFE53-.LFB53
 3671 0088 00000000 		.4byte	.LFB57
 3672 008c 0E000000 		.4byte	.LFE57-.LFB57
 3673 0090 00000000 		.4byte	.LFB58
 3674 0094 0C000000 		.4byte	.LFE58-.LFB58
 3675 0098 00000000 		.4byte	.LFB63
 3676 009c 20000000 		.4byte	.LFE63-.LFB63
 3677 00a0 00000000 		.4byte	.LFB64
 3678 00a4 38000000 		.4byte	.LFE64-.LFB64
 3679 00a8 00000000 		.4byte	.LFB65
 3680 00ac 30000000 		.4byte	.LFE65-.LFB65
 3681 00b0 00000000 		.4byte	.LFB66
 3682 00b4 34000000 		.4byte	.LFE66-.LFB66
 3683 00b8 00000000 		.4byte	.LFB67
 3684 00bc 6C000000 		.4byte	.LFE67-.LFB67
 3685 00c0 00000000 		.4byte	.LFB70
 3686 00c4 F4000000 		.4byte	.LFE70-.LFB70
 3687 00c8 00000000 		.4byte	.LFB71
 3688 00cc 4C000000 		.4byte	.LFE71-.LFB71
 3689 00d0 00000000 		.4byte	.LFB72
 3690 00d4 98000000 		.4byte	.LFE72-.LFB72
 3691 00d8 00000000 		.4byte	.LFB73
 3692 00dc 1C000000 		.4byte	.LFE73-.LFB73
 3693 00e0 00000000 		.4byte	.LFB74
 3694 00e4 4E000000 		.4byte	.LFE74-.LFB74
 3695 00e8 00000000 		.4byte	.LFB75
 3696 00ec 6C010000 		.4byte	.LFE75-.LFB75
 3697 00f0 00000000 		.4byte	.LFB76
 3698 00f4 26000000 		.4byte	.LFE76-.LFB76
 3699 00f8 00000000 		.4byte	.LFB77
 3700 00fc 4E000000 		.4byte	.LFE77-.LFB77
 3701 0100 00000000 		.4byte	0
 3702 0104 00000000 		.4byte	0
 3703              		.section	.debug_ranges,"",%progbits
 3704              	.Ldebug_ranges0:
 3705 0000 00000000 		.4byte	.LFB11
 3706 0004 18000000 		.4byte	.LFE11
 3707 0008 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 131


 3708 000c 1A000000 		.4byte	.LFE12
 3709 0010 00000000 		.4byte	.LFB23
 3710 0014 14000000 		.4byte	.LFE23
 3711 0018 00000000 		.4byte	.LFB25
 3712 001c 0E000000 		.4byte	.LFE25
 3713 0020 00000000 		.4byte	.LFB26
 3714 0024 16000000 		.4byte	.LFE26
 3715 0028 00000000 		.4byte	.LFB32
 3716 002c 1C000000 		.4byte	.LFE32
 3717 0030 00000000 		.4byte	.LFB33
 3718 0034 16000000 		.4byte	.LFE33
 3719 0038 00000000 		.4byte	.LFB36
 3720 003c 14000000 		.4byte	.LFE36
 3721 0040 00000000 		.4byte	.LFB37
 3722 0044 1E000000 		.4byte	.LFE37
 3723 0048 00000000 		.4byte	.LFB38
 3724 004c 1A000000 		.4byte	.LFE38
 3725 0050 00000000 		.4byte	.LFB39
 3726 0054 12000000 		.4byte	.LFE39
 3727 0058 00000000 		.4byte	.LFB41
 3728 005c 14000000 		.4byte	.LFE41
 3729 0060 00000000 		.4byte	.LFB50
 3730 0064 0C000000 		.4byte	.LFE50
 3731 0068 00000000 		.4byte	.LFB51
 3732 006c 14000000 		.4byte	.LFE51
 3733 0070 00000000 		.4byte	.LFB53
 3734 0074 14000000 		.4byte	.LFE53
 3735 0078 00000000 		.4byte	.LFB57
 3736 007c 0E000000 		.4byte	.LFE57
 3737 0080 00000000 		.4byte	.LFB58
 3738 0084 0C000000 		.4byte	.LFE58
 3739 0088 00000000 		.4byte	.LFB63
 3740 008c 20000000 		.4byte	.LFE63
 3741 0090 00000000 		.4byte	.LFB64
 3742 0094 38000000 		.4byte	.LFE64
 3743 0098 00000000 		.4byte	.LFB65
 3744 009c 30000000 		.4byte	.LFE65
 3745 00a0 00000000 		.4byte	.LFB66
 3746 00a4 34000000 		.4byte	.LFE66
 3747 00a8 00000000 		.4byte	.LFB67
 3748 00ac 6C000000 		.4byte	.LFE67
 3749 00b0 00000000 		.4byte	.LFB70
 3750 00b4 F4000000 		.4byte	.LFE70
 3751 00b8 00000000 		.4byte	.LFB71
 3752 00bc 4C000000 		.4byte	.LFE71
 3753 00c0 00000000 		.4byte	.LFB72
 3754 00c4 98000000 		.4byte	.LFE72
 3755 00c8 00000000 		.4byte	.LFB73
 3756 00cc 1C000000 		.4byte	.LFE73
 3757 00d0 00000000 		.4byte	.LFB74
 3758 00d4 4E000000 		.4byte	.LFE74
 3759 00d8 00000000 		.4byte	.LFB75
 3760 00dc 6C010000 		.4byte	.LFE75
 3761 00e0 00000000 		.4byte	.LFB76
 3762 00e4 26000000 		.4byte	.LFE76
 3763 00e8 00000000 		.4byte	.LFB77
 3764 00ec 4E000000 		.4byte	.LFE77
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 132


 3765 00f0 00000000 		.4byte	0
 3766 00f4 00000000 		.4byte	0
 3767              		.section	.debug_line,"",%progbits
 3768              	.Ldebug_line0:
 3769 0000 91040000 		.section	.debug_str,"MS",%progbits,1
 3769      02007601 
 3769      00000201 
 3769      FB0E0D00 
 3769      01010101 
 3770              	.LASF62:
 3771 0000 49535232 		.ascii	"ISR2_Context\000"
 3771      5F436F6E 
 3771      74657874 
 3771      00
 3772              	.LASF99:
 3773 000d 696E6372 		.ascii	"increment\000"
 3773      656D656E 
 3773      7400
 3774              	.LASF102:
 3775 0017 705F6163 		.ascii	"p_action\000"
 3775      74696F6E 
 3775      00
 3776              	.LASF75:
 3777 0020 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 3777      616C5F65 
 3777      6E645F6E 
 3777      65737465 
 3777      645F7072 
 3778              	.LASF44:
 3779 003c 6E657874 		.ascii	"next\000"
 3779      00
 3780              	.LASF23:
 3781 0041 5469636B 		.ascii	"TickType\000"
 3781      54797065 
 3781      00
 3782              	.LASF79:
 3783 004a 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 3783      5254495F 
 3783      7365745F 
 3783      73657276 
 3783      6963655F 
 3784              	.LASF100:
 3785 0061 70726576 		.ascii	"previous\000"
 3785      696F7573 
 3785      00
 3786              	.LASF25:
 3787 006a 41637469 		.ascii	"ActionType\000"
 3787      6F6E5479 
 3787      706500
 3788              	.LASF139:
 3789 0075 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3789      43313120 
 3789      352E342E 
 3789      31203230 
 3789      31363036 
 3790 00a8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3790      20726576 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 133


 3790      6973696F 
 3790      6E203233 
 3790      37373135 
 3791 00db 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3791      66756E63 
 3791      74696F6E 
 3791      2D736563 
 3791      74696F6E 
 3792              	.LASF18:
 3793 0103 45455F54 		.ascii	"EE_TYPEBOOL\000"
 3793      59504542 
 3793      4F4F4C00 
 3794              	.LASF7:
 3795 010f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3795      206C6F6E 
 3795      6720756E 
 3795      7369676E 
 3795      65642069 
 3796              	.LASF77:
 3797 0126 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 3797      616C5F72 
 3797      65616479 
 3797      32737461 
 3797      636B6564 
 3798              	.LASF59:
 3799 013b 53746174 		.ascii	"StatusType\000"
 3799      75735479 
 3799      706500
 3800              	.LASF134:
 3801 0146 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 3801      6F5F636F 
 3801      756E7465 
 3801      725F6F62 
 3801      6A656374 
 3802              	.LASF43:
 3803 015f 64656C74 		.ascii	"delta\000"
 3803      6100
 3804              	.LASF40:
 3805 0165 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 3805      6F5F636F 
 3805      756E7465 
 3805      725F6F62 
 3805      6A656374 
 3806              	.LASF21:
 3807 0183 5461736B 		.ascii	"TaskType\000"
 3807      54797065 
 3807      00
 3808              	.LASF27:
 3809 018c 6D617861 		.ascii	"maxallowedvalue\000"
 3809      6C6C6F77 
 3809      65647661 
 3809      6C756500 
 3810              	.LASF6:
 3811 019c 6C6F6E67 		.ascii	"long long int\000"
 3811      206C6F6E 
 3811      6720696E 
 3811      7400
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 134


 3812              	.LASF0:
 3813 01aa 7369676E 		.ascii	"signed char\000"
 3813      65642063 
 3813      68617200 
 3814              	.LASF50:
 3815 01b6 45455F6F 		.ascii	"EE_oo_action_kind_type\000"
 3815      6F5F6163 
 3815      74696F6E 
 3815      5F6B696E 
 3815      645F7479 
 3816              	.LASF22:
 3817 01cd 4576656E 		.ascii	"EventMaskType\000"
 3817      744D6173 
 3817      6B547970 
 3817      6500
 3818              	.LASF132:
 3819 01db 45455F61 		.ascii	"EE_alarm_ROM\000"
 3819      6C61726D 
 3819      5F524F4D 
 3819      00
 3820              	.LASF138:
 3821 01e8 45455F72 		.ascii	"EE_rq_lookup\000"
 3821      715F6C6F 
 3821      6F6B7570 
 3821      00
 3822              	.LASF92:
 3823 01f5 69737461 		.ascii	"istat\000"
 3823      7400
 3824              	.LASF33:
 3825 01fb 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 3825      6F5F636F 
 3825      756E7465 
 3825      725F5241 
 3825      4D5F7479 
 3826              	.LASF66:
 3827 0212 506F7374 		.ascii	"PostTaskHook_Context\000"
 3827      5461736B 
 3827      486F6F6B 
 3827      5F436F6E 
 3827      74657874 
 3828              	.LASF4:
 3829 0227 6C6F6E67 		.ascii	"long int\000"
 3829      20696E74 
 3829      00
 3830              	.LASF101:
 3831 0230 45455F6F 		.ascii	"EE_oo_handle_action_task\000"
 3831      6F5F6861 
 3831      6E646C65 
 3831      5F616374 
 3831      696F6E5F 
 3832              	.LASF108:
 3833 0249 45455F6F 		.ascii	"EE_oo_IncrementCounterImplementation\000"
 3833      6F5F496E 
 3833      6372656D 
 3833      656E7443 
 3833      6F756E74 
 3834              	.LASF80:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 135


 3835 026e 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 3835      5254495F 
 3835      7365745F 
 3835      73657276 
 3835      6963655F 
 3836              	.LASF141:
 3837 0286 433A5C55 		.ascii	"C:\\Users\\schmi\\OneDrive\\Dokumente\\PSoC Creator"
 3837      73657273 
 3837      5C736368 
 3837      6D695C4F 
 3837      6E654472 
 3838 02b4 5C4A736F 		.ascii	"\\JsonParserLAB3\\holidayProject\\setUpEnv.cydsn\000"
 3838      6E506172 
 3838      7365724C 
 3838      4142335C 
 3838      686F6C69 
 3839              	.LASF95:
 3840 02e2 45455F6F 		.ascii	"EE_oo_task_in_ready_queue\000"
 3840      6F5F7461 
 3840      736B5F69 
 3840      6E5F7265 
 3840      6164795F 
 3841              	.LASF89:
 3842 02fc 45455F6F 		.ascii	"EE_oo_reset_th_event_active\000"
 3842      6F5F7265 
 3842      7365745F 
 3842      74685F65 
 3842      76656E74 
 3843              	.LASF136:
 3844 0318 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 3844      6F5F4952 
 3844      515F7375 
 3844      7370656E 
 3844      645F7374 
 3845              	.LASF115:
 3846 0331 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 3846      74645F65 
 3846      6E646379 
 3846      636C655F 
 3846      6E657874 
 3847              	.LASF29:
 3848 034a 6D696E63 		.ascii	"mincycle\000"
 3848      79636C65 
 3848      00
 3849              	.LASF19:
 3850 0353 45455F54 		.ascii	"EE_TID\000"
 3850      494400
 3851              	.LASF31:
 3852 035a 76616C75 		.ascii	"value\000"
 3852      6500
 3853              	.LASF105:
 3854 0360 45455F6F 		.ascii	"EE_oo_handle_action_callback\000"
 3854      6F5F6861 
 3854      6E646C65 
 3854      5F616374 
 3854      696F6E5F 
 3855              	.LASF85:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 136


 3856 037d 45455F73 		.ascii	"EE_stk_queryfirst\000"
 3856      746B5F71 
 3856      75657279 
 3856      66697273 
 3856      7400
 3857              	.LASF8:
 3858 038f 756E7369 		.ascii	"unsigned int\000"
 3858      676E6564 
 3858      20696E74 
 3858      00
 3859              	.LASF11:
 3860 039c 45455F49 		.ascii	"EE_INT8\000"
 3860      4E543800 
 3861              	.LASF16:
 3862 03a4 45455F55 		.ascii	"EE_UREG\000"
 3862      52454700 
 3863              	.LASF58:
 3864 03ac 45455F6F 		.ascii	"EE_oo_alarm_ROM_type\000"
 3864      6F5F616C 
 3864      61726D5F 
 3864      524F4D5F 
 3864      74797065 
 3865              	.LASF122:
 3866 03c1 45455F73 		.ascii	"EE_stkfirst\000"
 3866      746B6669 
 3866      72737400 
 3867              	.LASF67:
 3868 03cd 53746172 		.ascii	"StartupHook_Context\000"
 3868      74757048 
 3868      6F6F6B5F 
 3868      436F6E74 
 3868      65787400 
 3869              	.LASF5:
 3870 03e1 6C6F6E67 		.ascii	"long unsigned int\000"
 3870      20756E73 
 3870      69676E65 
 3870      6420696E 
 3870      7400
 3871              	.LASF127:
 3872 03f3 45455F74 		.ascii	"EE_th_waswaiting\000"
 3872      685F7761 
 3872      73776169 
 3872      74696E67 
 3872      00
 3873              	.LASF39:
 3874 0404 6B696E64 		.ascii	"kind\000"
 3874      00
 3875              	.LASF3:
 3876 0409 73686F72 		.ascii	"short unsigned int\000"
 3876      7420756E 
 3876      7369676E 
 3876      65642069 
 3876      6E7400
 3877              	.LASF135:
 3878 041c 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 3878      6F5F4952 
 3878      515F6469 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 137


 3878      7361626C 
 3878      655F636F 
 3879              	.LASF98:
 3880 0434 4F626A65 		.ascii	"ObjectID\000"
 3880      63744944 
 3880      00
 3881              	.LASF36:
 3882 043d 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 3882      6F5F636F 
 3882      756E7465 
 3882      725F6F62 
 3882      6A656374 
 3883              	.LASF69:
 3884 045c 416C6172 		.ascii	"AlarmCallback_Context\000"
 3884      6D43616C 
 3884      6C626163 
 3884      6B5F436F 
 3884      6E746578 
 3885              	.LASF119:
 3886 0472 45455F74 		.ascii	"EE_th_status\000"
 3886      685F7374 
 3886      61747573 
 3886      00
 3887              	.LASF37:
 3888 047f 436F756E 		.ascii	"CounterObjectKindType\000"
 3888      7465724F 
 3888      626A6563 
 3888      744B696E 
 3888      64547970 
 3889              	.LASF107:
 3890 0495 45455F6F 		.ascii	"EE_oo_counter_object_insert\000"
 3890      6F5F636F 
 3890      756E7465 
 3890      725F6F62 
 3890      6A656374 
 3891              	.LASF118:
 3892 04b1 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 3892      685F6469 
 3892      73706174 
 3892      63685F70 
 3892      72696F00 
 3893              	.LASF10:
 3894 04c5 45455F55 		.ascii	"EE_UINT8\000"
 3894      494E5438 
 3894      00
 3895              	.LASF15:
 3896 04ce 45455F56 		.ascii	"EE_VOID_CALLBACK\000"
 3896      4F49445F 
 3896      43414C4C 
 3896      4241434B 
 3896      00
 3897              	.LASF26:
 3898 04df 436F756E 		.ascii	"CounterType\000"
 3898      74657254 
 3898      79706500 
 3899              	.LASF110:
 3900 04eb 746F5F66 		.ascii	"to_fire\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 138


 3900      69726500 
 3901              	.LASF130:
 3902 04f3 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 3902      6F5F636F 
 3902      756E7465 
 3902      725F6F62 
 3902      6A656374 
 3903              	.LASF57:
 3904 050c 61637469 		.ascii	"action_id\000"
 3904      6F6E5F69 
 3904      6400
 3905              	.LASF131:
 3906 0516 45455F6F 		.ascii	"EE_oo_action_ROM\000"
 3906      6F5F6163 
 3906      74696F6E 
 3906      5F524F4D 
 3906      00
 3907              	.LASF20:
 3908 0527 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 3908      5950455F 
 3908      52515F4D 
 3908      41534B00 
 3909              	.LASF65:
 3910 0537 50726554 		.ascii	"PreTaskHook_Context\000"
 3910      61736B48 
 3910      6F6F6B5F 
 3910      436F6E74 
 3910      65787400 
 3911              	.LASF63:
 3912 054b 4572726F 		.ascii	"ErrorHook_Context\000"
 3912      72486F6F 
 3912      6B5F436F 
 3912      6E746578 
 3912      7400
 3913              	.LASF103:
 3914 055d 45455F6F 		.ascii	"EE_oo_handle_action_event\000"
 3914      6F5F6861 
 3914      6E646C65 
 3914      5F616374 
 3914      696F6E5F 
 3915              	.LASF116:
 3916 0577 73697A65 		.ascii	"sizetype\000"
 3916      74797065 
 3916      00
 3917              	.LASF64:
 3918 0580 50726F74 		.ascii	"ProtectionHook_Context\000"
 3918      65637469 
 3918      6F6E486F 
 3918      6F6B5F43 
 3918      6F6E7465 
 3919              	.LASF9:
 3920 0597 6C6F6E67 		.ascii	"long double\000"
 3920      20646F75 
 3920      626C6500 
 3921              	.LASF137:
 3922 05a3 45455F41 		.ascii	"EE_ApplicationMode\000"
 3922      70706C69 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 139


 3922      63617469 
 3922      6F6E4D6F 
 3922      646500
 3923              	.LASF70:
 3924 05b6 49646C65 		.ascii	"Idle_Context\000"
 3924      5F436F6E 
 3924      74657874 
 3924      00
 3925              	.LASF140:
 3926 05c3 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_altick.c\000"
 3926      72617465 
 3926      645F536F 
 3926      75726365 
 3926      5C50536F 
 3927              	.LASF113:
 3928 05f0 45455F6F 		.ascii	"EE_oo_IncrementCounter\000"
 3928      6F5F496E 
 3928      6372656D 
 3928      656E7443 
 3928      6F756E74 
 3929              	.LASF86:
 3930 0607 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 3930      735F6D6F 
 3930      6E69746F 
 3930      72696E67 
 3930      5F746865 
 3931              	.LASF28:
 3932 0622 7469636B 		.ascii	"ticksperbase\000"
 3932      73706572 
 3932      62617365 
 3932      00
 3933              	.LASF60:
 3934 062f 4B65726E 		.ascii	"Kernel_Context\000"
 3934      656C5F43 
 3934      6F6E7465 
 3934      787400
 3935              	.LASF97:
 3936 063e 63757272 		.ascii	"current\000"
 3936      656E7400 
 3937              	.LASF61:
 3938 0646 5441534B 		.ascii	"TASK_Context\000"
 3938      5F436F6E 
 3938      74657874 
 3938      00
 3939              	.LASF41:
 3940 0653 75736564 		.ascii	"used\000"
 3940      00
 3941              	.LASF88:
 3942 0658 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 3942      6F5F6361 
 3942      6C6C5F50 
 3942      6F737454 
 3942      61736B48 
 3943              	.LASF123:
 3944 0670 45455F73 		.ascii	"EE_sys_ceiling\000"
 3944      79735F63 
 3944      65696C69 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 140


 3944      6E6700
 3945              	.LASF45:
 3946 067f 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 3946      6F5F636F 
 3946      756E7465 
 3946      725F6F62 
 3946      6A656374 
 3947              	.LASF87:
 3948 069d 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 3948      6F5F6361 
 3948      6C6C5F50 
 3948      72655461 
 3948      736B486F 
 3949              	.LASF129:
 3950 06b4 45455F63 		.ascii	"EE_counter_ROM\000"
 3950      6F756E74 
 3950      65725F52 
 3950      4F4D00
 3951              	.LASF56:
 3952 06c3 45455F6F 		.ascii	"EE_oo_action_ROM_type\000"
 3952      6F5F6163 
 3952      74696F6E 
 3952      5F524F4D 
 3952      5F747970 
 3953              	.LASF12:
 3954 06d9 45455F55 		.ascii	"EE_UINT16\000"
 3954      494E5431 
 3954      3600
 3955              	.LASF35:
 3956 06e3 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 3956      43484544 
 3956      554C4554 
 3956      41424C45 
 3956      00
 3957              	.LASF96:
 3958 06f4 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 3958      6F5F7072 
 3958      65656D70 
 3958      74696F6E 
 3958      5F706F69 
 3959              	.LASF74:
 3960 070b 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 3960      6F727465 
 3960      785F6D78 
 3960      5F726573 
 3960      756D6549 
 3961              	.LASF1:
 3962 0722 756E7369 		.ascii	"unsigned char\000"
 3962      676E6564 
 3962      20636861 
 3962      7200
 3963              	.LASF34:
 3964 0730 45455F41 		.ascii	"EE_ALARM\000"
 3964      4C41524D 
 3964      00
 3965              	.LASF120:
 3966 0739 45455F74 		.ascii	"EE_th_next\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 141


 3966      685F6E65 
 3966      787400
 3967              	.LASF125:
 3968 0744 45455F74 		.ascii	"EE_th_event_active\000"
 3968      685F6576 
 3968      656E745F 
 3968      61637469 
 3968      766500
 3969              	.LASF55:
 3970 0757 696E6363 		.ascii	"inccount\000"
 3970      6F756E74 
 3970      00
 3971              	.LASF2:
 3972 0760 73686F72 		.ascii	"short int\000"
 3972      7420696E 
 3972      7400
 3973              	.LASF112:
 3974 076a 45455F6F 		.ascii	"EE_oo_IncrementCounterHardware\000"
 3974      6F5F496E 
 3974      6372656D 
 3974      656E7443 
 3974      6F756E74 
 3975              	.LASF126:
 3976 0789 45455F74 		.ascii	"EE_th_event_waitmask\000"
 3976      685F6576 
 3976      656E745F 
 3976      77616974 
 3976      6D61736B 
 3977              	.LASF111:
 3978 079e 666C6167 		.ascii	"flag\000"
 3978      00
 3979              	.LASF30:
 3980 07a3 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 3980      6F5F636F 
 3980      756E7465 
 3980      725F524F 
 3980      4D5F7479 
 3981              	.LASF54:
 3982 07ba 61637469 		.ascii	"action_mask\000"
 3982      6F6E5F6D 
 3982      61736B00 
 3983              	.LASF49:
 3984 07c6 45455F41 		.ascii	"EE_ACTION_CALLBACK\000"
 3984      4354494F 
 3984      4E5F4341 
 3984      4C4C4241 
 3984      434B00
 3985              	.LASF82:
 3986 07d9 45455F61 		.ascii	"EE_as_set_execution_context\000"
 3986      735F7365 
 3986      745F6578 
 3986      65637574 
 3986      696F6E5F 
 3987              	.LASF124:
 3988 07f5 45455F72 		.ascii	"EE_rq_bitmask\000"
 3988      715F6269 
 3988      746D6173 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 142


 3988      6B00
 3989              	.LASF32:
 3990 0803 66697273 		.ascii	"first\000"
 3990      7400
 3991              	.LASF24:
 3992 0809 436F756E 		.ascii	"CounterObjectType\000"
 3992      7465724F 
 3992      626A6563 
 3992      74547970 
 3992      6500
 3993              	.LASF46:
 3994 081b 45455F41 		.ascii	"EE_ACTION_TASK\000"
 3994      4354494F 
 3994      4E5F5441 
 3994      534B00
 3995              	.LASF81:
 3996 082a 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 3996      5254495F 
 3996      7365745F 
 3996      74685F65 
 3996      715F6469 
 3997              	.LASF48:
 3998 084a 45455F41 		.ascii	"EE_ACTION_COUNTER\000"
 3998      4354494F 
 3998      4E5F434F 
 3998      554E5445 
 3998      5200
 3999              	.LASF71:
 4000 085c 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 4000      59504543 
 4000      4F4E5445 
 4000      585400
 4001              	.LASF133:
 4002 086b 45455F63 		.ascii	"EE_counter_RAM\000"
 4002      6F756E74 
 4002      65725F52 
 4002      414D00
 4003              	.LASF38:
 4004 087a 73706563 		.ascii	"spec_id\000"
 4004      5F696400 
 4005              	.LASF106:
 4006 0882 45455F6F 		.ascii	"EE_oo_handle_action\000"
 4006      6F5F6861 
 4006      6E646C65 
 4006      5F616374 
 4006      696F6E00 
 4007              	.LASF47:
 4008 0896 45455F41 		.ascii	"EE_ACTION_EVENT\000"
 4008      4354494F 
 4008      4E5F4556 
 4008      454E5400 
 4009              	.LASF109:
 4010 08a6 436F756E 		.ascii	"CounterID\000"
 4010      74657249 
 4010      4400
 4011              	.LASF104:
 4012 08b0 4D61736B 		.ascii	"Mask\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 143


 4012      00
 4013              	.LASF73:
 4014 08b5 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 4014      616C5F62 
 4014      6567696E 
 4014      5F6E6573 
 4014      7465645F 
 4015              	.LASF52:
 4016 08d3 61637469 		.ascii	"action_kind\000"
 4016      6F6E5F6B 
 4016      696E6400 
 4017              	.LASF72:
 4018 08df 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 4018      616C5F67 
 4018      65745F49 
 4018      52515F6E 
 4018      65737469 
 4019              	.LASF78:
 4020 08fc 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 4020      5254495F 
 4020      7365745F 
 4020      73657276 
 4020      69636500 
 4021              	.LASF83:
 4022 0910 45455F6F 		.ascii	"EE_os_notify_error_impl\000"
 4022      735F6E6F 
 4022      74696679 
 4022      5F657272 
 4022      6F725F69 
 4023              	.LASF76:
 4024 0928 45455F68 		.ascii	"EE_hal_stkchange\000"
 4024      616C5F73 
 4024      746B6368 
 4024      616E6765 
 4024      00
 4025              	.LASF51:
 4026 0939 41637469 		.ascii	"ActionKindType\000"
 4026      6F6E4B69 
 4026      6E645479 
 4026      706500
 4027              	.LASF121:
 4028 0948 45455F74 		.ascii	"EE_th_rnact\000"
 4028      685F726E 
 4028      61637400 
 4029              	.LASF93:
 4030 0954 45455F6F 		.ascii	"EE_oo_set_th_status_ready\000"
 4030      6F5F7365 
 4030      745F7468 
 4030      5F737461 
 4030      7475735F 
 4031              	.LASF14:
 4032 096e 45455F55 		.ascii	"EE_UINT32\000"
 4032      494E5433 
 4032      3200
 4033              	.LASF94:
 4034 0978 5461736B 		.ascii	"TaskID\000"
 4034      494400
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 144


 4035              	.LASF13:
 4036 097f 45455F49 		.ascii	"EE_INT32\000"
 4036      4E543332 
 4036      00
 4037              	.LASF90:
 4038 0988 746E6F74 		.ascii	"tnotactive\000"
 4038      61637469 
 4038      766500
 4039              	.LASF91:
 4040 0993 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 4040      6F5F7275 
 4040      6E5F6E65 
 4040      78745F74 
 4040      61736B00 
 4041              	.LASF114:
 4042 09a7 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 4042      52515F6E 
 4042      65737469 
 4042      6E675F6C 
 4042      6576656C 
 4043              	.LASF42:
 4044 09bc 636E7463 		.ascii	"cntcycle\000"
 4044      79636C65 
 4044      00
 4045              	.LASF68:
 4046 09c5 53687574 		.ascii	"ShutdownHook_Context\000"
 4046      646F776E 
 4046      486F6F6B 
 4046      5F436F6E 
 4046      74657874 
 4047              	.LASF117:
 4048 09da 45455F74 		.ascii	"EE_th_ready_prio\000"
 4048      685F7265 
 4048      6164795F 
 4048      7072696F 
 4048      00
 4049              	.LASF53:
 4050 09eb 61637469 		.ascii	"action_task\000"
 4050      6F6E5F74 
 4050      61736B00 
 4051              	.LASF84:
 4052 09f7 4572726F 		.ascii	"Error\000"
 4052      7200
 4053              	.LASF142:
 4054 09fd 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 4054      6F727465 
 4054      785F6D78 
 4054      5F737573 
 4054      70656E64 
 4055              	.LASF128:
 4056 0a15 45455F74 		.ascii	"EE_th_is_extended\000"
 4056      685F6973 
 4056      5F657874 
 4056      656E6465 
 4056      6400
 4057              	.LASF17:
 4058 0a27 45455F46 		.ascii	"EE_FREG\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccqTUlWe.s 			page 145


 4058      52454700 
 4059              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
