ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"message.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.jsmn_alloc_token,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	jsmn_alloc_token, %function
  24              	jsmn_alloc_token:
  25              	.LFB0:
  26              		.file 1 ".\\source\\bsw\\json/jsmn.h"
   1:.\source\bsw\json/jsmn.h **** /*
   2:.\source\bsw\json/jsmn.h ****  * MIT License
   3:.\source\bsw\json/jsmn.h ****  *
   4:.\source\bsw\json/jsmn.h ****  * Copyright (c) 2010 Serge Zaitsev
   5:.\source\bsw\json/jsmn.h ****  *
   6:.\source\bsw\json/jsmn.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   7:.\source\bsw\json/jsmn.h ****  * of this software and associated documentation files (the "Software"), to deal
   8:.\source\bsw\json/jsmn.h ****  * in the Software without restriction, including without limitation the rights
   9:.\source\bsw\json/jsmn.h ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:.\source\bsw\json/jsmn.h ****  * copies of the Software, and to permit persons to whom the Software is
  11:.\source\bsw\json/jsmn.h ****  * furnished to do so, subject to the following conditions:
  12:.\source\bsw\json/jsmn.h ****  *
  13:.\source\bsw\json/jsmn.h ****  * The above copyright notice and this permission notice shall be included in
  14:.\source\bsw\json/jsmn.h ****  * all copies or substantial portions of the Software.
  15:.\source\bsw\json/jsmn.h ****  *
  16:.\source\bsw\json/jsmn.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:.\source\bsw\json/jsmn.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:.\source\bsw\json/jsmn.h ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:.\source\bsw\json/jsmn.h ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:.\source\bsw\json/jsmn.h ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  21:.\source\bsw\json/jsmn.h ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  22:.\source\bsw\json/jsmn.h ****  * SOFTWARE.
  23:.\source\bsw\json/jsmn.h ****  */
  24:.\source\bsw\json/jsmn.h **** #ifndef JSMN_H
  25:.\source\bsw\json/jsmn.h **** #define JSMN_H
  26:.\source\bsw\json/jsmn.h **** 
  27:.\source\bsw\json/jsmn.h **** #include <stddef.h>
  28:.\source\bsw\json/jsmn.h **** 
  29:.\source\bsw\json/jsmn.h **** #ifdef __cplusplus
  30:.\source\bsw\json/jsmn.h **** extern "C" {
  31:.\source\bsw\json/jsmn.h **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 2


  32:.\source\bsw\json/jsmn.h **** 
  33:.\source\bsw\json/jsmn.h **** #ifdef JSMN_STATIC
  34:.\source\bsw\json/jsmn.h **** #define JSMN_API static
  35:.\source\bsw\json/jsmn.h **** #else
  36:.\source\bsw\json/jsmn.h **** #define JSMN_API extern
  37:.\source\bsw\json/jsmn.h **** #endif
  38:.\source\bsw\json/jsmn.h **** 
  39:.\source\bsw\json/jsmn.h **** /**
  40:.\source\bsw\json/jsmn.h ****  * JSON type identifier. Basic types are:
  41:.\source\bsw\json/jsmn.h ****  * 	o Object
  42:.\source\bsw\json/jsmn.h ****  * 	o Array
  43:.\source\bsw\json/jsmn.h ****  * 	o String
  44:.\source\bsw\json/jsmn.h ****  * 	o Other primitive: number, boolean (true/false) or null
  45:.\source\bsw\json/jsmn.h ****  */
  46:.\source\bsw\json/jsmn.h **** typedef enum {
  47:.\source\bsw\json/jsmn.h ****   JSMN_UNDEFINED = 0,
  48:.\source\bsw\json/jsmn.h ****   JSMN_OBJECT = 1 << 0,
  49:.\source\bsw\json/jsmn.h ****   JSMN_ARRAY = 1 << 1,
  50:.\source\bsw\json/jsmn.h ****   JSMN_STRING = 1 << 2,
  51:.\source\bsw\json/jsmn.h ****   JSMN_PRIMITIVE = 1 << 3
  52:.\source\bsw\json/jsmn.h **** } jsmntype_t;
  53:.\source\bsw\json/jsmn.h **** 
  54:.\source\bsw\json/jsmn.h **** enum jsmnerr {
  55:.\source\bsw\json/jsmn.h ****   /* Not enough tokens were provided */
  56:.\source\bsw\json/jsmn.h ****   JSMN_ERROR_NOMEM = -1,
  57:.\source\bsw\json/jsmn.h ****   /* Invalid character inside JSON string */
  58:.\source\bsw\json/jsmn.h ****   JSMN_ERROR_INVAL = -2,
  59:.\source\bsw\json/jsmn.h ****   /* The string is not a full JSON packet, more bytes expected */
  60:.\source\bsw\json/jsmn.h ****   JSMN_ERROR_PART = -3
  61:.\source\bsw\json/jsmn.h **** };
  62:.\source\bsw\json/jsmn.h **** 
  63:.\source\bsw\json/jsmn.h **** /**
  64:.\source\bsw\json/jsmn.h ****  * JSON token description.
  65:.\source\bsw\json/jsmn.h ****  * type		type (object, array, string etc.)
  66:.\source\bsw\json/jsmn.h ****  * start	start position in JSON data string
  67:.\source\bsw\json/jsmn.h ****  * end		end position in JSON data string
  68:.\source\bsw\json/jsmn.h ****  */
  69:.\source\bsw\json/jsmn.h **** typedef struct jsmntok {
  70:.\source\bsw\json/jsmn.h ****   jsmntype_t type;
  71:.\source\bsw\json/jsmn.h ****   int start;
  72:.\source\bsw\json/jsmn.h ****   int end;
  73:.\source\bsw\json/jsmn.h ****   int size;
  74:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
  75:.\source\bsw\json/jsmn.h ****   int parent;
  76:.\source\bsw\json/jsmn.h **** #endif
  77:.\source\bsw\json/jsmn.h **** } jsmntok_t;
  78:.\source\bsw\json/jsmn.h **** 
  79:.\source\bsw\json/jsmn.h **** /**
  80:.\source\bsw\json/jsmn.h ****  * JSON parser. Contains an array of token blocks available. Also stores
  81:.\source\bsw\json/jsmn.h ****  * the string being parsed now and current position in that string.
  82:.\source\bsw\json/jsmn.h ****  */
  83:.\source\bsw\json/jsmn.h **** typedef struct jsmn_parser {
  84:.\source\bsw\json/jsmn.h ****   unsigned int pos;     /* offset in the JSON string */
  85:.\source\bsw\json/jsmn.h ****   unsigned int toknext; /* next token to allocate */
  86:.\source\bsw\json/jsmn.h ****   int toksuper;         /* superior token node, e.g. parent object or array */
  87:.\source\bsw\json/jsmn.h **** } jsmn_parser;
  88:.\source\bsw\json/jsmn.h **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 3


  89:.\source\bsw\json/jsmn.h **** /**
  90:.\source\bsw\json/jsmn.h ****  * Create JSON parser over an array of tokens
  91:.\source\bsw\json/jsmn.h ****  */
  92:.\source\bsw\json/jsmn.h **** JSMN_API void jsmn_init(jsmn_parser *parser);
  93:.\source\bsw\json/jsmn.h **** 
  94:.\source\bsw\json/jsmn.h **** /**
  95:.\source\bsw\json/jsmn.h ****  * Run JSON parser. It parses a JSON data string into and array of tokens, each
  96:.\source\bsw\json/jsmn.h ****  * describing
  97:.\source\bsw\json/jsmn.h ****  * a single JSON object.
  98:.\source\bsw\json/jsmn.h ****  */
  99:.\source\bsw\json/jsmn.h **** JSMN_API int jsmn_parse(jsmn_parser *parser, const char *js, const size_t len,
 100:.\source\bsw\json/jsmn.h ****                         jsmntok_t *tokens, const unsigned int num_tokens);
 101:.\source\bsw\json/jsmn.h **** 
 102:.\source\bsw\json/jsmn.h **** #ifndef JSMN_HEADER
 103:.\source\bsw\json/jsmn.h **** /**
 104:.\source\bsw\json/jsmn.h ****  * Allocates a fresh unused token from the token pool.
 105:.\source\bsw\json/jsmn.h ****  */
 106:.\source\bsw\json/jsmn.h **** static jsmntok_t *jsmn_alloc_token(jsmn_parser *parser, jsmntok_t *tokens,
 107:.\source\bsw\json/jsmn.h ****                                    const size_t num_tokens) {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              		.cfi_def_cfa_offset 32
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 F860     		str	r0, [r7, #12]
  40 0008 B960     		str	r1, [r7, #8]
  41 000a 7A60     		str	r2, [r7, #4]
 108:.\source\bsw\json/jsmn.h ****   jsmntok_t *tok;
 109:.\source\bsw\json/jsmn.h ****   if (parser->toknext >= num_tokens) {
  42              		.loc 1 109 0
  43 000c FB68     		ldr	r3, [r7, #12]
  44 000e 5A68     		ldr	r2, [r3, #4]
  45 0010 7B68     		ldr	r3, [r7, #4]
  46 0012 9A42     		cmp	r2, r3
  47 0014 01D3     		bcc	.L2
 110:.\source\bsw\json/jsmn.h ****     return NULL;
  48              		.loc 1 110 0
  49 0016 0023     		movs	r3, #0
  50 0018 14E0     		b	.L3
  51              	.L2:
 111:.\source\bsw\json/jsmn.h ****   }
 112:.\source\bsw\json/jsmn.h ****   tok = &tokens[parser->toknext++];
  52              		.loc 1 112 0
  53 001a FB68     		ldr	r3, [r7, #12]
  54 001c 5B68     		ldr	r3, [r3, #4]
  55 001e 591C     		adds	r1, r3, #1
  56 0020 FA68     		ldr	r2, [r7, #12]
  57 0022 5160     		str	r1, [r2, #4]
  58 0024 1B01     		lsls	r3, r3, #4
  59 0026 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 4


  60 0028 1344     		add	r3, r3, r2
  61 002a 7B61     		str	r3, [r7, #20]
 113:.\source\bsw\json/jsmn.h ****   tok->start = tok->end = -1;
  62              		.loc 1 113 0
  63 002c 7B69     		ldr	r3, [r7, #20]
  64 002e 4FF0FF32 		mov	r2, #-1
  65 0032 9A60     		str	r2, [r3, #8]
  66 0034 7B69     		ldr	r3, [r7, #20]
  67 0036 9A68     		ldr	r2, [r3, #8]
  68 0038 7B69     		ldr	r3, [r7, #20]
  69 003a 5A60     		str	r2, [r3, #4]
 114:.\source\bsw\json/jsmn.h ****   tok->size = 0;
  70              		.loc 1 114 0
  71 003c 7B69     		ldr	r3, [r7, #20]
  72 003e 0022     		movs	r2, #0
  73 0040 DA60     		str	r2, [r3, #12]
 115:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
 116:.\source\bsw\json/jsmn.h ****   tok->parent = -1;
 117:.\source\bsw\json/jsmn.h **** #endif
 118:.\source\bsw\json/jsmn.h ****   return tok;
  74              		.loc 1 118 0
  75 0042 7B69     		ldr	r3, [r7, #20]
  76              	.L3:
 119:.\source\bsw\json/jsmn.h **** }
  77              		.loc 1 119 0
  78 0044 1846     		mov	r0, r3
  79 0046 1C37     		adds	r7, r7, #28
  80              		.cfi_def_cfa_offset 4
  81 0048 BD46     		mov	sp, r7
  82              		.cfi_def_cfa_register 13
  83              		@ sp needed
  84 004a 80BC     		pop	{r7}
  85              		.cfi_restore 7
  86              		.cfi_def_cfa_offset 0
  87 004c 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	jsmn_alloc_token, .-jsmn_alloc_token
  91 004e 00BF     		.section	.text.jsmn_fill_token,"ax",%progbits
  92              		.align	2
  93              		.thumb
  94              		.thumb_func
  95              		.type	jsmn_fill_token, %function
  96              	jsmn_fill_token:
  97              	.LFB1:
 120:.\source\bsw\json/jsmn.h **** 
 121:.\source\bsw\json/jsmn.h **** /**
 122:.\source\bsw\json/jsmn.h ****  * Fills token type and boundaries.
 123:.\source\bsw\json/jsmn.h ****  */
 124:.\source\bsw\json/jsmn.h **** static void jsmn_fill_token(jsmntok_t *token, const jsmntype_t type,
 125:.\source\bsw\json/jsmn.h ****                             const int start, const int end) {
  98              		.loc 1 125 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 5


 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 85B0     		sub	sp, sp, #20
 107              		.cfi_def_cfa_offset 24
 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110 0006 F860     		str	r0, [r7, #12]
 111 0008 7A60     		str	r2, [r7, #4]
 112 000a 3B60     		str	r3, [r7]
 113 000c 0B46     		mov	r3, r1
 114 000e FB72     		strb	r3, [r7, #11]
 126:.\source\bsw\json/jsmn.h ****   token->type = type;
 115              		.loc 1 126 0
 116 0010 FB68     		ldr	r3, [r7, #12]
 117 0012 FA7A     		ldrb	r2, [r7, #11]
 118 0014 1A70     		strb	r2, [r3]
 127:.\source\bsw\json/jsmn.h ****   token->start = start;
 119              		.loc 1 127 0
 120 0016 FB68     		ldr	r3, [r7, #12]
 121 0018 7A68     		ldr	r2, [r7, #4]
 122 001a 5A60     		str	r2, [r3, #4]
 128:.\source\bsw\json/jsmn.h ****   token->end = end;
 123              		.loc 1 128 0
 124 001c FB68     		ldr	r3, [r7, #12]
 125 001e 3A68     		ldr	r2, [r7]
 126 0020 9A60     		str	r2, [r3, #8]
 129:.\source\bsw\json/jsmn.h ****   token->size = 0;
 127              		.loc 1 129 0
 128 0022 FB68     		ldr	r3, [r7, #12]
 129 0024 0022     		movs	r2, #0
 130 0026 DA60     		str	r2, [r3, #12]
 130:.\source\bsw\json/jsmn.h **** }
 131              		.loc 1 130 0
 132 0028 00BF     		nop
 133 002a 1437     		adds	r7, r7, #20
 134              		.cfi_def_cfa_offset 4
 135 002c BD46     		mov	sp, r7
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 002e 80BC     		pop	{r7}
 139              		.cfi_restore 7
 140              		.cfi_def_cfa_offset 0
 141 0030 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	jsmn_fill_token, .-jsmn_fill_token
 145 0032 00BF     		.section	.text.jsmn_parse_primitive,"ax",%progbits
 146              		.align	2
 147              		.thumb
 148              		.thumb_func
 149              		.type	jsmn_parse_primitive, %function
 150              	jsmn_parse_primitive:
 151              	.LFB2:
 131:.\source\bsw\json/jsmn.h **** 
 132:.\source\bsw\json/jsmn.h **** /**
 133:.\source\bsw\json/jsmn.h ****  * Fills next available token with JSON primitive.
 134:.\source\bsw\json/jsmn.h ****  */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 6


 135:.\source\bsw\json/jsmn.h **** static int jsmn_parse_primitive(jsmn_parser *parser, const char *js,
 136:.\source\bsw\json/jsmn.h ****                                 const size_t len, jsmntok_t *tokens,
 137:.\source\bsw\json/jsmn.h ****                                 const size_t num_tokens) {
 152              		.loc 1 137 0
 153              		.cfi_startproc
 154              		@ args = 4, pretend = 0, frame = 24
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 86B0     		sub	sp, sp, #24
 161              		.cfi_def_cfa_offset 32
 162 0004 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 164 0006 F860     		str	r0, [r7, #12]
 165 0008 B960     		str	r1, [r7, #8]
 166 000a 7A60     		str	r2, [r7, #4]
 167 000c 3B60     		str	r3, [r7]
 138:.\source\bsw\json/jsmn.h ****   jsmntok_t *token;
 139:.\source\bsw\json/jsmn.h ****   int start;
 140:.\source\bsw\json/jsmn.h **** 
 141:.\source\bsw\json/jsmn.h ****   start = parser->pos;
 168              		.loc 1 141 0
 169 000e FB68     		ldr	r3, [r7, #12]
 170 0010 1B68     		ldr	r3, [r3]
 171 0012 7B61     		str	r3, [r7, #20]
 142:.\source\bsw\json/jsmn.h **** 
 143:.\source\bsw\json/jsmn.h ****   for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
 172              		.loc 1 143 0
 173 0014 34E0     		b	.L6
 174              	.L15:
 144:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 175              		.loc 1 144 0
 176 0016 FB68     		ldr	r3, [r7, #12]
 177 0018 1B68     		ldr	r3, [r3]
 178 001a BA68     		ldr	r2, [r7, #8]
 179 001c 1344     		add	r3, r3, r2
 180 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 181 0020 202B     		cmp	r3, #32
 182 0022 3AD0     		beq	.L19
 183 0024 202B     		cmp	r3, #32
 184 0026 06DC     		bgt	.L9
 185 0028 092B     		cmp	r3, #9
 186 002a 0FDB     		blt	.L20
 187 002c 0A2B     		cmp	r3, #10
 188 002e 34DD     		ble	.L19
 189 0030 0D2B     		cmp	r3, #13
 190 0032 32D0     		beq	.L19
 145:.\source\bsw\json/jsmn.h **** #ifndef JSMN_STRICT
 146:.\source\bsw\json/jsmn.h ****     /* In strict mode primitive must be followed by "," or "}" or "]" */
 147:.\source\bsw\json/jsmn.h ****     case ':':
 148:.\source\bsw\json/jsmn.h **** #endif
 149:.\source\bsw\json/jsmn.h ****     case '\t':
 150:.\source\bsw\json/jsmn.h ****     case '\r':
 151:.\source\bsw\json/jsmn.h ****     case '\n':
 152:.\source\bsw\json/jsmn.h ****     case ' ':
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 7


 153:.\source\bsw\json/jsmn.h ****     case ',':
 154:.\source\bsw\json/jsmn.h ****     case ']':
 155:.\source\bsw\json/jsmn.h ****     case '}':
 156:.\source\bsw\json/jsmn.h ****       goto found;
 157:.\source\bsw\json/jsmn.h ****     default:
 158:.\source\bsw\json/jsmn.h ****                    /* to quiet a warning from gcc*/
 159:.\source\bsw\json/jsmn.h ****       break;
 191              		.loc 1 159 0
 192 0034 0AE0     		b	.L20
 193              	.L9:
 144:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 194              		.loc 1 144 0
 195 0036 3A2B     		cmp	r3, #58
 196 0038 2FD0     		beq	.L19
 197 003a 3A2B     		cmp	r3, #58
 198 003c 02DC     		bgt	.L10
 199 003e 2C2B     		cmp	r3, #44
 200 0040 2BD0     		beq	.L19
 201              		.loc 1 159 0
 202 0042 03E0     		b	.L20
 203              	.L10:
 144:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 204              		.loc 1 144 0
 205 0044 5D2B     		cmp	r3, #93
 206 0046 28D0     		beq	.L19
 207 0048 7D2B     		cmp	r3, #125
 208 004a 26D0     		beq	.L19
 209              	.L20:
 210              		.loc 1 159 0
 211 004c 00BF     		nop
 160:.\source\bsw\json/jsmn.h ****     }
 161:.\source\bsw\json/jsmn.h ****     if (js[parser->pos] < 32 || js[parser->pos] >= 127) {
 212              		.loc 1 161 0
 213 004e FB68     		ldr	r3, [r7, #12]
 214 0050 1B68     		ldr	r3, [r3]
 215 0052 BA68     		ldr	r2, [r7, #8]
 216 0054 1344     		add	r3, r3, r2
 217 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 218 0058 1F2B     		cmp	r3, #31
 219 005a 06D9     		bls	.L12
 220              		.loc 1 161 0 is_stmt 0 discriminator 1
 221 005c FB68     		ldr	r3, [r7, #12]
 222 005e 1B68     		ldr	r3, [r3]
 223 0060 BA68     		ldr	r2, [r7, #8]
 224 0062 1344     		add	r3, r3, r2
 225 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 226 0066 7E2B     		cmp	r3, #126
 227 0068 05D9     		bls	.L13
 228              	.L12:
 162:.\source\bsw\json/jsmn.h ****       parser->pos = start;
 229              		.loc 1 162 0 is_stmt 1
 230 006a 7A69     		ldr	r2, [r7, #20]
 231 006c FB68     		ldr	r3, [r7, #12]
 232 006e 1A60     		str	r2, [r3]
 163:.\source\bsw\json/jsmn.h ****       return JSMN_ERROR_INVAL;
 233              		.loc 1 163 0
 234 0070 6FF00103 		mvn	r3, #1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 8


 235 0074 38E0     		b	.L14
 236              	.L13:
 143:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 237              		.loc 1 143 0
 238 0076 FB68     		ldr	r3, [r7, #12]
 239 0078 1B68     		ldr	r3, [r3]
 240 007a 5A1C     		adds	r2, r3, #1
 241 007c FB68     		ldr	r3, [r7, #12]
 242 007e 1A60     		str	r2, [r3]
 243              	.L6:
 143:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 244              		.loc 1 143 0 is_stmt 0 discriminator 1
 245 0080 FB68     		ldr	r3, [r7, #12]
 246 0082 1A68     		ldr	r2, [r3]
 247 0084 7B68     		ldr	r3, [r7, #4]
 248 0086 9A42     		cmp	r2, r3
 249 0088 08D2     		bcs	.L11
 143:.\source\bsw\json/jsmn.h ****     switch (js[parser->pos]) {
 250              		.loc 1 143 0 discriminator 2
 251 008a FB68     		ldr	r3, [r7, #12]
 252 008c 1B68     		ldr	r3, [r3]
 253 008e BA68     		ldr	r2, [r7, #8]
 254 0090 1344     		add	r3, r3, r2
 255 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 256 0094 002B     		cmp	r3, #0
 257 0096 BED1     		bne	.L15
 258 0098 00E0     		b	.L11
 259              	.L19:
 156:.\source\bsw\json/jsmn.h ****     default:
 260              		.loc 1 156 0 is_stmt 1
 261 009a 00BF     		nop
 262              	.L11:
 164:.\source\bsw\json/jsmn.h ****     }
 165:.\source\bsw\json/jsmn.h ****   }
 166:.\source\bsw\json/jsmn.h **** #ifdef JSMN_STRICT
 167:.\source\bsw\json/jsmn.h ****   /* In strict mode primitive must be followed by a comma/object/array */
 168:.\source\bsw\json/jsmn.h ****   parser->pos = start;
 169:.\source\bsw\json/jsmn.h ****   return JSMN_ERROR_PART;
 170:.\source\bsw\json/jsmn.h **** #endif
 171:.\source\bsw\json/jsmn.h **** 
 172:.\source\bsw\json/jsmn.h **** found:
 173:.\source\bsw\json/jsmn.h ****   if (tokens == NULL) {
 263              		.loc 1 173 0
 264 009c 3B68     		ldr	r3, [r7]
 265 009e 002B     		cmp	r3, #0
 266 00a0 06D1     		bne	.L16
 174:.\source\bsw\json/jsmn.h ****     parser->pos--;
 267              		.loc 1 174 0
 268 00a2 FB68     		ldr	r3, [r7, #12]
 269 00a4 1B68     		ldr	r3, [r3]
 270 00a6 5A1E     		subs	r2, r3, #1
 271 00a8 FB68     		ldr	r3, [r7, #12]
 272 00aa 1A60     		str	r2, [r3]
 175:.\source\bsw\json/jsmn.h ****     return 0;
 273              		.loc 1 175 0
 274 00ac 0023     		movs	r3, #0
 275 00ae 1BE0     		b	.L14
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 9


 276              	.L16:
 176:.\source\bsw\json/jsmn.h ****   }
 177:.\source\bsw\json/jsmn.h ****   token = jsmn_alloc_token(parser, tokens, num_tokens);
 277              		.loc 1 177 0
 278 00b0 3A6A     		ldr	r2, [r7, #32]
 279 00b2 3968     		ldr	r1, [r7]
 280 00b4 F868     		ldr	r0, [r7, #12]
 281 00b6 FFF7FEFF 		bl	jsmn_alloc_token
 282 00ba 3861     		str	r0, [r7, #16]
 178:.\source\bsw\json/jsmn.h ****   if (token == NULL) {
 283              		.loc 1 178 0
 284 00bc 3B69     		ldr	r3, [r7, #16]
 285 00be 002B     		cmp	r3, #0
 286 00c0 05D1     		bne	.L17
 179:.\source\bsw\json/jsmn.h ****     parser->pos = start;
 287              		.loc 1 179 0
 288 00c2 7A69     		ldr	r2, [r7, #20]
 289 00c4 FB68     		ldr	r3, [r7, #12]
 290 00c6 1A60     		str	r2, [r3]
 180:.\source\bsw\json/jsmn.h ****     return JSMN_ERROR_NOMEM;
 291              		.loc 1 180 0
 292 00c8 4FF0FF33 		mov	r3, #-1
 293 00cc 0CE0     		b	.L14
 294              	.L17:
 181:.\source\bsw\json/jsmn.h ****   }
 182:.\source\bsw\json/jsmn.h ****   jsmn_fill_token(token, JSMN_PRIMITIVE, start, parser->pos);
 295              		.loc 1 182 0
 296 00ce FB68     		ldr	r3, [r7, #12]
 297 00d0 1B68     		ldr	r3, [r3]
 298 00d2 7A69     		ldr	r2, [r7, #20]
 299 00d4 0821     		movs	r1, #8
 300 00d6 3869     		ldr	r0, [r7, #16]
 301 00d8 FFF7FEFF 		bl	jsmn_fill_token
 183:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
 184:.\source\bsw\json/jsmn.h ****   token->parent = parser->toksuper;
 185:.\source\bsw\json/jsmn.h **** #endif
 186:.\source\bsw\json/jsmn.h ****   parser->pos--;
 302              		.loc 1 186 0
 303 00dc FB68     		ldr	r3, [r7, #12]
 304 00de 1B68     		ldr	r3, [r3]
 305 00e0 5A1E     		subs	r2, r3, #1
 306 00e2 FB68     		ldr	r3, [r7, #12]
 307 00e4 1A60     		str	r2, [r3]
 187:.\source\bsw\json/jsmn.h ****   return 0;
 308              		.loc 1 187 0
 309 00e6 0023     		movs	r3, #0
 310              	.L14:
 188:.\source\bsw\json/jsmn.h **** }
 311              		.loc 1 188 0
 312 00e8 1846     		mov	r0, r3
 313 00ea 1837     		adds	r7, r7, #24
 314              		.cfi_def_cfa_offset 8
 315 00ec BD46     		mov	sp, r7
 316              		.cfi_def_cfa_register 13
 317              		@ sp needed
 318 00ee 80BD     		pop	{r7, pc}
 319              		.cfi_endproc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 10


 320              	.LFE2:
 321              		.size	jsmn_parse_primitive, .-jsmn_parse_primitive
 322              		.section	.text.jsmn_parse_string,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	jsmn_parse_string, %function
 327              	jsmn_parse_string:
 328              	.LFB3:
 189:.\source\bsw\json/jsmn.h **** 
 190:.\source\bsw\json/jsmn.h **** /**
 191:.\source\bsw\json/jsmn.h ****  * Fills next token with JSON string.
 192:.\source\bsw\json/jsmn.h ****  */
 193:.\source\bsw\json/jsmn.h **** static int jsmn_parse_string(jsmn_parser *parser, const char *js,
 194:.\source\bsw\json/jsmn.h ****                              const size_t len, jsmntok_t *tokens,
 195:.\source\bsw\json/jsmn.h ****                              const size_t num_tokens) {
 329              		.loc 1 195 0
 330              		.cfi_startproc
 331              		@ args = 4, pretend = 0, frame = 32
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 88B0     		sub	sp, sp, #32
 338              		.cfi_def_cfa_offset 40
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 341 0006 F860     		str	r0, [r7, #12]
 342 0008 B960     		str	r1, [r7, #8]
 343 000a 7A60     		str	r2, [r7, #4]
 344 000c 3B60     		str	r3, [r7]
 196:.\source\bsw\json/jsmn.h ****   jsmntok_t *token;
 197:.\source\bsw\json/jsmn.h **** 
 198:.\source\bsw\json/jsmn.h ****   int start = parser->pos;
 345              		.loc 1 198 0
 346 000e FB68     		ldr	r3, [r7, #12]
 347 0010 1B68     		ldr	r3, [r3]
 348 0012 BB61     		str	r3, [r7, #24]
 199:.\source\bsw\json/jsmn.h ****   
 200:.\source\bsw\json/jsmn.h ****   /* Skip starting quote */
 201:.\source\bsw\json/jsmn.h ****   parser->pos++;
 349              		.loc 1 201 0
 350 0014 FB68     		ldr	r3, [r7, #12]
 351 0016 1B68     		ldr	r3, [r3]
 352 0018 5A1C     		adds	r2, r3, #1
 353 001a FB68     		ldr	r3, [r7, #12]
 354 001c 1A60     		str	r2, [r3]
 202:.\source\bsw\json/jsmn.h ****   
 203:.\source\bsw\json/jsmn.h ****   for (; parser->pos < len && js[parser->pos] != '\0'; parser->pos++) {
 355              		.loc 1 203 0
 356 001e 4CE1     		b	.L22
 357              	.L40:
 358              	.LBB2:
 204:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 359              		.loc 1 204 0
 360 0020 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 11


 361 0022 1B68     		ldr	r3, [r3]
 362 0024 BA68     		ldr	r2, [r7, #8]
 363 0026 1344     		add	r3, r3, r2
 364 0028 1B78     		ldrb	r3, [r3]
 365 002a FB75     		strb	r3, [r7, #23]
 205:.\source\bsw\json/jsmn.h **** 
 206:.\source\bsw\json/jsmn.h ****     /* Quote: end of string */
 207:.\source\bsw\json/jsmn.h ****     if (c == '\"') {
 366              		.loc 1 207 0
 367 002c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 368 002e 222B     		cmp	r3, #34
 369 0030 1DD1     		bne	.L23
 208:.\source\bsw\json/jsmn.h ****       if (tokens == NULL) {
 370              		.loc 1 208 0
 371 0032 3B68     		ldr	r3, [r7]
 372 0034 002B     		cmp	r3, #0
 373 0036 01D1     		bne	.L24
 209:.\source\bsw\json/jsmn.h ****         return 0;
 374              		.loc 1 209 0
 375 0038 0023     		movs	r3, #0
 376 003a 50E1     		b	.L25
 377              	.L24:
 210:.\source\bsw\json/jsmn.h ****       }
 211:.\source\bsw\json/jsmn.h ****       token = jsmn_alloc_token(parser, tokens, num_tokens);
 378              		.loc 1 211 0
 379 003c BA6A     		ldr	r2, [r7, #40]
 380 003e 3968     		ldr	r1, [r7]
 381 0040 F868     		ldr	r0, [r7, #12]
 382 0042 FFF7FEFF 		bl	jsmn_alloc_token
 383 0046 3861     		str	r0, [r7, #16]
 212:.\source\bsw\json/jsmn.h ****       if (token == NULL) {
 384              		.loc 1 212 0
 385 0048 3B69     		ldr	r3, [r7, #16]
 386 004a 002B     		cmp	r3, #0
 387 004c 05D1     		bne	.L26
 213:.\source\bsw\json/jsmn.h ****         parser->pos = start;
 388              		.loc 1 213 0
 389 004e BA69     		ldr	r2, [r7, #24]
 390 0050 FB68     		ldr	r3, [r7, #12]
 391 0052 1A60     		str	r2, [r3]
 214:.\source\bsw\json/jsmn.h ****         return JSMN_ERROR_NOMEM;
 392              		.loc 1 214 0
 393 0054 4FF0FF33 		mov	r3, #-1
 394 0058 41E1     		b	.L25
 395              	.L26:
 215:.\source\bsw\json/jsmn.h ****       }
 216:.\source\bsw\json/jsmn.h ****       jsmn_fill_token(token, JSMN_STRING, start + 1, parser->pos);
 396              		.loc 1 216 0
 397 005a BB69     		ldr	r3, [r7, #24]
 398 005c 5A1C     		adds	r2, r3, #1
 399 005e FB68     		ldr	r3, [r7, #12]
 400 0060 1B68     		ldr	r3, [r3]
 401 0062 0421     		movs	r1, #4
 402 0064 3869     		ldr	r0, [r7, #16]
 403 0066 FFF7FEFF 		bl	jsmn_fill_token
 217:.\source\bsw\json/jsmn.h **** #ifdef JSMN_PARENT_LINKS
 218:.\source\bsw\json/jsmn.h ****       token->parent = parser->toksuper;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 12


 219:.\source\bsw\json/jsmn.h **** #endif
 220:.\source\bsw\json/jsmn.h ****       return 0;
 404              		.loc 1 220 0
 405 006a 0023     		movs	r3, #0
 406 006c 37E1     		b	.L25
 407              	.L23:
 221:.\source\bsw\json/jsmn.h ****     }
 222:.\source\bsw\json/jsmn.h **** 
 223:.\source\bsw\json/jsmn.h ****     /* Backslash: Quoted symbol expected */
 224:.\source\bsw\json/jsmn.h ****     if (c == '\\' && parser->pos + 1 < len) {
 408              		.loc 1 224 0
 409 006e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 410 0070 5C2B     		cmp	r3, #92
 411 0072 40F01D81 		bne	.L27
 412              		.loc 1 224 0 is_stmt 0 discriminator 1
 413 0076 FB68     		ldr	r3, [r7, #12]
 414 0078 1B68     		ldr	r3, [r3]
 415 007a 5A1C     		adds	r2, r3, #1
 416 007c 7B68     		ldr	r3, [r7, #4]
 417 007e 9A42     		cmp	r2, r3
 418 0080 80F01681 		bcs	.L27
 419              	.LBB3:
 225:.\source\bsw\json/jsmn.h ****       int i;
 226:.\source\bsw\json/jsmn.h ****       parser->pos++;
 420              		.loc 1 226 0 is_stmt 1
 421 0084 FB68     		ldr	r3, [r7, #12]
 422 0086 1B68     		ldr	r3, [r3]
 423 0088 5A1C     		adds	r2, r3, #1
 424 008a FB68     		ldr	r3, [r7, #12]
 425 008c 1A60     		str	r2, [r3]
 227:.\source\bsw\json/jsmn.h ****       switch (js[parser->pos]) {
 426              		.loc 1 227 0
 427 008e FB68     		ldr	r3, [r7, #12]
 428 0090 1B68     		ldr	r3, [r3]
 429 0092 BA68     		ldr	r2, [r7, #8]
 430 0094 1344     		add	r3, r3, r2
 431 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 0098 223B     		subs	r3, r3, #34
 433 009a 532B     		cmp	r3, #83
 434 009c 00F20181 		bhi	.L28
 435 00a0 01A2     		adr	r2, .L30
 436 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 437 00a6 00BF     		.p2align 2
 438              	.L30:
 439 00a8 AF020000 		.word	.L41+1
 440 00ac A3020000 		.word	.L28+1
 441 00b0 A3020000 		.word	.L28+1
 442 00b4 A3020000 		.word	.L28+1
 443 00b8 A3020000 		.word	.L28+1
 444 00bc A3020000 		.word	.L28+1
 445 00c0 A3020000 		.word	.L28+1
 446 00c4 A3020000 		.word	.L28+1
 447 00c8 A3020000 		.word	.L28+1
 448 00cc A3020000 		.word	.L28+1
 449 00d0 A3020000 		.word	.L28+1
 450 00d4 A3020000 		.word	.L28+1
 451 00d8 A3020000 		.word	.L28+1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 13


 452 00dc AF020000 		.word	.L41+1
 453 00e0 A3020000 		.word	.L28+1
 454 00e4 A3020000 		.word	.L28+1
 455 00e8 A3020000 		.word	.L28+1
 456 00ec A3020000 		.word	.L28+1
 457 00f0 A3020000 		.word	.L28+1
 458 00f4 A3020000 		.word	.L28+1
 459 00f8 A3020000 		.word	.L28+1
 460 00fc A3020000 		.word	.L28+1
 461 0100 A3020000 		.word	.L28+1
 462 0104 A3020000 		.word	.L28+1
 463 0108 A3020000 		.word	.L28+1
 464 010c A3020000 		.word	.L28+1
 465 0110 A3020000 		.word	.L28+1
 466 0114 A3020000 		.word	.L28+1
 467 0118 A3020000 		.word	.L28+1
 468 011c A3020000 		.word	.L28+1
 469 0120 A3020000 		.word	.L28+1
 470 0124 A3020000 		.word	.L28+1
 471 0128 A3020000 		.word	.L28+1
 472 012c A3020000 		.word	.L28+1
 473 0130 A3020000 		.word	.L28+1
 474 0134 A3020000 		.word	.L28+1
 475 0138 A3020000 		.word	.L28+1
 476 013c A3020000 		.word	.L28+1
 477 0140 A3020000 		.word	.L28+1
 478 0144 A3020000 		.word	.L28+1
 479 0148 A3020000 		.word	.L28+1
 480 014c A3020000 		.word	.L28+1
 481 0150 A3020000 		.word	.L28+1
 482 0154 A3020000 		.word	.L28+1
 483 0158 A3020000 		.word	.L28+1
 484 015c A3020000 		.word	.L28+1
 485 0160 A3020000 		.word	.L28+1
 486 0164 A3020000 		.word	.L28+1
 487 0168 A3020000 		.word	.L28+1
 488 016c A3020000 		.word	.L28+1
 489 0170 A3020000 		.word	.L28+1
 490 0174 A3020000 		.word	.L28+1
 491 0178 A3020000 		.word	.L28+1
 492 017c A3020000 		.word	.L28+1
 493 0180 A3020000 		.word	.L28+1
 494 0184 A3020000 		.word	.L28+1
 495 0188 A3020000 		.word	.L28+1
 496 018c A3020000 		.word	.L28+1
 497 0190 AF020000 		.word	.L41+1
 498 0194 A3020000 		.word	.L28+1
 499 0198 A3020000 		.word	.L28+1
 500 019c A3020000 		.word	.L28+1
 501 01a0 A3020000 		.word	.L28+1
 502 01a4 A3020000 		.word	.L28+1
 503 01a8 AF020000 		.word	.L41+1
 504 01ac A3020000 		.word	.L28+1
 505 01b0 A3020000 		.word	.L28+1
 506 01b4 A3020000 		.word	.L28+1
 507 01b8 AF020000 		.word	.L41+1
 508 01bc A3020000 		.word	.L28+1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 14


 509 01c0 A3020000 		.word	.L28+1
 510 01c4 A3020000 		.word	.L28+1
 511 01c8 A3020000 		.word	.L28+1
 512 01cc A3020000 		.word	.L28+1
 513 01d0 A3020000 		.word	.L28+1
 514 01d4 A3020000 		.word	.L28+1
 515 01d8 AF020000 		.word	.L41+1
 516 01dc A3020000 		.word	.L28+1
 517 01e0 A3020000 		.word	.L28+1
 518 01e4 A3020000 		.word	.L28+1
 519 01e8 AF020000 		.word	.L41+1
 520 01ec A3020000 		.word	.L28+1
 521 01f0 AF020000 		.word	.L41+1
 522 01f4 F9010000 		.word	.L31+1
 523              		.p2align 1
 524              	.L31:
 228:.\source\bsw\json/jsmn.h ****       /* Allowed escaped symbols */
 229:.\source\bsw\json/jsmn.h ****       case '\"':
 230:.\source\bsw\json/jsmn.h ****       case '/':
 231:.\source\bsw\json/jsmn.h ****       case '\\':
 232:.\source\bsw\json/jsmn.h ****       case 'b':
 233:.\source\bsw\json/jsmn.h ****       case 'f':
 234:.\source\bsw\json/jsmn.h ****       case 'r':
 235:.\source\bsw\json/jsmn.h ****       case 'n':
 236:.\source\bsw\json/jsmn.h ****       case 't':
 237:.\source\bsw\json/jsmn.h ****         break;
 238:.\source\bsw\json/jsmn.h ****       /* Allows escaped symbol \uXXXX */
 239:.\source\bsw\json/jsmn.h ****       case 'u':
 240:.\source\bsw\json/jsmn.h ****         parser->pos++;
 525              		.loc 1 240 0
 526 01f8 FB68     		ldr	r3, [r7, #12]
 527 01fa 1B68     		ldr	r3, [r3]
 528 01fc 5A1C     		adds	r2, r3, #1
 529 01fe FB68     		ldr	r3, [r7, #12]
 530 0200 1A60     		str	r2, [r3]
 241:.\source\bsw\json/jsmn.h ****         for (i = 0; i < 4 && parser->pos < len && js[parser->pos] != '\0';
 531              		.loc 1 241 0
 532 0202 0023     		movs	r3, #0
 533 0204 FB61     		str	r3, [r7, #28]
 534 0206 37E0     		b	.L32
 535              	.L38:
 242:.\source\bsw\json/jsmn.h ****              i++) {
 243:.\source\bsw\json/jsmn.h ****           /* If it isn't a hex character we have an error */
 244:.\source\bsw\json/jsmn.h ****           if (!((js[parser->pos] >= 48 && js[parser->pos] <= 57) ||   /* 0-9 */
 536              		.loc 1 244 0
 537 0208 FB68     		ldr	r3, [r7, #12]
 538 020a 1B68     		ldr	r3, [r3]
 539 020c BA68     		ldr	r2, [r7, #8]
 540 020e 1344     		add	r3, r3, r2
 541 0210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 542 0212 2F2B     		cmp	r3, #47
 543 0214 06D9     		bls	.L33
 544              		.loc 1 244 0 is_stmt 0 discriminator 2
 545 0216 FB68     		ldr	r3, [r7, #12]
 546 0218 1B68     		ldr	r3, [r3]
 547 021a BA68     		ldr	r2, [r7, #8]
 548 021c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 15


 549 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 0220 392B     		cmp	r3, #57
 551 0222 21D9     		bls	.L34
 552              	.L33:
 245:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
 553              		.loc 1 245 0 is_stmt 1 discriminator 3
 554 0224 FB68     		ldr	r3, [r7, #12]
 555 0226 1B68     		ldr	r3, [r3]
 556 0228 BA68     		ldr	r2, [r7, #8]
 557 022a 1344     		add	r3, r3, r2
 558 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
 559              		.loc 1 244 0 discriminator 3
 560 022e 402B     		cmp	r3, #64
 561 0230 06D9     		bls	.L35
 562              		.loc 1 245 0
 563 0232 FB68     		ldr	r3, [r7, #12]
 564 0234 1B68     		ldr	r3, [r3]
 565 0236 BA68     		ldr	r2, [r7, #8]
 566 0238 1344     		add	r3, r3, r2
 567 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 568 023c 462B     		cmp	r3, #70
 569 023e 13D9     		bls	.L34
 570              	.L35:
 246:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 97 && js[parser->pos] <= 102))) { /* a-f */
 571              		.loc 1 246 0 discriminator 4
 572 0240 FB68     		ldr	r3, [r7, #12]
 573 0242 1B68     		ldr	r3, [r3]
 574 0244 BA68     		ldr	r2, [r7, #8]
 575 0246 1344     		add	r3, r3, r2
 576 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244:.\source\bsw\json/jsmn.h ****                 (js[parser->pos] >= 65 && js[parser->pos] <= 70) ||   /* A-F */
 577              		.loc 1 244 0 discriminator 4
 578 024a 602B     		cmp	r3, #96
 579 024c 06D9     		bls	.L36
 580              		.loc 1 246 0
 581 024e FB68     		ldr	r3, [r7, #12]
 582 0250 1B68     		ldr	r3, [r3]
 583 0252 BA68     		ldr	r2, [r7, #8]
 584 0254 1344     		add	r3, r3, r2
 585 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 586 0258 662B     		cmp	r3, #102
 587 025a 05D9     		bls	.L34
 588              	.L36:
 247:.\source\bsw\json/jsmn.h ****             parser->pos = start;
 589              		.loc 1 247 0
 590 025c BA69     		ldr	r2, [r7, #24]
 591 025e FB68     		ldr	r3, [r7, #12]
 592 0260 1A60     		str	r2, [r3]
 248:.\source\bsw\json/jsmn.h ****             return JSMN_ERROR_INVAL;
 593              		.loc 1 248 0
 594 0262 6FF00103 		mvn	r3, #1
 595 0266 3AE0     		b	.L25
 596              	.L34:
 249:.\source\bsw\json/jsmn.h ****           }
 250:.\source\bsw\json/jsmn.h ****           parser->pos++;
 597              		.loc 1 250 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 16


 598 0268 FB68     		ldr	r3, [r7, #12]
 599 026a 1B68     		ldr	r3, [r3]
 600 026c 5A1C     		adds	r2, r3, #1
 601 026e FB68     		ldr	r3, [r7, #12]
 602 0270 1A60     		str	r2, [r3]
 242:.\source\bsw\json/jsmn.h ****           /* If it isn't a hex character we have an error */
 603              		.loc 1 242 0
 604 0272 FB69     		ldr	r3, [r7, #28]
 605 0274 0133     		adds	r3, r3, #1
 606 0276 FB61     		str	r3, [r7, #28]
 607              	.L32:
 241:.\source\bsw\json/jsmn.h ****              i++) {
 608              		.loc 1 241 0 discriminator 1
 609 0278 FB69     		ldr	r3, [r7, #28]
 610 027a 032B     		cmp	r3, #3
 611 027c 0BDC     		bgt	.L37
 241:.\source\bsw\json/jsmn.h ****              i++) {
 612              		.loc 1 241 0 is_stmt 0 discriminator 2
 613 027e FB68     		ldr	r3, [r7, #12]
 614 0280 1A68     		ldr	r2, [r3]
 615 0282 7B68     		ldr	r3, [r7, #4]
 616 0284 9A42     		cmp	r2, r3
 617 0286 06D2     		bcs	.L37
 241:.\source\bsw\json/jsmn.h ****              i++) {
 618              		.loc 1 241 0 discriminator 3
 619 0288 FB68     		ldr	r3, [r7, #12]
 620 028a 1B68     		ldr	r3, [r3]
 621 028c BA68     		ldr	r2, [r7, #8]
 622 028e 1344     		add	r3, r3, r2
 623 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 0292 002B     		cmp	r3, #0
 625 0294 B8D1     		bne	.L38
 626              	.L37:
 251:.\source\bsw\json/jsmn.h ****         }
 252:.\source\bsw\json/jsmn.h ****         parser->pos--;
 627              		.loc 1 252 0 is_stmt 1
 628 0296 FB68     		ldr	r3, [r7, #12]
 629 0298 1B68     		ldr	r3, [r3]
 630 029a 5A1E     		subs	r2, r3, #1
 631 029c FB68     		ldr	r3, [r7, #12]
 632 029e 1A60     		str	r2, [r3]
 253:.\source\bsw\json/jsmn.h ****         break;
 633              		.loc 1 253 0
 634 02a0 06E0     		b	.L27
 635              	.L28:
 254:.\source\bsw\json/jsmn.h ****       /* Unexpected symbol */
 255:.\source\bsw\json/jsmn.h ****       default:
 256:.\source\bsw\json/jsmn.h ****         parser->pos = start;
 636              		.loc 1 256 0
 637 02a2 BA69     		ldr	r2, [r7, #24]
 638 02a4 FB68     		ldr	r3, [r7, #12]
 639 02a6 1A60     		str	r2, [r3]
 257:.\source\bsw\json/jsmn.h ****         return JSMN_ERROR_INVAL;
 640              		.loc 1 257 0
 641 02a8 6FF00103 		mvn	r3, #1
 642 02ac 17E0     		b	.L25
 643              	.L41:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 17


 237:.\source\bsw\json/jsmn.h ****       /* Allows escaped symbol \uXXXX */
 644              		.loc 1 237 0
 645 02ae 00BF     		nop
 646              	.L27:
 647              	.LBE3:
 648              	.LBE2:
 203:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 649              		.loc 1 203 0
 650 02b0 FB68     		ldr	r3, [r7, #12]
 651 02b2 1B68     		ldr	r3, [r3]
 652 02b4 5A1C     		adds	r2, r3, #1
 653 02b6 FB68     		ldr	r3, [r7, #12]
 654 02b8 1A60     		str	r2, [r3]
 655              	.L22:
 203:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 656              		.loc 1 203 0 is_stmt 0 discriminator 1
 657 02ba FB68     		ldr	r3, [r7, #12]
 658 02bc 1A68     		ldr	r2, [r3]
 659 02be 7B68     		ldr	r3, [r7, #4]
 660 02c0 9A42     		cmp	r2, r3
 661 02c2 07D2     		bcs	.L39
 203:.\source\bsw\json/jsmn.h ****     char c = js[parser->pos];
 662              		.loc 1 203 0 discriminator 2
 663 02c4 FB68     		ldr	r3, [r7, #12]
 664 02c6 1B68     		ldr	r3, [r3]
 665 02c8 BA68     		ldr	r2, [r7, #8]
 666 02ca 1344     		add	r3, r3, r2
 667 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 668 02ce 002B     		cmp	r3, #0
 669 02d0 7FF4A6AE 		bne	.L40
 670              	.L39:
 258:.\source\bsw\json/jsmn.h ****       }
 259:.\source\bsw\json/jsmn.h ****     }
 260:.\source\bsw\json/jsmn.h ****   }
 261:.\source\bsw\json/jsmn.h ****   parser->pos = start;
 671              		.loc 1 261 0 is_stmt 1
 672 02d4 BA69     		ldr	r2, [r7, #24]
 673 02d6 FB68     		ldr	r3, [r7, #12]
 674 02d8 1A60     		str	r2, [r3]
 262:.\source\bsw\json/jsmn.h ****   return JSMN_ERROR_PART;
 675              		.loc 1 262 0
 676 02da 6FF00203 		mvn	r3, #2
 677              	.L25:
 263:.\source\bsw\json/jsmn.h **** }
 678              		.loc 1 263 0
 679 02de 1846     		mov	r0, r3
 680 02e0 2037     		adds	r7, r7, #32
 681              		.cfi_def_cfa_offset 8
 682 02e2 BD46     		mov	sp, r7
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 02e4 80BD     		pop	{r7, pc}
 686              		.cfi_endproc
 687              	.LFE3:
 688              		.size	jsmn_parse_string, .-jsmn_parse_string
 689              		.comm	drawer_commands,70,4
 690 02e6 00BF     		.section	.text.mb_ringbufferInit,"ax",%progbits
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 18


 691              		.align	2
 692              		.global	mb_ringbufferInit
 693              		.thumb
 694              		.thumb_func
 695              		.type	mb_ringbufferInit, %function
 696              	mb_ringbufferInit:
 697              	.LFB115:
 698              		.file 2 "message.c"
   1:message.c     **** /* ========================================
   2:message.c     ****  *
   3:message.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:message.c     ****  * All Rights Reserved
   5:message.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:message.c     ****  *
   7:message.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:message.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:message.c     ****  *
  10:message.c     ****  * ========================================
  11:message.c     **** */
  12:message.c     **** #include "message.h"
  13:message.c     **** 
  14:message.c     **** RC_t mb_ringbufferInit(messagebox_t* const me){
 699              		.loc 2 14 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 16
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 84B0     		sub	sp, sp, #16
 708              		.cfi_def_cfa_offset 24
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
  15:message.c     ****     me->mb_readIndex = 0;
 712              		.loc 2 15 0
 713 0008 7B68     		ldr	r3, [r7, #4]
 714 000a 0022     		movs	r2, #0
 715 000c A3F82023 		strh	r2, [r3, #800]	@ movhi
  16:message.c     ****     me->mb_writeIndex = 0;
 716              		.loc 2 16 0
 717 0010 7B68     		ldr	r3, [r7, #4]
 718 0012 0022     		movs	r2, #0
 719 0014 A3F82223 		strh	r2, [r3, #802]	@ movhi
  17:message.c     ****     me->mb_fillLevel = 0;
 720              		.loc 2 17 0
 721 0018 7B68     		ldr	r3, [r7, #4]
 722 001a 0022     		movs	r2, #0
 723 001c A3F82423 		strh	r2, [r3, #804]	@ movhi
  18:message.c     ****     me->mb_size = POSTBOX_SIZE;
 724              		.loc 2 18 0
 725 0020 7B68     		ldr	r3, [r7, #4]
 726 0022 6422     		movs	r2, #100
 727 0024 A3F82623 		strh	r2, [r3, #806]	@ movhi
  19:message.c     ****     me->mb_ev = MB_NOEVENT;
 728              		.loc 2 19 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 19


 729 0028 7B68     		ldr	r3, [r7, #4]
 730 002a 0222     		movs	r2, #2
 731 002c 83F82A23 		strb	r2, [r3, #810]
  20:message.c     ****     me->mb_taskType = MB_NOTASK;
 732              		.loc 2 20 0
 733 0030 7B68     		ldr	r3, [r7, #4]
 734 0032 0222     		movs	r2, #2
 735 0034 83F82923 		strb	r2, [r3, #809]
 736              	.LBB4:
  21:message.c     ****     for(int i = 0 ; i < POSTBOX_SIZE; i++){
 737              		.loc 2 21 0
 738 0038 0023     		movs	r3, #0
 739 003a FB60     		str	r3, [r7, #12]
 740 003c 08E0     		b	.L43
 741              	.L44:
  22:message.c     ****          me->mb_buffer[i].m_pBuffer = NULL;   
 742              		.loc 2 22 0 discriminator 3
 743 003e 7A68     		ldr	r2, [r7, #4]
 744 0040 FB68     		ldr	r3, [r7, #12]
 745 0042 DB00     		lsls	r3, r3, #3
 746 0044 1344     		add	r3, r3, r2
 747 0046 0022     		movs	r2, #0
 748 0048 5A60     		str	r2, [r3, #4]
  21:message.c     ****     for(int i = 0 ; i < POSTBOX_SIZE; i++){
 749              		.loc 2 21 0 discriminator 3
 750 004a FB68     		ldr	r3, [r7, #12]
 751 004c 0133     		adds	r3, r3, #1
 752 004e FB60     		str	r3, [r7, #12]
 753              	.L43:
  21:message.c     ****     for(int i = 0 ; i < POSTBOX_SIZE; i++){
 754              		.loc 2 21 0 is_stmt 0 discriminator 1
 755 0050 FB68     		ldr	r3, [r7, #12]
 756 0052 632B     		cmp	r3, #99
 757 0054 F3DD     		ble	.L44
 758              	.LBE4:
  23:message.c     ****     }
  24:message.c     ****     dw_ringbufferInit(&drawer_commands);
 759              		.loc 2 24 0 is_stmt 1
 760 0056 0448     		ldr	r0, .L46
 761 0058 FFF7FEFF 		bl	dw_ringbufferInit
  25:message.c     ****     return RC_SUCCESS;   
 762              		.loc 2 25 0
 763 005c 0023     		movs	r3, #0
  26:message.c     **** }
 764              		.loc 2 26 0
 765 005e 1846     		mov	r0, r3
 766 0060 1037     		adds	r7, r7, #16
 767              		.cfi_def_cfa_offset 8
 768 0062 BD46     		mov	sp, r7
 769              		.cfi_def_cfa_register 13
 770              		@ sp needed
 771 0064 80BD     		pop	{r7, pc}
 772              	.L47:
 773 0066 00BF     		.align	2
 774              	.L46:
 775 0068 00000000 		.word	drawer_commands
 776              		.cfi_endproc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 20


 777              	.LFE115:
 778              		.size	mb_ringbufferInit, .-mb_ringbufferInit
 779              		.section	.text.mb_setHMIEventAndTaskType,"ax",%progbits
 780              		.align	2
 781              		.global	mb_setHMIEventAndTaskType
 782              		.thumb
 783              		.thumb_func
 784              		.type	mb_setHMIEventAndTaskType, %function
 785              	mb_setHMIEventAndTaskType:
 786              	.LFB116:
  27:message.c     **** RC_t mb_setHMIEventAndTaskType(messagebox_t * const me,MB_EventMaskType ev, MB_TaskType tsk)
  28:message.c     **** {
 787              		.loc 2 28 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 16
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792 0000 80B4     		push	{r7}
 793              		.cfi_def_cfa_offset 4
 794              		.cfi_offset 7, -4
 795 0002 85B0     		sub	sp, sp, #20
 796              		.cfi_def_cfa_offset 24
 797 0004 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
 799 0006 7860     		str	r0, [r7, #4]
 800 0008 0B46     		mov	r3, r1
 801 000a FB70     		strb	r3, [r7, #3]
 802 000c 1346     		mov	r3, r2
 803 000e BB70     		strb	r3, [r7, #2]
  29:message.c     ****     RC_t res = RC_SUCCESS;
 804              		.loc 2 29 0
 805 0010 0023     		movs	r3, #0
 806 0012 FB73     		strb	r3, [r7, #15]
  30:message.c     ****     //GetResource(res_messagebox);
  31:message.c     ****     me->mb_taskType = tsk;
 807              		.loc 2 31 0
 808 0014 7B68     		ldr	r3, [r7, #4]
 809 0016 BA78     		ldrb	r2, [r7, #2]
 810 0018 83F82923 		strb	r2, [r3, #809]
  32:message.c     ****     me->mb_ev = ev;
 811              		.loc 2 32 0
 812 001c 7B68     		ldr	r3, [r7, #4]
 813 001e FA78     		ldrb	r2, [r7, #3]
 814 0020 83F82A23 		strb	r2, [r3, #810]
  33:message.c     ****     //ReleaseResource(res_messagebox);
  34:message.c     ****     return res;
 815              		.loc 2 34 0
 816 0024 97F90F30 		ldrsb	r3, [r7, #15]
  35:message.c     **** }
 817              		.loc 2 35 0
 818 0028 1846     		mov	r0, r3
 819 002a 1437     		adds	r7, r7, #20
 820              		.cfi_def_cfa_offset 4
 821 002c BD46     		mov	sp, r7
 822              		.cfi_def_cfa_register 13
 823              		@ sp needed
 824 002e 80BC     		pop	{r7}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 21


 825              		.cfi_restore 7
 826              		.cfi_def_cfa_offset 0
 827 0030 7047     		bx	lr
 828              		.cfi_endproc
 829              	.LFE116:
 830              		.size	mb_setHMIEventAndTaskType, .-mb_setHMIEventAndTaskType
 831 0032 00BF     		.section	.text.mb_HMIFired,"ax",%progbits
 832              		.align	2
 833              		.global	mb_HMIFired
 834              		.thumb
 835              		.thumb_func
 836              		.type	mb_HMIFired, %function
 837              	mb_HMIFired:
 838              	.LFB117:
  36:message.c     **** 
  37:message.c     **** boolean_t mb_HMIFired(messagebox_t * const me){
 839              		.loc 2 37 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 16
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844 0000 80B4     		push	{r7}
 845              		.cfi_def_cfa_offset 4
 846              		.cfi_offset 7, -4
 847 0002 85B0     		sub	sp, sp, #20
 848              		.cfi_def_cfa_offset 24
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 851 0006 7860     		str	r0, [r7, #4]
  38:message.c     ****     boolean_t ret = 0;
 852              		.loc 2 38 0
 853 0008 0023     		movs	r3, #0
 854 000a FB73     		strb	r3, [r7, #15]
  39:message.c     ****     ret = 0;
 855              		.loc 2 39 0
 856 000c 0023     		movs	r3, #0
 857 000e FB73     		strb	r3, [r7, #15]
  40:message.c     ****     //GetResource(res_messagebox);
  41:message.c     ****     if(me->mb_taskType == MB_HMI && me->mb_ev == MB_HMI_DATA_READY){
 858              		.loc 2 41 0
 859 0010 7B68     		ldr	r3, [r7, #4]
 860 0012 93F82933 		ldrb	r3, [r3, #809]	@ zero_extendqisi2
 861 0016 002B     		cmp	r3, #0
 862 0018 06D1     		bne	.L51
 863              		.loc 2 41 0 is_stmt 0 discriminator 1
 864 001a 7B68     		ldr	r3, [r7, #4]
 865 001c 93F82A33 		ldrb	r3, [r3, #810]	@ zero_extendqisi2
 866 0020 002B     		cmp	r3, #0
 867 0022 01D1     		bne	.L51
  42:message.c     ****         ret = 1;   
 868              		.loc 2 42 0 is_stmt 1
 869 0024 0123     		movs	r3, #1
 870 0026 FB73     		strb	r3, [r7, #15]
 871              	.L51:
  43:message.c     ****     }
  44:message.c     ****     //ReleaseResource(res_messagebox);
  45:message.c     ****     return ret;   
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 22


 872              		.loc 2 45 0
 873 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  46:message.c     **** }
 874              		.loc 2 46 0
 875 002a 1846     		mov	r0, r3
 876 002c 1437     		adds	r7, r7, #20
 877              		.cfi_def_cfa_offset 4
 878 002e BD46     		mov	sp, r7
 879              		.cfi_def_cfa_register 13
 880              		@ sp needed
 881 0030 80BC     		pop	{r7}
 882              		.cfi_restore 7
 883              		.cfi_def_cfa_offset 0
 884 0032 7047     		bx	lr
 885              		.cfi_endproc
 886              	.LFE117:
 887              		.size	mb_HMIFired, .-mb_HMIFired
 888              		.section	.rodata
 889              		.align	2
 890              	.LC0:
 891 0000 72656400 		.ascii	"red\000"
 892              		.section	.text.mb_transferTokenIntoDrawer,"ax",%progbits
 893              		.align	2
 894              		.global	mb_transferTokenIntoDrawer
 895              		.thumb
 896              		.thumb_func
 897              		.type	mb_transferTokenIntoDrawer, %function
 898              	mb_transferTokenIntoDrawer:
 899              	.LFB118:
  47:message.c     **** 
  48:message.c     **** RC_t mb_transferTokenIntoDrawer(messagebox_t* const me, 
  49:message.c     ****                                 int nbrTokens, 
  50:message.c     ****                                 char tftCommands[commandsRows][commandsColumns],
  51:message.c     ****                                 jsmntok_t tokens[token_nbr],
  52:message.c     ****                                 char* jsonString, 
  53:message.c     ****                                 Drawer_t* local_drawer)
  54:message.c     **** {
 900              		.loc 2 54 0
 901              		.cfi_startproc
 902              		@ args = 8, pretend = 0, frame = 48
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 80B5     		push	{r7, lr}
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 7, -8
 907              		.cfi_offset 14, -4
 908 0002 8CB0     		sub	sp, sp, #48
 909              		.cfi_def_cfa_offset 56
 910 0004 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 912 0006 F860     		str	r0, [r7, #12]
 913 0008 B960     		str	r1, [r7, #8]
 914 000a 7A60     		str	r2, [r7, #4]
 915 000c 3B60     		str	r3, [r7]
  55:message.c     ****     //check for Json Strings and put them into an 2D array, for easy access.
  56:message.c     ****     RC_t res = RC_ERROR;
 916              		.loc 2 56 0
 917 000e FF23     		movs	r3, #255
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 23


 918 0010 FB74     		strb	r3, [r7, #19]
  57:message.c     ****     unsigned int index_tokens = 0;
 919              		.loc 2 57 0
 920 0012 0023     		movs	r3, #0
 921 0014 FB62     		str	r3, [r7, #44]
  58:message.c     ****     unsigned int tftCommandToken = 0; 
 922              		.loc 2 58 0
 923 0016 0023     		movs	r3, #0
 924 0018 BB62     		str	r3, [r7, #40]
 925              	.LBB5:
  59:message.c     ****     for(int i = 0; i < nbrTokens ; i++)
 926              		.loc 2 59 0
 927 001a 0023     		movs	r3, #0
 928 001c 7B62     		str	r3, [r7, #36]
 929 001e 41E0     		b	.L54
 930              	.L59:
  60:message.c     ****     {
  61:message.c     ****         if((tokens[index_tokens].type == JSMN_STRING)||
 931              		.loc 2 61 0
 932 0020 FB6A     		ldr	r3, [r7, #44]
 933 0022 1B01     		lsls	r3, r3, #4
 934 0024 3A68     		ldr	r2, [r7]
 935 0026 1344     		add	r3, r3, r2
 936 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 937 002a 042B     		cmp	r3, #4
 938 002c 0DD0     		beq	.L55
  62:message.c     ****            (tokens[index_tokens].type == JSMN_ARRAY)||
 939              		.loc 2 62 0 discriminator 1
 940 002e FB6A     		ldr	r3, [r7, #44]
 941 0030 1B01     		lsls	r3, r3, #4
 942 0032 3A68     		ldr	r2, [r7]
 943 0034 1344     		add	r3, r3, r2
 944 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  61:message.c     ****            (tokens[index_tokens].type == JSMN_ARRAY)||
 945              		.loc 2 61 0 discriminator 1
 946 0038 022B     		cmp	r3, #2
 947 003a 06D0     		beq	.L55
  63:message.c     ****            (tokens[index_tokens].type == JSMN_PRIMITIVE))
 948              		.loc 2 63 0
 949 003c FB6A     		ldr	r3, [r7, #44]
 950 003e 1B01     		lsls	r3, r3, #4
 951 0040 3A68     		ldr	r2, [r7]
 952 0042 1344     		add	r3, r3, r2
 953 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62:message.c     ****            (tokens[index_tokens].type == JSMN_ARRAY)||
 954              		.loc 2 62 0
 955 0046 082B     		cmp	r3, #8
 956 0048 26D1     		bne	.L56
 957              	.L55:
 958              	.LBB6:
  64:message.c     ****            {
  65:message.c     ****                 int TokenContent = 0;
 959              		.loc 2 65 0
 960 004a 0023     		movs	r3, #0
 961 004c 3B62     		str	r3, [r7, #32]
 962              	.LBB7:
  66:message.c     ****                 for( int tokenPosition = tokens[index_tokens].start; tokenPosition < tokens[index_t
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 24


 963              		.loc 2 66 0
 964 004e FB6A     		ldr	r3, [r7, #44]
 965 0050 1B01     		lsls	r3, r3, #4
 966 0052 3A68     		ldr	r2, [r7]
 967 0054 1344     		add	r3, r3, r2
 968 0056 5B68     		ldr	r3, [r3, #4]
 969 0058 FB61     		str	r3, [r7, #28]
 970 005a 12E0     		b	.L57
 971              	.L58:
  67:message.c     ****                     tftCommands[tftCommandToken][TokenContent++] = jsonString[tokenPosition];
 972              		.loc 2 67 0 discriminator 3
 973 005c BA6A     		ldr	r2, [r7, #40]
 974 005e 1346     		mov	r3, r2
 975 0060 9B00     		lsls	r3, r3, #2
 976 0062 1344     		add	r3, r3, r2
 977 0064 9B00     		lsls	r3, r3, #2
 978 0066 1A46     		mov	r2, r3
 979 0068 7B68     		ldr	r3, [r7, #4]
 980 006a 1A44     		add	r2, r2, r3
 981 006c 3B6A     		ldr	r3, [r7, #32]
 982 006e 591C     		adds	r1, r3, #1
 983 0070 3962     		str	r1, [r7, #32]
 984 0072 F969     		ldr	r1, [r7, #28]
 985 0074 B86B     		ldr	r0, [r7, #56]
 986 0076 0144     		add	r1, r1, r0
 987 0078 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 988 007a D154     		strb	r1, [r2, r3]
  66:message.c     ****                 for( int tokenPosition = tokens[index_tokens].start; tokenPosition < tokens[index_t
 989              		.loc 2 66 0 discriminator 3
 990 007c FB69     		ldr	r3, [r7, #28]
 991 007e 0133     		adds	r3, r3, #1
 992 0080 FB61     		str	r3, [r7, #28]
 993              	.L57:
  66:message.c     ****                 for( int tokenPosition = tokens[index_tokens].start; tokenPosition < tokens[index_t
 994              		.loc 2 66 0 is_stmt 0 discriminator 1
 995 0082 FB6A     		ldr	r3, [r7, #44]
 996 0084 1B01     		lsls	r3, r3, #4
 997 0086 3A68     		ldr	r2, [r7]
 998 0088 1344     		add	r3, r3, r2
 999 008a 9A68     		ldr	r2, [r3, #8]
 1000 008c FB69     		ldr	r3, [r7, #28]
 1001 008e 9A42     		cmp	r2, r3
 1002 0090 E4DC     		bgt	.L58
 1003              	.LBE7:
  68:message.c     ****                 }
  69:message.c     ****                 tftCommandToken++;
 1004              		.loc 2 69 0 is_stmt 1
 1005 0092 BB6A     		ldr	r3, [r7, #40]
 1006 0094 0133     		adds	r3, r3, #1
 1007 0096 BB62     		str	r3, [r7, #40]
 1008              	.L56:
 1009              	.LBE6:
  70:message.c     ****             }
  71:message.c     ****             index_tokens++;
 1010              		.loc 2 71 0 discriminator 2
 1011 0098 FB6A     		ldr	r3, [r7, #44]
 1012 009a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 25


 1013 009c FB62     		str	r3, [r7, #44]
  59:message.c     ****     {
 1014              		.loc 2 59 0 discriminator 2
 1015 009e 7B6A     		ldr	r3, [r7, #36]
 1016 00a0 0133     		adds	r3, r3, #1
 1017 00a2 7B62     		str	r3, [r7, #36]
 1018              	.L54:
  59:message.c     ****     {
 1019              		.loc 2 59 0 is_stmt 0 discriminator 1
 1020 00a4 7A6A     		ldr	r2, [r7, #36]
 1021 00a6 BB68     		ldr	r3, [r7, #8]
 1022 00a8 9A42     		cmp	r2, r3
 1023 00aa B9DB     		blt	.L59
 1024              	.LBE5:
  72:message.c     ****     }
  73:message.c     ****         //Read out information of the json strings and put them into global drawer object
  74:message.c     ****         
  75:message.c     ****     nbrTokens--;
 1025              		.loc 2 75 0 is_stmt 1
 1026 00ac BB68     		ldr	r3, [r7, #8]
 1027 00ae 013B     		subs	r3, r3, #1
 1028 00b0 BB60     		str	r3, [r7, #8]
  76:message.c     ****     int color = 0;
 1029              		.loc 2 76 0
 1030 00b2 0023     		movs	r3, #0
 1031 00b4 BB61     		str	r3, [r7, #24]
 1032              	.LBB8:
  77:message.c     ****     for(int even_commands = 0; even_commands < nbrTokens ; even_commands+=2){
 1033              		.loc 2 77 0
 1034 00b6 0023     		movs	r3, #0
 1035 00b8 7B61     		str	r3, [r7, #20]
 1036 00ba 92E0     		b	.L60
 1037              	.L67:
  78:message.c     ****         if(tftCommands[even_commands][0] == 'c'){
 1038              		.loc 2 78 0
 1039 00bc 7A69     		ldr	r2, [r7, #20]
 1040 00be 1346     		mov	r3, r2
 1041 00c0 9B00     		lsls	r3, r3, #2
 1042 00c2 1344     		add	r3, r3, r2
 1043 00c4 9B00     		lsls	r3, r3, #2
 1044 00c6 1A46     		mov	r2, r3
 1045 00c8 7B68     		ldr	r3, [r7, #4]
 1046 00ca 1344     		add	r3, r3, r2
 1047 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1048 00ce 632B     		cmp	r3, #99
 1049 00d0 1FD1     		bne	.L61
  79:message.c     ****             if(!strcmp(tftCommands[even_commands+1],"red"))
 1050              		.loc 2 79 0
 1051 00d2 7B69     		ldr	r3, [r7, #20]
 1052 00d4 5A1C     		adds	r2, r3, #1
 1053 00d6 1346     		mov	r3, r2
 1054 00d8 9B00     		lsls	r3, r3, #2
 1055 00da 1344     		add	r3, r3, r2
 1056 00dc 9B00     		lsls	r3, r3, #2
 1057 00de 1A46     		mov	r2, r3
 1058 00e0 7B68     		ldr	r3, [r7, #4]
 1059 00e2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 26


 1060 00e4 4449     		ldr	r1, .L69
 1061 00e6 1846     		mov	r0, r3
 1062 00e8 FFF7FEFF 		bl	strcmp
 1063 00ec 0346     		mov	r3, r0
 1064 00ee 002B     		cmp	r3, #0
 1065 00f0 01D1     		bne	.L62
  80:message.c     ****             {
  81:message.c     ****                 color = 1;
 1066              		.loc 2 81 0
 1067 00f2 0123     		movs	r3, #1
 1068 00f4 BB61     		str	r3, [r7, #24]
 1069              	.L62:
  82:message.c     ****             }
  83:message.c     ****             if(tftCommands[even_commands+1][0] == 'b')
 1070              		.loc 2 83 0
 1071 00f6 7B69     		ldr	r3, [r7, #20]
 1072 00f8 5A1C     		adds	r2, r3, #1
 1073 00fa 1346     		mov	r3, r2
 1074 00fc 9B00     		lsls	r3, r3, #2
 1075 00fe 1344     		add	r3, r3, r2
 1076 0100 9B00     		lsls	r3, r3, #2
 1077 0102 1A46     		mov	r2, r3
 1078 0104 7B68     		ldr	r3, [r7, #4]
 1079 0106 1344     		add	r3, r3, r2
 1080 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 010a 622B     		cmp	r3, #98
 1082 010c 01D1     		bne	.L61
  84:message.c     ****             {   
  85:message.c     ****                 color = 2;
 1083              		.loc 2 85 0
 1084 010e 0223     		movs	r3, #2
 1085 0110 BB61     		str	r3, [r7, #24]
 1086              	.L61:
  86:message.c     ****             }
  87:message.c     ****         }
  88:message.c     ****         if(tftCommands[even_commands][0] == 'd'){
 1087              		.loc 2 88 0
 1088 0112 7A69     		ldr	r2, [r7, #20]
 1089 0114 1346     		mov	r3, r2
 1090 0116 9B00     		lsls	r3, r3, #2
 1091 0118 1344     		add	r3, r3, r2
 1092 011a 9B00     		lsls	r3, r3, #2
 1093 011c 1A46     		mov	r2, r3
 1094 011e 7B68     		ldr	r3, [r7, #4]
 1095 0120 1344     		add	r3, r3, r2
 1096 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0124 642B     		cmp	r3, #100
 1098 0126 59D1     		bne	.L63
  89:message.c     ****             if(color == 1){
 1099              		.loc 2 89 0
 1100 0128 BB69     		ldr	r3, [r7, #24]
 1101 012a 012B     		cmp	r3, #1
 1102 012c 03D1     		bne	.L64
  90:message.c     ****                      local_drawer->data.color = RED;  
 1103              		.loc 2 90 0
 1104 012e FB6B     		ldr	r3, [r7, #60]
 1105 0130 1F22     		movs	r2, #31
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 27


 1106 0132 5A80     		strh	r2, [r3, #2]	@ movhi
 1107 0134 0BE0     		b	.L65
 1108              	.L64:
  91:message.c     ****             }
  92:message.c     ****             else if( color == 2)
 1109              		.loc 2 92 0
 1110 0136 BB69     		ldr	r3, [r7, #24]
 1111 0138 022B     		cmp	r3, #2
 1112 013a 04D1     		bne	.L66
  93:message.c     ****             {
  94:message.c     ****                     local_drawer->data.color = BLUE;
 1113              		.loc 2 94 0
 1114 013c FB6B     		ldr	r3, [r7, #60]
 1115 013e 4FF47842 		mov	r2, #63488
 1116 0142 5A80     		strh	r2, [r3, #2]	@ movhi
 1117 0144 03E0     		b	.L65
 1118              	.L66:
  95:message.c     ****             }
  96:message.c     ****             else
  97:message.c     ****             {
  98:message.c     ****                 local_drawer->data.color = YELLOW;
 1119              		.loc 2 98 0
 1120 0146 FB6B     		ldr	r3, [r7, #60]
 1121 0148 40F2FF72 		movw	r2, #2047
 1122 014c 5A80     		strh	r2, [r3, #2]	@ movhi
 1123              	.L65:
  99:message.c     ****             }
 100:message.c     ****             local_drawer->data.coordinate[0] = atoi(tftCommands[even_commands+2]);
 1124              		.loc 2 100 0
 1125 014e 7A69     		ldr	r2, [r7, #20]
 1126 0150 1346     		mov	r3, r2
 1127 0152 9B00     		lsls	r3, r3, #2
 1128 0154 1344     		add	r3, r3, r2
 1129 0156 9B00     		lsls	r3, r3, #2
 1130 0158 2833     		adds	r3, r3, #40
 1131 015a 7A68     		ldr	r2, [r7, #4]
 1132 015c 1344     		add	r3, r3, r2
 1133 015e 1846     		mov	r0, r3
 1134 0160 FFF7FEFF 		bl	atoi
 1135 0164 0346     		mov	r3, r0
 1136 0166 DAB2     		uxtb	r2, r3
 1137 0168 FB6B     		ldr	r3, [r7, #60]
 1138 016a 9A70     		strb	r2, [r3, #2]
 101:message.c     ****             local_drawer->data.coordinate[1] = atoi(tftCommands[even_commands+3]);
 1139              		.loc 2 101 0
 1140 016c 7A69     		ldr	r2, [r7, #20]
 1141 016e 1346     		mov	r3, r2
 1142 0170 9B00     		lsls	r3, r3, #2
 1143 0172 1344     		add	r3, r3, r2
 1144 0174 9B00     		lsls	r3, r3, #2
 1145 0176 3C33     		adds	r3, r3, #60
 1146 0178 7A68     		ldr	r2, [r7, #4]
 1147 017a 1344     		add	r3, r3, r2
 1148 017c 1846     		mov	r0, r3
 1149 017e FFF7FEFF 		bl	atoi
 1150 0182 0346     		mov	r3, r0
 1151 0184 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 28


 1152 0186 FB6B     		ldr	r3, [r7, #60]
 1153 0188 DA70     		strb	r2, [r3, #3]
 102:message.c     ****             local_drawer->data.coordinate[2] = atoi(tftCommands[even_commands+4]);
 1154              		.loc 2 102 0
 1155 018a 7A69     		ldr	r2, [r7, #20]
 1156 018c 1346     		mov	r3, r2
 1157 018e 9B00     		lsls	r3, r3, #2
 1158 0190 1344     		add	r3, r3, r2
 1159 0192 9B00     		lsls	r3, r3, #2
 1160 0194 5033     		adds	r3, r3, #80
 1161 0196 7A68     		ldr	r2, [r7, #4]
 1162 0198 1344     		add	r3, r3, r2
 1163 019a 1846     		mov	r0, r3
 1164 019c FFF7FEFF 		bl	atoi
 1165 01a0 0346     		mov	r3, r0
 1166 01a2 DAB2     		uxtb	r2, r3
 1167 01a4 FB6B     		ldr	r3, [r7, #60]
 1168 01a6 1A71     		strb	r2, [r3, #4]
 103:message.c     ****             local_drawer->data.coordinate[3] = atoi(tftCommands[even_commands+5]);
 1169              		.loc 2 103 0
 1170 01a8 7A69     		ldr	r2, [r7, #20]
 1171 01aa 1346     		mov	r3, r2
 1172 01ac 9B00     		lsls	r3, r3, #2
 1173 01ae 1344     		add	r3, r3, r2
 1174 01b0 9B00     		lsls	r3, r3, #2
 1175 01b2 6433     		adds	r3, r3, #100
 1176 01b4 7A68     		ldr	r2, [r7, #4]
 1177 01b6 1344     		add	r3, r3, r2
 1178 01b8 1846     		mov	r0, r3
 1179 01ba FFF7FEFF 		bl	atoi
 1180 01be 0346     		mov	r3, r0
 1181 01c0 DAB2     		uxtb	r2, r3
 1182 01c2 FB6B     		ldr	r3, [r7, #60]
 1183 01c4 5A71     		strb	r2, [r3, #5]
 104:message.c     ****         
 105:message.c     ****             //GetResource(res_messagebox);  
 106:message.c     ****             MESSAGE_BUFFER_WRITE(me, (void*)local_drawer, BUFFERTYPE_DRAWER, sizeof(local_drawer)+1
 1184              		.loc 2 106 0
 1185 01c6 0523     		movs	r3, #5
 1186 01c8 0022     		movs	r2, #0
 1187 01ca F96B     		ldr	r1, [r7, #60]
 1188 01cc F868     		ldr	r0, [r7, #12]
 1189 01ce FFF7FEFF 		bl	MESSAGE_BUFFER_WRITE
 107:message.c     ****             mb_setHMIEventAndTaskType(me,MB_HMI_DATA_READY, MB_HMI);
 1190              		.loc 2 107 0
 1191 01d2 0022     		movs	r2, #0
 1192 01d4 0021     		movs	r1, #0
 1193 01d6 F868     		ldr	r0, [r7, #12]
 1194 01d8 FFF7FEFF 		bl	mb_setHMIEventAndTaskType
 1195              	.L63:
  77:message.c     ****         if(tftCommands[even_commands][0] == 'c'){
 1196              		.loc 2 77 0 discriminator 2
 1197 01dc 7B69     		ldr	r3, [r7, #20]
 1198 01de 0233     		adds	r3, r3, #2
 1199 01e0 7B61     		str	r3, [r7, #20]
 1200              	.L60:
  77:message.c     ****         if(tftCommands[even_commands][0] == 'c'){
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 29


 1201              		.loc 2 77 0 is_stmt 0 discriminator 1
 1202 01e2 7A69     		ldr	r2, [r7, #20]
 1203 01e4 BB68     		ldr	r3, [r7, #8]
 1204 01e6 9A42     		cmp	r2, r3
 1205 01e8 FFF668AF 		blt	.L67
 1206              	.LBE8:
 108:message.c     ****             //ReleaseResource(res_messagebox);
 109:message.c     ****         }
 110:message.c     ****     }
 111:message.c     ****     return res;
 1207              		.loc 2 111 0 is_stmt 1
 1208 01ec 97F91330 		ldrsb	r3, [r7, #19]
 112:message.c     **** }
 1209              		.loc 2 112 0
 1210 01f0 1846     		mov	r0, r3
 1211 01f2 3037     		adds	r7, r7, #48
 1212              		.cfi_def_cfa_offset 8
 1213 01f4 BD46     		mov	sp, r7
 1214              		.cfi_def_cfa_register 13
 1215              		@ sp needed
 1216 01f6 80BD     		pop	{r7, pc}
 1217              	.L70:
 1218              		.align	2
 1219              	.L69:
 1220 01f8 00000000 		.word	.LC0
 1221              		.cfi_endproc
 1222              	.LFE118:
 1223              		.size	mb_transferTokenIntoDrawer, .-mb_transferTokenIntoDrawer
 1224              		.section	.text.MESSAGE_BUFFER_WRITE,"ax",%progbits
 1225              		.align	2
 1226              		.global	MESSAGE_BUFFER_WRITE
 1227              		.thumb
 1228              		.thumb_func
 1229              		.type	MESSAGE_BUFFER_WRITE, %function
 1230              	MESSAGE_BUFFER_WRITE:
 1231              	.LFB119:
 113:message.c     **** 
 114:message.c     **** RC_t MESSAGE_BUFFER_WRITE(messagebox_t* messagebox, void const*const buffer_data, type_t type, uint
 1232              		.loc 2 114 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 32
 1235              		@ frame_needed = 1, uses_anonymous_args = 0
 1236 0000 80B5     		push	{r7, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 88B0     		sub	sp, sp, #32
 1241              		.cfi_def_cfa_offset 40
 1242 0004 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
 1244 0006 F860     		str	r0, [r7, #12]
 1245 0008 B960     		str	r1, [r7, #8]
 1246 000a 1146     		mov	r1, r2
 1247 000c 1A46     		mov	r2, r3
 1248 000e 0B46     		mov	r3, r1
 1249 0010 FB71     		strb	r3, [r7, #7]
 1250 0012 1346     		mov	r3, r2	@ movhi
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 30


 1251 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 115:message.c     ****     if(messagebox->mb_fillLevel >= POSTBOX_SIZE){
 1252              		.loc 2 115 0
 1253 0016 FB68     		ldr	r3, [r7, #12]
 1254 0018 B3F82433 		ldrh	r3, [r3, #804]
 1255 001c 632B     		cmp	r3, #99
 1256 001e 02D9     		bls	.L72
 116:message.c     ****         return RC_ERROR_BUFFER_FULL;
 1257              		.loc 2 116 0
 1258 0020 6FF00703 		mvn	r3, #7
 1259 0024 5AE0     		b	.L73
 1260              	.L72:
 117:message.c     ****     }
 118:message.c     ****     void* buffer = malloc(size);
 1261              		.loc 2 118 0
 1262 0026 BB88     		ldrh	r3, [r7, #4]
 1263 0028 1846     		mov	r0, r3
 1264 002a FFF7FEFF 		bl	malloc
 1265 002e 0346     		mov	r3, r0
 1266 0030 BB61     		str	r3, [r7, #24]
 119:message.c     ****     
 120:message.c     ****     if(buffer == NULL || buffer_data == NULL){
 1267              		.loc 2 120 0
 1268 0032 BB69     		ldr	r3, [r7, #24]
 1269 0034 002B     		cmp	r3, #0
 1270 0036 02D0     		beq	.L74
 1271              		.loc 2 120 0 is_stmt 0 discriminator 1
 1272 0038 BB68     		ldr	r3, [r7, #8]
 1273 003a 002B     		cmp	r3, #0
 1274 003c 02D1     		bne	.L75
 1275              	.L74:
 121:message.c     ****         return RC_ERROR_MEMORY;   
 1276              		.loc 2 121 0 is_stmt 1
 1277 003e 6FF00303 		mvn	r3, #3
 1278 0042 4BE0     		b	.L73
 1279              	.L75:
 122:message.c     ****     }
 123:message.c     ****     uint8_t* src = (uint8_t*)buffer_data;
 1280              		.loc 2 123 0
 1281 0044 BB68     		ldr	r3, [r7, #8]
 1282 0046 7B61     		str	r3, [r7, #20]
 124:message.c     ****     uint8_t* dst = (uint8_t*)buffer;
 1283              		.loc 2 124 0
 1284 0048 BB69     		ldr	r3, [r7, #24]
 1285 004a 3B61     		str	r3, [r7, #16]
 1286              	.LBB9:
 125:message.c     ****     
 126:message.c     ****     for(int i = 0; i <= size; i++){
 1287              		.loc 2 126 0
 1288 004c 0023     		movs	r3, #0
 1289 004e FB61     		str	r3, [r7, #28]
 1290 0050 0AE0     		b	.L76
 1291              	.L77:
 127:message.c     ****         dst[i] = src[i];
 1292              		.loc 2 127 0 discriminator 3
 1293 0052 FB69     		ldr	r3, [r7, #28]
 1294 0054 3A69     		ldr	r2, [r7, #16]
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 31


 1295 0056 1344     		add	r3, r3, r2
 1296 0058 FA69     		ldr	r2, [r7, #28]
 1297 005a 7969     		ldr	r1, [r7, #20]
 1298 005c 0A44     		add	r2, r2, r1
 1299 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1300 0060 1A70     		strb	r2, [r3]
 126:message.c     ****         dst[i] = src[i];
 1301              		.loc 2 126 0 discriminator 3
 1302 0062 FB69     		ldr	r3, [r7, #28]
 1303 0064 0133     		adds	r3, r3, #1
 1304 0066 FB61     		str	r3, [r7, #28]
 1305              	.L76:
 126:message.c     ****         dst[i] = src[i];
 1306              		.loc 2 126 0 is_stmt 0 discriminator 1
 1307 0068 BA88     		ldrh	r2, [r7, #4]
 1308 006a FB69     		ldr	r3, [r7, #28]
 1309 006c 9A42     		cmp	r2, r3
 1310 006e F0DA     		bge	.L77
 1311              	.LBE9:
 128:message.c     ****     }
 129:message.c     ****     
 130:message.c     ****     if(buffer != 0)
 1312              		.loc 2 130 0 is_stmt 1
 1313 0070 BB69     		ldr	r3, [r7, #24]
 1314 0072 002B     		cmp	r3, #0
 1315 0074 31D0     		beq	.L78
 131:message.c     ****     {
 132:message.c     ****         messagebox->mb_buffer[messagebox->mb_writeIndex].m_pBuffer = buffer;
 1316              		.loc 2 132 0
 1317 0076 FB68     		ldr	r3, [r7, #12]
 1318 0078 B3F82233 		ldrh	r3, [r3, #802]
 1319 007c FA68     		ldr	r2, [r7, #12]
 1320 007e DB00     		lsls	r3, r3, #3
 1321 0080 1344     		add	r3, r3, r2
 1322 0082 BA69     		ldr	r2, [r7, #24]
 1323 0084 5A60     		str	r2, [r3, #4]
 133:message.c     ****         messagebox->mb_buffer[messagebox->mb_writeIndex].m_size = size;
 1324              		.loc 2 133 0
 1325 0086 FB68     		ldr	r3, [r7, #12]
 1326 0088 B3F82233 		ldrh	r3, [r3, #802]
 1327 008c 1946     		mov	r1, r3
 1328 008e FB68     		ldr	r3, [r7, #12]
 1329 0090 BA88     		ldrh	r2, [r7, #4]	@ movhi
 1330 0092 23F83120 		strh	r2, [r3, r1, lsl #3]	@ movhi
 134:message.c     ****         messagebox->mb_writeIndex = ( messagebox->mb_writeIndex + 1 )%POSTBOX_SIZE;
 1331              		.loc 2 134 0
 1332 0096 FB68     		ldr	r3, [r7, #12]
 1333 0098 B3F82233 		ldrh	r3, [r3, #802]
 1334 009c 0133     		adds	r3, r3, #1
 1335 009e 114A     		ldr	r2, .L79
 1336 00a0 82FB0312 		smull	r1, r2, r2, r3
 1337 00a4 5111     		asrs	r1, r2, #5
 1338 00a6 DA17     		asrs	r2, r3, #31
 1339 00a8 8A1A     		subs	r2, r1, r2
 1340 00aa 6421     		movs	r1, #100
 1341 00ac 01FB02F2 		mul	r2, r1, r2
 1342 00b0 9A1A     		subs	r2, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 32


 1343 00b2 92B2     		uxth	r2, r2
 1344 00b4 FB68     		ldr	r3, [r7, #12]
 1345 00b6 A3F82223 		strh	r2, [r3, #802]	@ movhi
 135:message.c     ****         messagebox->mb_fillLevel++;
 1346              		.loc 2 135 0
 1347 00ba FB68     		ldr	r3, [r7, #12]
 1348 00bc B3F82433 		ldrh	r3, [r3, #804]
 1349 00c0 0133     		adds	r3, r3, #1
 1350 00c2 9AB2     		uxth	r2, r3
 1351 00c4 FB68     		ldr	r3, [r7, #12]
 1352 00c6 A3F82423 		strh	r2, [r3, #804]	@ movhi
 136:message.c     ****         messagebox->mb_type = type;
 1353              		.loc 2 136 0
 1354 00ca FB68     		ldr	r3, [r7, #12]
 1355 00cc FA79     		ldrb	r2, [r7, #7]
 1356 00ce 83F82823 		strb	r2, [r3, #808]
 137:message.c     ****         messagebox->mb_size = size;
 1357              		.loc 2 137 0
 1358 00d2 FB68     		ldr	r3, [r7, #12]
 1359 00d4 BA88     		ldrh	r2, [r7, #4]	@ movhi
 1360 00d6 A3F82623 		strh	r2, [r3, #806]	@ movhi
 1361              	.L78:
 138:message.c     ****     }
 139:message.c     ****     return RC_SUCCESS;   
 1362              		.loc 2 139 0
 1363 00da 0023     		movs	r3, #0
 1364              	.L73:
 140:message.c     **** }
 1365              		.loc 2 140 0
 1366 00dc 1846     		mov	r0, r3
 1367 00de 2037     		adds	r7, r7, #32
 1368              		.cfi_def_cfa_offset 8
 1369 00e0 BD46     		mov	sp, r7
 1370              		.cfi_def_cfa_register 13
 1371              		@ sp needed
 1372 00e2 80BD     		pop	{r7, pc}
 1373              	.L80:
 1374              		.align	2
 1375              	.L79:
 1376 00e4 1F85EB51 		.word	1374389535
 1377              		.cfi_endproc
 1378              	.LFE119:
 1379              		.size	MESSAGE_BUFFER_WRITE, .-MESSAGE_BUFFER_WRITE
 1380              		.section	.text.MESSAGE_BUFFER_READ,"ax",%progbits
 1381              		.align	2
 1382              		.global	MESSAGE_BUFFER_READ
 1383              		.thumb
 1384              		.thumb_func
 1385              		.type	MESSAGE_BUFFER_READ, %function
 1386              	MESSAGE_BUFFER_READ:
 1387              	.LFB120:
 141:message.c     **** 
 142:message.c     **** RC_t MESSAGE_BUFFER_READ(messagebox_t* messagebox, void* output_data, type_t type, uint16_t size){
 1388              		.loc 2 142 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 32
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 33


 1392 0000 80B5     		push	{r7, lr}
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 7, -8
 1395              		.cfi_offset 14, -4
 1396 0002 88B0     		sub	sp, sp, #32
 1397              		.cfi_def_cfa_offset 40
 1398 0004 00AF     		add	r7, sp, #0
 1399              		.cfi_def_cfa_register 7
 1400 0006 F860     		str	r0, [r7, #12]
 1401 0008 B960     		str	r1, [r7, #8]
 1402 000a 1146     		mov	r1, r2
 1403 000c 1A46     		mov	r2, r3
 1404 000e 0B46     		mov	r3, r1
 1405 0010 FB71     		strb	r3, [r7, #7]
 1406 0012 1346     		mov	r3, r2	@ movhi
 1407 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 143:message.c     ****     if(messagebox->mb_fillLevel < 1){
 1408              		.loc 2 143 0
 1409 0016 FB68     		ldr	r3, [r7, #12]
 1410 0018 B3F82433 		ldrh	r3, [r3, #804]
 1411 001c 002B     		cmp	r3, #0
 1412 001e 02D1     		bne	.L82
 144:message.c     ****         return RC_ERROR_BUFFER_EMTPY;
 1413              		.loc 2 144 0
 1414 0020 6FF00803 		mvn	r3, #8
 1415 0024 48E0     		b	.L83
 1416              	.L82:
 145:message.c     ****     }
 146:message.c     ****     
 147:message.c     ****     
 148:message.c     ****     uint8_t* dst = (uint8_t*)output_data;
 1417              		.loc 2 148 0
 1418 0026 BB68     		ldr	r3, [r7, #8]
 1419 0028 BB61     		str	r3, [r7, #24]
 149:message.c     ****     uint8_t* src = (uint8_t*)messagebox->mb_buffer[messagebox->mb_readIndex].m_pBuffer;
 1420              		.loc 2 149 0
 1421 002a FB68     		ldr	r3, [r7, #12]
 1422 002c B3F82033 		ldrh	r3, [r3, #800]
 1423 0030 FA68     		ldr	r2, [r7, #12]
 1424 0032 DB00     		lsls	r3, r3, #3
 1425 0034 1344     		add	r3, r3, r2
 1426 0036 5B68     		ldr	r3, [r3, #4]
 1427 0038 7B61     		str	r3, [r7, #20]
 1428              	.LBB10:
 150:message.c     ****     
 151:message.c     ****     for(int i = 0; i <= size; i++)
 1429              		.loc 2 151 0
 1430 003a 0023     		movs	r3, #0
 1431 003c FB61     		str	r3, [r7, #28]
 1432 003e 0AE0     		b	.L84
 1433              	.L85:
 152:message.c     ****     {
 153:message.c     ****         dst[i] = src[i];
 1434              		.loc 2 153 0 discriminator 3
 1435 0040 FB69     		ldr	r3, [r7, #28]
 1436 0042 BA69     		ldr	r2, [r7, #24]
 1437 0044 1344     		add	r3, r3, r2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 34


 1438 0046 FA69     		ldr	r2, [r7, #28]
 1439 0048 7969     		ldr	r1, [r7, #20]
 1440 004a 0A44     		add	r2, r2, r1
 1441 004c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1442 004e 1A70     		strb	r2, [r3]
 151:message.c     ****     {
 1443              		.loc 2 151 0 discriminator 3
 1444 0050 FB69     		ldr	r3, [r7, #28]
 1445 0052 0133     		adds	r3, r3, #1
 1446 0054 FB61     		str	r3, [r7, #28]
 1447              	.L84:
 151:message.c     ****     {
 1448              		.loc 2 151 0 is_stmt 0 discriminator 1
 1449 0056 BA88     		ldrh	r2, [r7, #4]
 1450 0058 FB69     		ldr	r3, [r7, #28]
 1451 005a 9A42     		cmp	r2, r3
 1452 005c F0DA     		bge	.L85
 1453              	.LBE10:
 154:message.c     ****     }
 155:message.c     ****     
 156:message.c     ****     free(messagebox->mb_buffer[messagebox->mb_readIndex].m_pBuffer);
 1454              		.loc 2 156 0 is_stmt 1
 1455 005e FB68     		ldr	r3, [r7, #12]
 1456 0060 B3F82033 		ldrh	r3, [r3, #800]
 1457 0064 FA68     		ldr	r2, [r7, #12]
 1458 0066 DB00     		lsls	r3, r3, #3
 1459 0068 1344     		add	r3, r3, r2
 1460 006a 5B68     		ldr	r3, [r3, #4]
 1461 006c 1846     		mov	r0, r3
 1462 006e FFF7FEFF 		bl	free
 157:message.c     ****     messagebox->mb_buffer[messagebox->mb_readIndex].m_pBuffer = NULL;
 1463              		.loc 2 157 0
 1464 0072 FB68     		ldr	r3, [r7, #12]
 1465 0074 B3F82033 		ldrh	r3, [r3, #800]
 1466 0078 FA68     		ldr	r2, [r7, #12]
 1467 007a DB00     		lsls	r3, r3, #3
 1468 007c 1344     		add	r3, r3, r2
 1469 007e 0022     		movs	r2, #0
 1470 0080 5A60     		str	r2, [r3, #4]
 158:message.c     ****     
 159:message.c     ****     messagebox->mb_readIndex = (messagebox->mb_readIndex + 1) % POSTBOX_SIZE;
 1471              		.loc 2 159 0
 1472 0082 FB68     		ldr	r3, [r7, #12]
 1473 0084 B3F82033 		ldrh	r3, [r3, #800]
 1474 0088 0133     		adds	r3, r3, #1
 1475 008a 0D4A     		ldr	r2, .L86
 1476 008c 82FB0312 		smull	r1, r2, r2, r3
 1477 0090 5111     		asrs	r1, r2, #5
 1478 0092 DA17     		asrs	r2, r3, #31
 1479 0094 8A1A     		subs	r2, r1, r2
 1480 0096 6421     		movs	r1, #100
 1481 0098 01FB02F2 		mul	r2, r1, r2
 1482 009c 9A1A     		subs	r2, r3, r2
 1483 009e 92B2     		uxth	r2, r2
 1484 00a0 FB68     		ldr	r3, [r7, #12]
 1485 00a2 A3F82023 		strh	r2, [r3, #800]	@ movhi
 160:message.c     ****     messagebox->mb_fillLevel--;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 35


 1486              		.loc 2 160 0
 1487 00a6 FB68     		ldr	r3, [r7, #12]
 1488 00a8 B3F82433 		ldrh	r3, [r3, #804]
 1489 00ac 013B     		subs	r3, r3, #1
 1490 00ae 9AB2     		uxth	r2, r3
 1491 00b0 FB68     		ldr	r3, [r7, #12]
 1492 00b2 A3F82423 		strh	r2, [r3, #804]	@ movhi
 161:message.c     ****     
 162:message.c     ****     return RC_SUCCESS;   
 1493              		.loc 2 162 0
 1494 00b6 0023     		movs	r3, #0
 1495              	.L83:
 163:message.c     **** }
 1496              		.loc 2 163 0
 1497 00b8 1846     		mov	r0, r3
 1498 00ba 2037     		adds	r7, r7, #32
 1499              		.cfi_def_cfa_offset 8
 1500 00bc BD46     		mov	sp, r7
 1501              		.cfi_def_cfa_register 13
 1502              		@ sp needed
 1503 00be 80BD     		pop	{r7, pc}
 1504              	.L87:
 1505              		.align	2
 1506              	.L86:
 1507 00c0 1F85EB51 		.word	1374389535
 1508              		.cfi_endproc
 1509              	.LFE120:
 1510              		.size	MESSAGE_BUFFER_READ, .-MESSAGE_BUFFER_READ
 1511              		.text
 1512              	.Letext0:
 1513              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1514              		.file 4 ".\\source\\bsw/global.h"
 1515              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1516              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1517              		.file 7 ".\\source\\bsw\\tft/tft.h"
 1518              		.file 8 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_types.inc"
 1519              		.file 9 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc"
 1520              		.file 10 "bufferTypes.h"
 1521              		.file 11 "drawer.h"
 1522              		.file 12 "message.h"
 1523              		.file 13 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_intfunc.inc"
 1524              		.file 14 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc"
 1525              		.file 15 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_primitives.inc"
 1526              		.file 16 "Generated_Source\\PSoC5/core_cm3.h"
 1527              		.section	.debug_info,"",%progbits
 1528              	.Ldebug_info0:
 1529 0000 F90A0000 		.4byte	0xaf9
 1530 0004 0400     		.2byte	0x4
 1531 0006 00000000 		.4byte	.Ldebug_abbrev0
 1532 000a 04       		.byte	0x4
 1533 000b 01       		.uleb128 0x1
 1534 000c 8D000000 		.4byte	.LASF167
 1535 0010 0C       		.byte	0xc
 1536 0011 E6030000 		.4byte	.LASF168
 1537 0015 54020000 		.4byte	.LASF169
 1538 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1539 001d 00000000 		.4byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 36


 1540 0021 00000000 		.4byte	.Ldebug_line0
 1541 0025 02       		.uleb128 0x2
 1542 0026 04       		.byte	0x4
 1543 0027 05       		.byte	0x5
 1544 0028 696E7400 		.ascii	"int\000"
 1545 002c 03       		.uleb128 0x3
 1546 002d 4A000000 		.4byte	.LASF9
 1547 0031 03       		.byte	0x3
 1548 0032 D8       		.byte	0xd8
 1549 0033 37000000 		.4byte	0x37
 1550 0037 04       		.uleb128 0x4
 1551 0038 04       		.byte	0x4
 1552 0039 07       		.byte	0x7
 1553 003a 69030000 		.4byte	.LASF0
 1554 003e 04       		.uleb128 0x4
 1555 003f 08       		.byte	0x8
 1556 0040 05       		.byte	0x5
 1557 0041 B5010000 		.4byte	.LASF1
 1558 0045 04       		.uleb128 0x4
 1559 0046 08       		.byte	0x8
 1560 0047 04       		.byte	0x4
 1561 0048 5B070000 		.4byte	.LASF2
 1562 004c 05       		.uleb128 0x5
 1563 004d 01       		.byte	0x1
 1564 004e 77000000 		.4byte	0x77
 1565 0052 01       		.byte	0x1
 1566 0053 2E       		.byte	0x2e
 1567 0054 77000000 		.4byte	0x77
 1568 0058 06       		.uleb128 0x6
 1569 0059 18050000 		.4byte	.LASF3
 1570 005d 00       		.byte	0
 1571 005e 06       		.uleb128 0x6
 1572 005f 8B010000 		.4byte	.LASF4
 1573 0063 01       		.byte	0x1
 1574 0064 06       		.uleb128 0x6
 1575 0065 C0070000 		.4byte	.LASF5
 1576 0069 02       		.byte	0x2
 1577 006a 06       		.uleb128 0x6
 1578 006b 27080000 		.4byte	.LASF6
 1579 006f 04       		.byte	0x4
 1580 0070 06       		.uleb128 0x6
 1581 0071 B1070000 		.4byte	.LASF7
 1582 0075 08       		.byte	0x8
 1583 0076 00       		.byte	0
 1584 0077 04       		.uleb128 0x4
 1585 0078 01       		.byte	0x1
 1586 0079 08       		.byte	0x8
 1587 007a 84060000 		.4byte	.LASF8
 1588 007e 03       		.uleb128 0x3
 1589 007f CC020000 		.4byte	.LASF10
 1590 0083 01       		.byte	0x1
 1591 0084 34       		.byte	0x34
 1592 0085 4C000000 		.4byte	0x4c
 1593 0089 07       		.uleb128 0x7
 1594 008a 67070000 		.4byte	.LASF170
 1595 008e 01       		.byte	0x1
 1596 008f AC000000 		.4byte	0xac
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 37


 1597 0093 01       		.byte	0x1
 1598 0094 36       		.byte	0x36
 1599 0095 AC000000 		.4byte	0xac
 1600 0099 08       		.uleb128 0x8
 1601 009a A4010000 		.4byte	.LASF11
 1602 009e 7F       		.sleb128 -1
 1603 009f 08       		.uleb128 0x8
 1604 00a0 39080000 		.4byte	.LASF12
 1605 00a4 7E       		.sleb128 -2
 1606 00a5 08       		.uleb128 0x8
 1607 00a6 46060000 		.4byte	.LASF13
 1608 00aa 7D       		.sleb128 -3
 1609 00ab 00       		.byte	0
 1610 00ac 04       		.uleb128 0x4
 1611 00ad 01       		.byte	0x1
 1612 00ae 06       		.byte	0x6
 1613 00af C3010000 		.4byte	.LASF14
 1614 00b3 09       		.uleb128 0x9
 1615 00b4 74060000 		.4byte	.LASF19
 1616 00b8 10       		.byte	0x10
 1617 00b9 01       		.byte	0x1
 1618 00ba 45       		.byte	0x45
 1619 00bb F0000000 		.4byte	0xf0
 1620 00bf 0A       		.uleb128 0xa
 1621 00c0 88000000 		.4byte	.LASF15
 1622 00c4 01       		.byte	0x1
 1623 00c5 46       		.byte	0x46
 1624 00c6 7E000000 		.4byte	0x7e
 1625 00ca 00       		.byte	0
 1626 00cb 0A       		.uleb128 0xa
 1627 00cc 00090000 		.4byte	.LASF16
 1628 00d0 01       		.byte	0x1
 1629 00d1 47       		.byte	0x47
 1630 00d2 25000000 		.4byte	0x25
 1631 00d6 04       		.byte	0x4
 1632 00d7 0B       		.uleb128 0xb
 1633 00d8 656E6400 		.ascii	"end\000"
 1634 00dc 01       		.byte	0x1
 1635 00dd 48       		.byte	0x48
 1636 00de 25000000 		.4byte	0x25
 1637 00e2 08       		.byte	0x8
 1638 00e3 0A       		.uleb128 0xa
 1639 00e4 09040000 		.4byte	.LASF17
 1640 00e8 01       		.byte	0x1
 1641 00e9 49       		.byte	0x49
 1642 00ea 25000000 		.4byte	0x25
 1643 00ee 0C       		.byte	0xc
 1644 00ef 00       		.byte	0
 1645 00f0 03       		.uleb128 0x3
 1646 00f1 B7040000 		.4byte	.LASF18
 1647 00f5 01       		.byte	0x1
 1648 00f6 4D       		.byte	0x4d
 1649 00f7 B3000000 		.4byte	0xb3
 1650 00fb 09       		.uleb128 0x9
 1651 00fc FC010000 		.4byte	.LASF20
 1652 0100 0C       		.byte	0xc
 1653 0101 01       		.byte	0x1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 38


 1654 0102 53       		.byte	0x53
 1655 0103 2C010000 		.4byte	0x12c
 1656 0107 0B       		.uleb128 0xb
 1657 0108 706F7300 		.ascii	"pos\000"
 1658 010c 01       		.byte	0x1
 1659 010d 54       		.byte	0x54
 1660 010e 37000000 		.4byte	0x37
 1661 0112 00       		.byte	0
 1662 0113 0A       		.uleb128 0xa
 1663 0114 9F060000 		.4byte	.LASF21
 1664 0118 01       		.byte	0x1
 1665 0119 55       		.byte	0x55
 1666 011a 37000000 		.4byte	0x37
 1667 011e 04       		.byte	0x4
 1668 011f 0A       		.uleb128 0xa
 1669 0120 B9050000 		.4byte	.LASF22
 1670 0124 01       		.byte	0x1
 1671 0125 56       		.byte	0x56
 1672 0126 25000000 		.4byte	0x25
 1673 012a 08       		.byte	0x8
 1674 012b 00       		.byte	0
 1675 012c 03       		.uleb128 0x3
 1676 012d FC010000 		.4byte	.LASF20
 1677 0131 01       		.byte	0x1
 1678 0132 57       		.byte	0x57
 1679 0133 FB000000 		.4byte	0xfb
 1680 0137 03       		.uleb128 0x3
 1681 0138 83080000 		.4byte	.LASF23
 1682 013c 04       		.byte	0x4
 1683 013d 91       		.byte	0x91
 1684 013e 77000000 		.4byte	0x77
 1685 0142 04       		.uleb128 0x4
 1686 0143 02       		.byte	0x2
 1687 0144 05       		.byte	0x5
 1688 0145 DE060000 		.4byte	.LASF24
 1689 0149 03       		.uleb128 0x3
 1690 014a 76030000 		.4byte	.LASF25
 1691 014e 04       		.byte	0x4
 1692 014f 93       		.byte	0x93
 1693 0150 54010000 		.4byte	0x154
 1694 0154 04       		.uleb128 0x4
 1695 0155 02       		.byte	0x2
 1696 0156 07       		.byte	0x7
 1697 0157 0E040000 		.4byte	.LASF26
 1698 015b 04       		.uleb128 0x4
 1699 015c 04       		.byte	0x4
 1700 015d 05       		.byte	0x5
 1701 015e 35020000 		.4byte	.LASF27
 1702 0162 04       		.uleb128 0x4
 1703 0163 04       		.byte	0x4
 1704 0164 07       		.byte	0x7
 1705 0165 A9030000 		.4byte	.LASF28
 1706 0169 04       		.uleb128 0x4
 1707 016a 04       		.byte	0x4
 1708 016b 04       		.byte	0x4
 1709 016c 20060000 		.4byte	.LASF29
 1710 0170 04       		.uleb128 0x4
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 39


 1711 0171 08       		.byte	0x8
 1712 0172 04       		.byte	0x4
 1713 0173 BE020000 		.4byte	.LASF30
 1714 0177 04       		.uleb128 0x4
 1715 0178 08       		.byte	0x8
 1716 0179 07       		.byte	0x7
 1717 017a 3C010000 		.4byte	.LASF31
 1718 017e 03       		.uleb128 0x3
 1719 017f 6C050000 		.4byte	.LASF32
 1720 0183 04       		.byte	0x4
 1721 0184 9C       		.byte	0x9c
 1722 0185 77000000 		.4byte	0x77
 1723 0189 04       		.uleb128 0x4
 1724 018a 01       		.byte	0x1
 1725 018b 08       		.byte	0x8
 1726 018c 6F070000 		.4byte	.LASF33
 1727 0190 0C       		.uleb128 0xc
 1728 0191 04       		.byte	0x4
 1729 0192 96010000 		.4byte	0x196
 1730 0196 0D       		.uleb128 0xd
 1731 0197 89010000 		.4byte	0x189
 1732 019b 0E       		.uleb128 0xe
 1733 019c 04       		.byte	0x4
 1734 019d 05       		.uleb128 0x5
 1735 019e 01       		.byte	0x1
 1736 019f AC000000 		.4byte	0xac
 1737 01a3 04       		.byte	0x4
 1738 01a4 CF       		.byte	0xcf
 1739 01a5 46020000 		.4byte	0x246
 1740 01a9 06       		.uleb128 0x6
 1741 01aa C9030000 		.4byte	.LASF34
 1742 01ae 00       		.byte	0
 1743 01af 08       		.uleb128 0x8
 1744 01b0 12060000 		.4byte	.LASF35
 1745 01b4 7F       		.sleb128 -1
 1746 01b5 08       		.uleb128 0x8
 1747 01b6 BB030000 		.4byte	.LASF36
 1748 01ba 7E       		.sleb128 -2
 1749 01bb 08       		.uleb128 0x8
 1750 01bc 27070000 		.4byte	.LASF37
 1751 01c0 7D       		.sleb128 -3
 1752 01c1 08       		.uleb128 0x8
 1753 01c2 D7010000 		.4byte	.LASF38
 1754 01c6 7C       		.sleb128 -4
 1755 01c7 08       		.uleb128 0x8
 1756 01c8 79000000 		.4byte	.LASF39
 1757 01cc 7B       		.sleb128 -5
 1758 01cd 08       		.uleb128 0x8
 1759 01ce E4070000 		.4byte	.LASF40
 1760 01d2 7A       		.sleb128 -6
 1761 01d3 08       		.uleb128 0x8
 1762 01d4 D9050000 		.4byte	.LASF41
 1763 01d8 79       		.sleb128 -7
 1764 01d9 08       		.uleb128 0x8
 1765 01da 3F040000 		.4byte	.LASF42
 1766 01de 78       		.sleb128 -8
 1767 01df 08       		.uleb128 0x8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 40


 1768 01e0 1F020000 		.4byte	.LASF43
 1769 01e4 77       		.sleb128 -9
 1770 01e5 08       		.uleb128 0x8
 1771 01e6 56060000 		.4byte	.LASF44
 1772 01ea 76       		.sleb128 -10
 1773 01eb 08       		.uleb128 0x8
 1774 01ec 00000000 		.4byte	.LASF45
 1775 01f0 75       		.sleb128 -11
 1776 01f1 08       		.uleb128 0x8
 1777 01f2 B0020000 		.4byte	.LASF46
 1778 01f6 74       		.sleb128 -12
 1779 01f7 08       		.uleb128 0x8
 1780 01f8 97030000 		.4byte	.LASF47
 1781 01fc 73       		.sleb128 -13
 1782 01fd 08       		.uleb128 0x8
 1783 01fe 48070000 		.4byte	.LASF48
 1784 0202 72       		.sleb128 -14
 1785 0203 08       		.uleb128 0x8
 1786 0204 27050000 		.4byte	.LASF49
 1787 0208 71       		.sleb128 -15
 1788 0209 08       		.uleb128 0x8
 1789 020a 76050000 		.4byte	.LASF50
 1790 020e 70       		.sleb128 -16
 1791 020f 08       		.uleb128 0x8
 1792 0210 EB050000 		.4byte	.LASF51
 1793 0214 6F       		.sleb128 -17
 1794 0215 08       		.uleb128 0x8
 1795 0216 87040000 		.4byte	.LASF52
 1796 021a 6E       		.sleb128 -18
 1797 021b 08       		.uleb128 0x8
 1798 021c 29010000 		.4byte	.LASF53
 1799 0220 6D       		.sleb128 -19
 1800 0221 08       		.uleb128 0x8
 1801 0222 35070000 		.4byte	.LASF54
 1802 0226 6C       		.sleb128 -20
 1803 0227 08       		.uleb128 0x8
 1804 0228 5B010000 		.4byte	.LASF55
 1805 022c 6B       		.sleb128 -21
 1806 022d 08       		.uleb128 0x8
 1807 022e C2050000 		.4byte	.LASF56
 1808 0232 6A       		.sleb128 -22
 1809 0233 08       		.uleb128 0x8
 1810 0234 2B000000 		.4byte	.LASF57
 1811 0238 69       		.sleb128 -23
 1812 0239 08       		.uleb128 0x8
 1813 023a 58030000 		.4byte	.LASF58
 1814 023e 68       		.sleb128 -24
 1815 023f 08       		.uleb128 0x8
 1816 0240 CB070000 		.4byte	.LASF59
 1817 0244 67       		.sleb128 -25
 1818 0245 00       		.byte	0
 1819 0246 03       		.uleb128 0x3
 1820 0247 74000000 		.4byte	.LASF60
 1821 024b 04       		.byte	0x4
 1822 024c EA       		.byte	0xea
 1823 024d 9D010000 		.4byte	0x19d
 1824 0251 03       		.uleb128 0x3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 41


 1825 0252 C1040000 		.4byte	.LASF61
 1826 0256 05       		.byte	0x5
 1827 0257 3F       		.byte	0x3f
 1828 0258 5B010000 		.4byte	0x15b
 1829 025c 04       		.uleb128 0x4
 1830 025d 04       		.byte	0x4
 1831 025e 07       		.byte	0x7
 1832 025f 63050000 		.4byte	.LASF62
 1833 0263 0C       		.uleb128 0xc
 1834 0264 04       		.byte	0x4
 1835 0265 89010000 		.4byte	0x189
 1836 0269 03       		.uleb128 0x3
 1837 026a 7C060000 		.4byte	.LASF63
 1838 026e 06       		.byte	0x6
 1839 026f 2C       		.byte	0x2c
 1840 0270 51020000 		.4byte	0x251
 1841 0274 0C       		.uleb128 0xc
 1842 0275 04       		.byte	0x4
 1843 0276 37010000 		.4byte	0x137
 1844 027a 05       		.uleb128 0x5
 1845 027b 02       		.byte	0x2
 1846 027c 54010000 		.4byte	0x154
 1847 0280 07       		.byte	0x7
 1848 0281 5C       		.byte	0x5c
 1849 0282 18030000 		.4byte	0x318
 1850 0286 0F       		.uleb128 0xf
 1851 0287 66000000 		.4byte	.LASF64
 1852 028b FFFF     		.2byte	0xffff
 1853 028d 06       		.uleb128 0x6
 1854 028e 74070000 		.4byte	.LASF65
 1855 0292 00       		.byte	0
 1856 0293 0F       		.uleb128 0xf
 1857 0294 8B080000 		.4byte	.LASF66
 1858 0298 00F8     		.2byte	0xf800
 1859 029a 0F       		.uleb128 0xf
 1860 029b 1B060000 		.4byte	.LASF67
 1861 029f 1FF8     		.2byte	0xf81f
 1862 02a1 0F       		.uleb128 0xf
 1863 02a2 61000000 		.4byte	.LASF68
 1864 02a6 FF07     		.2byte	0x7ff
 1865 02a8 0F       		.uleb128 0xf
 1866 02a9 33080000 		.4byte	.LASF69
 1867 02ad E0FF     		.2byte	0xffe0
 1868 02af 10       		.uleb128 0x10
 1869 02b0 52454400 		.ascii	"RED\000"
 1870 02b4 1F       		.byte	0x1f
 1871 02b5 0F       		.uleb128 0xf
 1872 02b6 42000000 		.4byte	.LASF70
 1873 02ba 1FF8     		.2byte	0xf81f
 1874 02bc 0F       		.uleb128 0xf
 1875 02bd AB070000 		.4byte	.LASF71
 1876 02c1 E007     		.2byte	0x7e0
 1877 02c3 0F       		.uleb128 0xf
 1878 02c4 15070000 		.4byte	.LASF72
 1879 02c8 E0FF     		.2byte	0xffe0
 1880 02ca 0F       		.uleb128 0xf
 1881 02cb 4D020000 		.4byte	.LASF73
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 42


 1882 02cf FF07     		.2byte	0x7ff
 1883 02d1 0F       		.uleb128 0xf
 1884 02d2 47020000 		.4byte	.LASF74
 1885 02d6 3D02     		.2byte	0x23d
 1886 02d8 0F       		.uleb128 0xf
 1887 02d9 39040000 		.4byte	.LASF75
 1888 02dd 3FE0     		.2byte	0xe03f
 1889 02df 0F       		.uleb128 0xf
 1890 02e0 D4050000 		.4byte	.LASF76
 1891 02e4 210C     		.2byte	0xc21
 1892 02e6 0F       		.uleb128 0xf
 1893 02e7 09060000 		.4byte	.LASF77
 1894 02eb 89F3     		.2byte	0xf389
 1895 02ed 0F       		.uleb128 0xf
 1896 02ee F1040000 		.4byte	.LASF78
 1897 02f2 BE3E     		.2byte	0x3ebe
 1898 02f4 0F       		.uleb128 0xf
 1899 02f5 E9080000 		.4byte	.LASF79
 1900 02f9 2A1A     		.2byte	0x1a2a
 1901 02fb 0F       		.uleb128 0xf
 1902 02fc F5070000 		.4byte	.LASF80
 1903 0300 21F8     		.2byte	0xf821
 1904 0302 0F       		.uleb128 0xf
 1905 0303 34030000 		.4byte	.LASF81
 1906 0307 6318     		.2byte	0x1863
 1907 0309 0F       		.uleb128 0xf
 1908 030a 7D040000 		.4byte	.LASF82
 1909 030e 658A     		.2byte	0x8a65
 1910 0310 0F       		.uleb128 0xf
 1911 0311 54040000 		.4byte	.LASF83
 1912 0315 D448     		.2byte	0x48d4
 1913 0317 00       		.byte	0
 1914 0318 03       		.uleb128 0x3
 1915 0319 97010000 		.4byte	.LASF84
 1916 031d 07       		.byte	0x7
 1917 031e 72       		.byte	0x72
 1918 031f 7A020000 		.4byte	0x27a
 1919 0323 03       		.uleb128 0x3
 1920 0324 7A080000 		.4byte	.LASF85
 1921 0328 08       		.byte	0x8
 1922 0329 53       		.byte	0x53
 1923 032a 25000000 		.4byte	0x25
 1924 032e 03       		.uleb128 0x3
 1925 032f 5F080000 		.4byte	.LASF86
 1926 0333 08       		.byte	0x8
 1927 0334 54       		.byte	0x54
 1928 0335 37000000 		.4byte	0x37
 1929 0339 0C       		.uleb128 0xc
 1930 033a 04       		.byte	0x4
 1931 033b 3F030000 		.4byte	0x33f
 1932 033f 11       		.uleb128 0x11
 1933 0340 03       		.uleb128 0x3
 1934 0341 8F030000 		.4byte	.LASF87
 1935 0345 09       		.byte	0x9
 1936 0346 4D       		.byte	0x4d
 1937 0347 2E030000 		.4byte	0x32e
 1938 034b 03       		.uleb128 0x3
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 43


 1939 034c 2B090000 		.4byte	.LASF88
 1940 0350 09       		.byte	0x9
 1941 0351 4F       		.byte	0x4f
 1942 0352 2E030000 		.4byte	0x32e
 1943 0356 03       		.uleb128 0x3
 1944 0357 4A030000 		.4byte	.LASF89
 1945 035b 09       		.byte	0x9
 1946 035c 78       		.byte	0x78
 1947 035d 23030000 		.4byte	0x323
 1948 0361 05       		.uleb128 0x5
 1949 0362 01       		.byte	0x1
 1950 0363 77000000 		.4byte	0x77
 1951 0367 0A       		.byte	0xa
 1952 0368 0F       		.byte	0xf
 1953 0369 86030000 		.4byte	0x386
 1954 036d 06       		.uleb128 0x6
 1955 036e 90080000 		.4byte	.LASF90
 1956 0372 00       		.byte	0
 1957 0373 06       		.uleb128 0x6
 1958 0374 A7060000 		.4byte	.LASF91
 1959 0378 01       		.byte	0x1
 1960 0379 06       		.uleb128 0x6
 1961 037a 3B050000 		.4byte	.LASF92
 1962 037e 02       		.byte	0x2
 1963 037f 06       		.uleb128 0x6
 1964 0380 9C040000 		.4byte	.LASF93
 1965 0384 03       		.byte	0x3
 1966 0385 00       		.byte	0
 1967 0386 03       		.uleb128 0x3
 1968 0387 26060000 		.4byte	.LASF94
 1969 038b 0A       		.byte	0xa
 1970 038c 0F       		.byte	0xf
 1971 038d 61030000 		.4byte	0x361
 1972 0391 05       		.uleb128 0x5
 1973 0392 01       		.byte	0x1
 1974 0393 77000000 		.4byte	0x77
 1975 0397 0B       		.byte	0xb
 1976 0398 11       		.byte	0x11
 1977 0399 AA030000 		.4byte	0x3aa
 1978 039d 06       		.uleb128 0x6
 1979 039e 09030000 		.4byte	.LASF95
 1980 03a2 00       		.byte	0
 1981 03a3 06       		.uleb128 0x6
 1982 03a4 51000000 		.4byte	.LASF96
 1983 03a8 01       		.byte	0x1
 1984 03a9 00       		.byte	0
 1985 03aa 03       		.uleb128 0x3
 1986 03ab E7010000 		.4byte	.LASF97
 1987 03af 0B       		.byte	0xb
 1988 03b0 11       		.byte	0x11
 1989 03b1 91030000 		.4byte	0x391
 1990 03b5 12       		.uleb128 0x12
 1991 03b6 04       		.byte	0x4
 1992 03b7 0B       		.byte	0xb
 1993 03b8 14       		.byte	0x14
 1994 03b9 D4030000 		.4byte	0x3d4
 1995 03bd 13       		.uleb128 0x13
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 44


 1996 03be EB040000 		.4byte	.LASF98
 1997 03c2 0B       		.byte	0xb
 1998 03c3 16       		.byte	0x16
 1999 03c4 18030000 		.4byte	0x318
 2000 03c8 13       		.uleb128 0x13
 2001 03c9 87050000 		.4byte	.LASF99
 2002 03cd 0B       		.byte	0xb
 2003 03ce 17       		.byte	0x17
 2004 03cf D4030000 		.4byte	0x3d4
 2005 03d3 00       		.byte	0
 2006 03d4 14       		.uleb128 0x14
 2007 03d5 37010000 		.4byte	0x137
 2008 03d9 E4030000 		.4byte	0x3e4
 2009 03dd 15       		.uleb128 0x15
 2010 03de 5C020000 		.4byte	0x25c
 2011 03e2 03       		.byte	0x3
 2012 03e3 00       		.byte	0
 2013 03e4 09       		.uleb128 0x9
 2014 03e5 C9060000 		.4byte	.LASF100
 2015 03e9 06       		.byte	0x6
 2016 03ea 0B       		.byte	0xb
 2017 03eb 12       		.byte	0x12
 2018 03ec 09040000 		.4byte	0x409
 2019 03f0 0A       		.uleb128 0xa
 2020 03f1 98070000 		.4byte	.LASF101
 2021 03f5 0B       		.byte	0xb
 2022 03f6 13       		.byte	0x13
 2023 03f7 AA030000 		.4byte	0x3aa
 2024 03fb 00       		.byte	0
 2025 03fc 0A       		.uleb128 0xa
 2026 03fd 04040000 		.4byte	.LASF102
 2027 0401 0B       		.byte	0xb
 2028 0402 18       		.byte	0x18
 2029 0403 B5030000 		.4byte	0x3b5
 2030 0407 02       		.byte	0x2
 2031 0408 00       		.byte	0
 2032 0409 03       		.uleb128 0x3
 2033 040a 3E020000 		.4byte	.LASF103
 2034 040e 0B       		.byte	0xb
 2035 040f 1A       		.byte	0x1a
 2036 0410 E4030000 		.4byte	0x3e4
 2037 0414 16       		.uleb128 0x16
 2038 0415 46       		.byte	0x46
 2039 0416 0B       		.byte	0xb
 2040 0417 1D       		.byte	0x1d
 2041 0418 65040000 		.4byte	0x465
 2042 041c 0A       		.uleb128 0xa
 2043 041d 02050000 		.4byte	.LASF104
 2044 0421 0B       		.byte	0xb
 2045 0422 1E       		.byte	0x1e
 2046 0423 65040000 		.4byte	0x465
 2047 0427 00       		.byte	0
 2048 0428 0A       		.uleb128 0xa
 2049 0429 45050000 		.4byte	.LASF105
 2050 042d 0B       		.byte	0xb
 2051 042e 1F       		.byte	0x1f
 2052 042f 49010000 		.4byte	0x149
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 45


 2053 0433 3C       		.byte	0x3c
 2054 0434 0A       		.uleb128 0xa
 2055 0435 5B040000 		.4byte	.LASF106
 2056 0439 0B       		.byte	0xb
 2057 043a 20       		.byte	0x20
 2058 043b 49010000 		.4byte	0x149
 2059 043f 3E       		.byte	0x3e
 2060 0440 0A       		.uleb128 0xa
 2061 0441 B3080000 		.4byte	.LASF107
 2062 0445 0B       		.byte	0xb
 2063 0446 21       		.byte	0x21
 2064 0447 49010000 		.4byte	0x149
 2065 044b 40       		.byte	0x40
 2066 044c 0A       		.uleb128 0xa
 2067 044d 69040000 		.4byte	.LASF108
 2068 0451 0B       		.byte	0xb
 2069 0452 22       		.byte	0x22
 2070 0453 49010000 		.4byte	0x149
 2071 0457 42       		.byte	0x42
 2072 0458 0A       		.uleb128 0xa
 2073 0459 53010000 		.4byte	.LASF109
 2074 045d 0B       		.byte	0xb
 2075 045e 24       		.byte	0x24
 2076 045f 86030000 		.4byte	0x386
 2077 0463 44       		.byte	0x44
 2078 0464 00       		.byte	0
 2079 0465 14       		.uleb128 0x14
 2080 0466 09040000 		.4byte	0x409
 2081 046a 75040000 		.4byte	0x475
 2082 046e 15       		.uleb128 0x15
 2083 046f 5C020000 		.4byte	0x25c
 2084 0473 09       		.byte	0x9
 2085 0474 00       		.byte	0
 2086 0475 03       		.uleb128 0x3
 2087 0476 64060000 		.4byte	.LASF110
 2088 047a 0B       		.byte	0xb
 2089 047b 25       		.byte	0x25
 2090 047c 14040000 		.4byte	0x414
 2091 0480 05       		.uleb128 0x5
 2092 0481 01       		.byte	0x1
 2093 0482 77000000 		.4byte	0x77
 2094 0486 0C       		.byte	0xc
 2095 0487 18       		.byte	0x18
 2096 0488 9F040000 		.4byte	0x49f
 2097 048c 06       		.uleb128 0x6
 2098 048d D4030000 		.4byte	.LASF111
 2099 0491 00       		.byte	0
 2100 0492 06       		.uleb128 0x6
 2101 0493 85070000 		.4byte	.LASF112
 2102 0497 01       		.byte	0x1
 2103 0498 06       		.uleb128 0x6
 2104 0499 A0070000 		.4byte	.LASF113
 2105 049d 02       		.byte	0x2
 2106 049e 00       		.byte	0
 2107 049f 03       		.uleb128 0x3
 2108 04a0 69080000 		.4byte	.LASF114
 2109 04a4 0C       		.byte	0xc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 46


 2110 04a5 18       		.byte	0x18
 2111 04a6 80040000 		.4byte	0x480
 2112 04aa 05       		.uleb128 0x5
 2113 04ab 01       		.byte	0x1
 2114 04ac 77000000 		.4byte	0x77
 2115 04b0 0C       		.byte	0xc
 2116 04b1 19       		.byte	0x19
 2117 04b2 C9040000 		.4byte	0x4c9
 2118 04b6 06       		.uleb128 0x6
 2119 04b7 12000000 		.4byte	.LASF115
 2120 04bb 00       		.byte	0
 2121 04bc 06       		.uleb128 0x6
 2122 04bd CF010000 		.4byte	.LASF116
 2123 04c1 01       		.byte	0x1
 2124 04c2 06       		.uleb128 0x6
 2125 04c3 0D080000 		.4byte	.LASF117
 2126 04c7 02       		.byte	0x2
 2127 04c8 00       		.byte	0
 2128 04c9 03       		.uleb128 0x3
 2129 04ca 18090000 		.4byte	.LASF118
 2130 04ce 0C       		.byte	0xc
 2131 04cf 19       		.byte	0x19
 2132 04d0 AA040000 		.4byte	0x4aa
 2133 04d4 05       		.uleb128 0x5
 2134 04d5 01       		.byte	0x1
 2135 04d6 77000000 		.4byte	0x77
 2136 04da 0C       		.byte	0xc
 2137 04db 1A       		.byte	0x1a
 2138 04dc ED040000 		.4byte	0x4ed
 2139 04e0 06       		.uleb128 0x6
 2140 04e1 06090000 		.4byte	.LASF119
 2141 04e5 00       		.byte	0
 2142 04e6 06       		.uleb128 0x6
 2143 04e7 6D010000 		.4byte	.LASF120
 2144 04eb 01       		.byte	0x1
 2145 04ec 00       		.byte	0
 2146 04ed 03       		.uleb128 0x3
 2147 04ee 51030000 		.4byte	.LASF121
 2148 04f2 0C       		.byte	0xc
 2149 04f3 1A       		.byte	0x1a
 2150 04f4 D4040000 		.4byte	0x4d4
 2151 04f8 16       		.uleb128 0x16
 2152 04f9 08       		.byte	0x8
 2153 04fa 0C       		.byte	0xc
 2154 04fb 1F       		.byte	0x1f
 2155 04fc 19050000 		.4byte	0x519
 2156 0500 0A       		.uleb128 0xa
 2157 0501 24090000 		.4byte	.LASF122
 2158 0505 0C       		.byte	0xc
 2159 0506 21       		.byte	0x21
 2160 0507 49010000 		.4byte	0x149
 2161 050b 00       		.byte	0
 2162 050c 0A       		.uleb128 0xa
 2163 050d 36060000 		.4byte	.LASF123
 2164 0511 0C       		.byte	0xc
 2165 0512 22       		.byte	0x22
 2166 0513 9B010000 		.4byte	0x19b
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 47


 2167 0517 04       		.byte	0x4
 2168 0518 00       		.byte	0
 2169 0519 03       		.uleb128 0x3
 2170 051a 17080000 		.4byte	.LASF124
 2171 051e 0C       		.byte	0xc
 2172 051f 23       		.byte	0x23
 2173 0520 F8040000 		.4byte	0x4f8
 2174 0524 17       		.uleb128 0x17
 2175 0525 2C03     		.2byte	0x32c
 2176 0527 0C       		.byte	0xc
 2177 0528 25       		.byte	0x25
 2178 0529 95050000 		.4byte	0x595
 2179 052d 0A       		.uleb128 0xa
 2180 052e FF050000 		.4byte	.LASF125
 2181 0532 0C       		.byte	0xc
 2182 0533 27       		.byte	0x27
 2183 0534 95050000 		.4byte	0x595
 2184 0538 00       		.byte	0
 2185 0539 18       		.uleb128 0x18
 2186 053a 92060000 		.4byte	.LASF126
 2187 053e 0C       		.byte	0xc
 2188 053f 28       		.byte	0x28
 2189 0540 49010000 		.4byte	0x149
 2190 0544 2003     		.2byte	0x320
 2191 0546 18       		.uleb128 0x18
 2192 0547 1B010000 		.4byte	.LASF127
 2193 054b 0C       		.byte	0xc
 2194 054c 29       		.byte	0x29
 2195 054d 49010000 		.4byte	0x149
 2196 0551 2203     		.2byte	0x322
 2197 0553 18       		.uleb128 0x18
 2198 0554 7E010000 		.4byte	.LASF128
 2199 0558 0C       		.byte	0xc
 2200 0559 2A       		.byte	0x2a
 2201 055a 49010000 		.4byte	0x149
 2202 055e 2403     		.2byte	0x324
 2203 0560 18       		.uleb128 0x18
 2204 0561 F0030000 		.4byte	.LASF129
 2205 0565 0C       		.byte	0xc
 2206 0566 2B       		.byte	0x2b
 2207 0567 49010000 		.4byte	0x149
 2208 056b 2603     		.2byte	0x326
 2209 056d 18       		.uleb128 0x18
 2210 056e 6C000000 		.4byte	.LASF130
 2211 0572 0C       		.byte	0xc
 2212 0573 2C       		.byte	0x2c
 2213 0574 ED040000 		.4byte	0x4ed
 2214 0578 2803     		.2byte	0x328
 2215 057a 18       		.uleb128 0x18
 2216 057b F8030000 		.4byte	.LASF131
 2217 057f 0C       		.byte	0xc
 2218 0580 2D       		.byte	0x2d
 2219 0581 C9040000 		.4byte	0x4c9
 2220 0585 2903     		.2byte	0x329
 2221 0587 18       		.uleb128 0x18
 2222 0588 E3080000 		.4byte	.LASF132
 2223 058c 0C       		.byte	0xc
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 48


 2224 058d 2E       		.byte	0x2e
 2225 058e 9F040000 		.4byte	0x49f
 2226 0592 2A03     		.2byte	0x32a
 2227 0594 00       		.byte	0
 2228 0595 14       		.uleb128 0x14
 2229 0596 19050000 		.4byte	0x519
 2230 059a A5050000 		.4byte	0x5a5
 2231 059e 15       		.uleb128 0x15
 2232 059f 5C020000 		.4byte	0x25c
 2233 05a3 63       		.byte	0x63
 2234 05a4 00       		.byte	0
 2235 05a5 03       		.uleb128 0x3
 2236 05a6 00080000 		.4byte	.LASF133
 2237 05aa 0C       		.byte	0xc
 2238 05ab 2F       		.byte	0x2f
 2239 05ac 24050000 		.4byte	0x524
 2240 05b0 19       		.uleb128 0x19
 2241 05b1 52050000 		.4byte	.LASF138
 2242 05b5 01       		.byte	0x1
 2243 05b6 6A       		.byte	0x6a
 2244 05b7 02060000 		.4byte	0x602
 2245 05bb 00000000 		.4byte	.LFB0
 2246 05bf 4E000000 		.4byte	.LFE0-.LFB0
 2247 05c3 01       		.uleb128 0x1
 2248 05c4 9C       		.byte	0x9c
 2249 05c5 02060000 		.4byte	0x602
 2250 05c9 1A       		.uleb128 0x1a
 2251 05ca FB040000 		.4byte	.LASF134
 2252 05ce 01       		.byte	0x1
 2253 05cf 6A       		.byte	0x6a
 2254 05d0 08060000 		.4byte	0x608
 2255 05d4 02       		.uleb128 0x2
 2256 05d5 91       		.byte	0x91
 2257 05d6 6C       		.sleb128 -20
 2258 05d7 1A       		.uleb128 0x1a
 2259 05d8 B2050000 		.4byte	.LASF135
 2260 05dc 01       		.byte	0x1
 2261 05dd 6A       		.byte	0x6a
 2262 05de 02060000 		.4byte	0x602
 2263 05e2 02       		.uleb128 0x2
 2264 05e3 91       		.byte	0x91
 2265 05e4 68       		.sleb128 -24
 2266 05e5 1A       		.uleb128 0x1a
 2267 05e6 7A070000 		.4byte	.LASF136
 2268 05ea 01       		.byte	0x1
 2269 05eb 6B       		.byte	0x6b
 2270 05ec 0E060000 		.4byte	0x60e
 2271 05f0 02       		.uleb128 0x2
 2272 05f1 91       		.byte	0x91
 2273 05f2 64       		.sleb128 -28
 2274 05f3 1B       		.uleb128 0x1b
 2275 05f4 746F6B00 		.ascii	"tok\000"
 2276 05f8 01       		.byte	0x1
 2277 05f9 6C       		.byte	0x6c
 2278 05fa 02060000 		.4byte	0x602
 2279 05fe 02       		.uleb128 0x2
 2280 05ff 91       		.byte	0x91
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 49


 2281 0600 74       		.sleb128 -12
 2282 0601 00       		.byte	0
 2283 0602 0C       		.uleb128 0xc
 2284 0603 04       		.byte	0x4
 2285 0604 F0000000 		.4byte	0xf0
 2286 0608 0C       		.uleb128 0xc
 2287 0609 04       		.byte	0x4
 2288 060a 2C010000 		.4byte	0x12c
 2289 060e 0D       		.uleb128 0xd
 2290 060f 2C000000 		.4byte	0x2c
 2291 0613 1C       		.uleb128 0x1c
 2292 0614 7F030000 		.4byte	.LASF171
 2293 0618 01       		.byte	0x1
 2294 0619 7C       		.byte	0x7c
 2295 061a 00000000 		.4byte	.LFB1
 2296 061e 32000000 		.4byte	.LFE1-.LFB1
 2297 0622 01       		.uleb128 0x1
 2298 0623 9C       		.byte	0x9c
 2299 0624 61060000 		.4byte	0x661
 2300 0628 1A       		.uleb128 0x1a
 2301 0629 40060000 		.4byte	.LASF137
 2302 062d 01       		.byte	0x1
 2303 062e 7C       		.byte	0x7c
 2304 062f 02060000 		.4byte	0x602
 2305 0633 02       		.uleb128 0x2
 2306 0634 91       		.byte	0x91
 2307 0635 74       		.sleb128 -12
 2308 0636 1A       		.uleb128 0x1a
 2309 0637 88000000 		.4byte	.LASF15
 2310 063b 01       		.byte	0x1
 2311 063c 7C       		.byte	0x7c
 2312 063d 61060000 		.4byte	0x661
 2313 0641 02       		.uleb128 0x2
 2314 0642 91       		.byte	0x91
 2315 0643 73       		.sleb128 -13
 2316 0644 1A       		.uleb128 0x1a
 2317 0645 00090000 		.4byte	.LASF16
 2318 0649 01       		.byte	0x1
 2319 064a 7D       		.byte	0x7d
 2320 064b 66060000 		.4byte	0x666
 2321 064f 02       		.uleb128 0x2
 2322 0650 91       		.byte	0x91
 2323 0651 6C       		.sleb128 -20
 2324 0652 1D       		.uleb128 0x1d
 2325 0653 656E6400 		.ascii	"end\000"
 2326 0657 01       		.byte	0x1
 2327 0658 7D       		.byte	0x7d
 2328 0659 66060000 		.4byte	0x666
 2329 065d 02       		.uleb128 0x2
 2330 065e 91       		.byte	0x91
 2331 065f 68       		.sleb128 -24
 2332 0660 00       		.byte	0
 2333 0661 0D       		.uleb128 0xd
 2334 0662 7E000000 		.4byte	0x7e
 2335 0666 0D       		.uleb128 0xd
 2336 0667 25000000 		.4byte	0x25
 2337 066b 1E       		.uleb128 0x1e
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 50


 2338 066c CE080000 		.4byte	.LASF139
 2339 0670 01       		.byte	0x1
 2340 0671 87       		.byte	0x87
 2341 0672 25000000 		.4byte	0x25
 2342 0676 00000000 		.4byte	.LFB2
 2343 067a F0000000 		.4byte	.LFE2-.LFB2
 2344 067e 01       		.uleb128 0x1
 2345 067f 9C       		.byte	0x9c
 2346 0680 F1060000 		.4byte	0x6f1
 2347 0684 1A       		.uleb128 0x1a
 2348 0685 FB040000 		.4byte	.LASF134
 2349 0689 01       		.byte	0x1
 2350 068a 87       		.byte	0x87
 2351 068b 08060000 		.4byte	0x608
 2352 068f 02       		.uleb128 0x2
 2353 0690 91       		.byte	0x91
 2354 0691 6C       		.sleb128 -20
 2355 0692 1D       		.uleb128 0x1d
 2356 0693 6A7300   		.ascii	"js\000"
 2357 0696 01       		.byte	0x1
 2358 0697 87       		.byte	0x87
 2359 0698 90010000 		.4byte	0x190
 2360 069c 02       		.uleb128 0x2
 2361 069d 91       		.byte	0x91
 2362 069e 68       		.sleb128 -24
 2363 069f 1D       		.uleb128 0x1d
 2364 06a0 6C656E00 		.ascii	"len\000"
 2365 06a4 01       		.byte	0x1
 2366 06a5 88       		.byte	0x88
 2367 06a6 0E060000 		.4byte	0x60e
 2368 06aa 02       		.uleb128 0x2
 2369 06ab 91       		.byte	0x91
 2370 06ac 64       		.sleb128 -28
 2371 06ad 1A       		.uleb128 0x1a
 2372 06ae B2050000 		.4byte	.LASF135
 2373 06b2 01       		.byte	0x1
 2374 06b3 88       		.byte	0x88
 2375 06b4 02060000 		.4byte	0x602
 2376 06b8 02       		.uleb128 0x2
 2377 06b9 91       		.byte	0x91
 2378 06ba 60       		.sleb128 -32
 2379 06bb 1A       		.uleb128 0x1a
 2380 06bc 7A070000 		.4byte	.LASF136
 2381 06c0 01       		.byte	0x1
 2382 06c1 89       		.byte	0x89
 2383 06c2 0E060000 		.4byte	0x60e
 2384 06c6 02       		.uleb128 0x2
 2385 06c7 91       		.byte	0x91
 2386 06c8 00       		.sleb128 0
 2387 06c9 1F       		.uleb128 0x1f
 2388 06ca 40060000 		.4byte	.LASF137
 2389 06ce 01       		.byte	0x1
 2390 06cf 8A       		.byte	0x8a
 2391 06d0 02060000 		.4byte	0x602
 2392 06d4 02       		.uleb128 0x2
 2393 06d5 91       		.byte	0x91
 2394 06d6 70       		.sleb128 -16
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 51


 2395 06d7 1F       		.uleb128 0x1f
 2396 06d8 00090000 		.4byte	.LASF16
 2397 06dc 01       		.byte	0x1
 2398 06dd 8B       		.byte	0x8b
 2399 06de 25000000 		.4byte	0x25
 2400 06e2 02       		.uleb128 0x2
 2401 06e3 91       		.byte	0x91
 2402 06e4 74       		.sleb128 -12
 2403 06e5 20       		.uleb128 0x20
 2404 06e6 21080000 		.4byte	.LASF172
 2405 06ea 01       		.byte	0x1
 2406 06eb AC       		.byte	0xac
 2407 06ec 9C000000 		.4byte	.L11
 2408 06f0 00       		.byte	0
 2409 06f1 1E       		.uleb128 0x1e
 2410 06f2 19000000 		.4byte	.LASF140
 2411 06f6 01       		.byte	0x1
 2412 06f7 C1       		.byte	0xc1
 2413 06f8 25000000 		.4byte	0x25
 2414 06fc 00000000 		.4byte	.LFB3
 2415 0700 E6020000 		.4byte	.LFE3-.LFB3
 2416 0704 01       		.uleb128 0x1
 2417 0705 9C       		.byte	0x9c
 2418 0706 98070000 		.4byte	0x798
 2419 070a 1A       		.uleb128 0x1a
 2420 070b FB040000 		.4byte	.LASF134
 2421 070f 01       		.byte	0x1
 2422 0710 C1       		.byte	0xc1
 2423 0711 08060000 		.4byte	0x608
 2424 0715 02       		.uleb128 0x2
 2425 0716 91       		.byte	0x91
 2426 0717 64       		.sleb128 -28
 2427 0718 1D       		.uleb128 0x1d
 2428 0719 6A7300   		.ascii	"js\000"
 2429 071c 01       		.byte	0x1
 2430 071d C1       		.byte	0xc1
 2431 071e 90010000 		.4byte	0x190
 2432 0722 02       		.uleb128 0x2
 2433 0723 91       		.byte	0x91
 2434 0724 60       		.sleb128 -32
 2435 0725 1D       		.uleb128 0x1d
 2436 0726 6C656E00 		.ascii	"len\000"
 2437 072a 01       		.byte	0x1
 2438 072b C2       		.byte	0xc2
 2439 072c 0E060000 		.4byte	0x60e
 2440 0730 02       		.uleb128 0x2
 2441 0731 91       		.byte	0x91
 2442 0732 5C       		.sleb128 -36
 2443 0733 1A       		.uleb128 0x1a
 2444 0734 B2050000 		.4byte	.LASF135
 2445 0738 01       		.byte	0x1
 2446 0739 C2       		.byte	0xc2
 2447 073a 02060000 		.4byte	0x602
 2448 073e 02       		.uleb128 0x2
 2449 073f 91       		.byte	0x91
 2450 0740 58       		.sleb128 -40
 2451 0741 1A       		.uleb128 0x1a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 52


 2452 0742 7A070000 		.4byte	.LASF136
 2453 0746 01       		.byte	0x1
 2454 0747 C3       		.byte	0xc3
 2455 0748 0E060000 		.4byte	0x60e
 2456 074c 02       		.uleb128 0x2
 2457 074d 91       		.byte	0x91
 2458 074e 00       		.sleb128 0
 2459 074f 1F       		.uleb128 0x1f
 2460 0750 40060000 		.4byte	.LASF137
 2461 0754 01       		.byte	0x1
 2462 0755 C4       		.byte	0xc4
 2463 0756 02060000 		.4byte	0x602
 2464 075a 02       		.uleb128 0x2
 2465 075b 91       		.byte	0x91
 2466 075c 68       		.sleb128 -24
 2467 075d 1F       		.uleb128 0x1f
 2468 075e 00090000 		.4byte	.LASF16
 2469 0762 01       		.byte	0x1
 2470 0763 C6       		.byte	0xc6
 2471 0764 25000000 		.4byte	0x25
 2472 0768 02       		.uleb128 0x2
 2473 0769 91       		.byte	0x91
 2474 076a 70       		.sleb128 -16
 2475 076b 21       		.uleb128 0x21
 2476 076c 20000000 		.4byte	.LBB2
 2477 0770 90020000 		.4byte	.LBE2-.LBB2
 2478 0774 1B       		.uleb128 0x1b
 2479 0775 6300     		.ascii	"c\000"
 2480 0777 01       		.byte	0x1
 2481 0778 CC       		.byte	0xcc
 2482 0779 89010000 		.4byte	0x189
 2483 077d 02       		.uleb128 0x2
 2484 077e 91       		.byte	0x91
 2485 077f 6F       		.sleb128 -17
 2486 0780 21       		.uleb128 0x21
 2487 0781 84000000 		.4byte	.LBB3
 2488 0785 2C020000 		.4byte	.LBE3-.LBB3
 2489 0789 1B       		.uleb128 0x1b
 2490 078a 6900     		.ascii	"i\000"
 2491 078c 01       		.byte	0x1
 2492 078d E1       		.byte	0xe1
 2493 078e 25000000 		.4byte	0x25
 2494 0792 02       		.uleb128 0x2
 2495 0793 91       		.byte	0x91
 2496 0794 74       		.sleb128 -12
 2497 0795 00       		.byte	0
 2498 0796 00       		.byte	0
 2499 0797 00       		.byte	0
 2500 0798 22       		.uleb128 0x22
 2501 0799 E8060000 		.4byte	.LASF141
 2502 079d 02       		.byte	0x2
 2503 079e 0E       		.byte	0xe
 2504 079f 46020000 		.4byte	0x246
 2505 07a3 00000000 		.4byte	.LFB115
 2506 07a7 6C000000 		.4byte	.LFE115-.LFB115
 2507 07ab 01       		.uleb128 0x1
 2508 07ac 9C       		.byte	0x9c
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 53


 2509 07ad D5070000 		.4byte	0x7d5
 2510 07b1 1D       		.uleb128 0x1d
 2511 07b2 6D6500   		.ascii	"me\000"
 2512 07b5 02       		.byte	0x2
 2513 07b6 0E       		.byte	0xe
 2514 07b7 DB070000 		.4byte	0x7db
 2515 07bb 02       		.uleb128 0x2
 2516 07bc 91       		.byte	0x91
 2517 07bd 6C       		.sleb128 -20
 2518 07be 21       		.uleb128 0x21
 2519 07bf 38000000 		.4byte	.LBB4
 2520 07c3 1E000000 		.4byte	.LBE4-.LBB4
 2521 07c7 1B       		.uleb128 0x1b
 2522 07c8 6900     		.ascii	"i\000"
 2523 07ca 02       		.byte	0x2
 2524 07cb 15       		.byte	0x15
 2525 07cc 25000000 		.4byte	0x25
 2526 07d0 02       		.uleb128 0x2
 2527 07d1 91       		.byte	0x91
 2528 07d2 74       		.sleb128 -12
 2529 07d3 00       		.byte	0
 2530 07d4 00       		.byte	0
 2531 07d5 0C       		.uleb128 0xc
 2532 07d6 04       		.byte	0x4
 2533 07d7 A5050000 		.4byte	0x5a5
 2534 07db 0D       		.uleb128 0xd
 2535 07dc D5070000 		.4byte	0x7d5
 2536 07e0 23       		.uleb128 0x23
 2537 07e1 1A030000 		.4byte	.LASF142
 2538 07e5 02       		.byte	0x2
 2539 07e6 1B       		.byte	0x1b
 2540 07e7 46020000 		.4byte	0x246
 2541 07eb 00000000 		.4byte	.LFB116
 2542 07ef 32000000 		.4byte	.LFE116-.LFB116
 2543 07f3 01       		.uleb128 0x1
 2544 07f4 9C       		.byte	0x9c
 2545 07f5 30080000 		.4byte	0x830
 2546 07f9 1D       		.uleb128 0x1d
 2547 07fa 6D6500   		.ascii	"me\000"
 2548 07fd 02       		.byte	0x2
 2549 07fe 1B       		.byte	0x1b
 2550 07ff DB070000 		.4byte	0x7db
 2551 0803 02       		.uleb128 0x2
 2552 0804 91       		.byte	0x91
 2553 0805 6C       		.sleb128 -20
 2554 0806 1D       		.uleb128 0x1d
 2555 0807 657600   		.ascii	"ev\000"
 2556 080a 02       		.byte	0x2
 2557 080b 1B       		.byte	0x1b
 2558 080c 9F040000 		.4byte	0x49f
 2559 0810 02       		.uleb128 0x2
 2560 0811 91       		.byte	0x91
 2561 0812 6B       		.sleb128 -21
 2562 0813 1D       		.uleb128 0x1d
 2563 0814 74736B00 		.ascii	"tsk\000"
 2564 0818 02       		.byte	0x2
 2565 0819 1B       		.byte	0x1b
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 54


 2566 081a C9040000 		.4byte	0x4c9
 2567 081e 02       		.uleb128 0x2
 2568 081f 91       		.byte	0x91
 2569 0820 6A       		.sleb128 -22
 2570 0821 1B       		.uleb128 0x1b
 2571 0822 72657300 		.ascii	"res\000"
 2572 0826 02       		.byte	0x2
 2573 0827 1D       		.byte	0x1d
 2574 0828 46020000 		.4byte	0x246
 2575 082c 02       		.uleb128 0x2
 2576 082d 91       		.byte	0x91
 2577 082e 77       		.sleb128 -9
 2578 082f 00       		.byte	0
 2579 0830 23       		.uleb128 0x23
 2580 0831 0C050000 		.4byte	.LASF143
 2581 0835 02       		.byte	0x2
 2582 0836 25       		.byte	0x25
 2583 0837 7E010000 		.4byte	0x17e
 2584 083b 00000000 		.4byte	.LFB117
 2585 083f 34000000 		.4byte	.LFE117-.LFB117
 2586 0843 01       		.uleb128 0x1
 2587 0844 9C       		.byte	0x9c
 2588 0845 65080000 		.4byte	0x865
 2589 0849 1D       		.uleb128 0x1d
 2590 084a 6D6500   		.ascii	"me\000"
 2591 084d 02       		.byte	0x2
 2592 084e 25       		.byte	0x25
 2593 084f DB070000 		.4byte	0x7db
 2594 0853 02       		.uleb128 0x2
 2595 0854 91       		.byte	0x91
 2596 0855 6C       		.sleb128 -20
 2597 0856 1B       		.uleb128 0x1b
 2598 0857 72657400 		.ascii	"ret\000"
 2599 085b 02       		.byte	0x2
 2600 085c 26       		.byte	0x26
 2601 085d 7E010000 		.4byte	0x17e
 2602 0861 02       		.uleb128 0x2
 2603 0862 91       		.byte	0x91
 2604 0863 77       		.sleb128 -9
 2605 0864 00       		.byte	0
 2606 0865 22       		.uleb128 0x22
 2607 0866 FA060000 		.4byte	.LASF144
 2608 086a 02       		.byte	0x2
 2609 086b 30       		.byte	0x30
 2610 086c 46020000 		.4byte	0x246
 2611 0870 00000000 		.4byte	.LFB118
 2612 0874 FC010000 		.4byte	.LFE118-.LFB118
 2613 0878 01       		.uleb128 0x1
 2614 0879 9C       		.byte	0x9c
 2615 087a 6C090000 		.4byte	0x96c
 2616 087e 1D       		.uleb128 0x1d
 2617 087f 6D6500   		.ascii	"me\000"
 2618 0882 02       		.byte	0x2
 2619 0883 30       		.byte	0x30
 2620 0884 DB070000 		.4byte	0x7db
 2621 0888 02       		.uleb128 0x2
 2622 0889 91       		.byte	0x91
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 55


 2623 088a 54       		.sleb128 -44
 2624 088b 1A       		.uleb128 0x1a
 2625 088c A9080000 		.4byte	.LASF145
 2626 0890 02       		.byte	0x2
 2627 0891 31       		.byte	0x31
 2628 0892 25000000 		.4byte	0x25
 2629 0896 02       		.uleb128 0x2
 2630 0897 91       		.byte	0x91
 2631 0898 50       		.sleb128 -48
 2632 0899 1A       		.uleb128 0x1a
 2633 089a 71040000 		.4byte	.LASF146
 2634 089e 02       		.byte	0x2
 2635 089f 32       		.byte	0x32
 2636 08a0 7C090000 		.4byte	0x97c
 2637 08a4 02       		.uleb128 0x2
 2638 08a5 91       		.byte	0x91
 2639 08a6 4C       		.sleb128 -52
 2640 08a7 1A       		.uleb128 0x1a
 2641 08a8 B2050000 		.4byte	.LASF135
 2642 08ac 02       		.byte	0x2
 2643 08ad 33       		.byte	0x33
 2644 08ae 02060000 		.4byte	0x602
 2645 08b2 02       		.uleb128 0x2
 2646 08b3 91       		.byte	0x91
 2647 08b4 48       		.sleb128 -56
 2648 08b5 1A       		.uleb128 0x1a
 2649 08b6 E0040000 		.4byte	.LASF147
 2650 08ba 02       		.byte	0x2
 2651 08bb 34       		.byte	0x34
 2652 08bc 63020000 		.4byte	0x263
 2653 08c0 02       		.uleb128 0x2
 2654 08c1 91       		.byte	0x91
 2655 08c2 00       		.sleb128 0
 2656 08c3 1A       		.uleb128 0x1a
 2657 08c4 1A070000 		.4byte	.LASF148
 2658 08c8 02       		.byte	0x2
 2659 08c9 35       		.byte	0x35
 2660 08ca 82090000 		.4byte	0x982
 2661 08ce 02       		.uleb128 0x2
 2662 08cf 91       		.byte	0x91
 2663 08d0 04       		.sleb128 4
 2664 08d1 1B       		.uleb128 0x1b
 2665 08d2 72657300 		.ascii	"res\000"
 2666 08d6 02       		.byte	0x2
 2667 08d7 38       		.byte	0x38
 2668 08d8 46020000 		.4byte	0x246
 2669 08dc 02       		.uleb128 0x2
 2670 08dd 91       		.byte	0x91
 2671 08de 5B       		.sleb128 -37
 2672 08df 1F       		.uleb128 0x1f
 2673 08e0 BC060000 		.4byte	.LASF149
 2674 08e4 02       		.byte	0x2
 2675 08e5 39       		.byte	0x39
 2676 08e6 37000000 		.4byte	0x37
 2677 08ea 02       		.uleb128 0x2
 2678 08eb 91       		.byte	0x91
 2679 08ec 74       		.sleb128 -12
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 56


 2680 08ed 1F       		.uleb128 0x1f
 2681 08ee 99080000 		.4byte	.LASF150
 2682 08f2 02       		.byte	0x2
 2683 08f3 3A       		.byte	0x3a
 2684 08f4 37000000 		.4byte	0x37
 2685 08f8 02       		.uleb128 0x2
 2686 08f9 91       		.byte	0x91
 2687 08fa 70       		.sleb128 -16
 2688 08fb 1F       		.uleb128 0x1f
 2689 08fc EB040000 		.4byte	.LASF98
 2690 0900 02       		.byte	0x2
 2691 0901 4C       		.byte	0x4c
 2692 0902 25000000 		.4byte	0x25
 2693 0906 02       		.uleb128 0x2
 2694 0907 91       		.byte	0x91
 2695 0908 60       		.sleb128 -32
 2696 0909 24       		.uleb128 0x24
 2697 090a 1A000000 		.4byte	.LBB5
 2698 090e 92000000 		.4byte	.LBE5-.LBB5
 2699 0912 53090000 		.4byte	0x953
 2700 0916 1B       		.uleb128 0x1b
 2701 0917 6900     		.ascii	"i\000"
 2702 0919 02       		.byte	0x2
 2703 091a 3B       		.byte	0x3b
 2704 091b 25000000 		.4byte	0x25
 2705 091f 02       		.uleb128 0x2
 2706 0920 91       		.byte	0x91
 2707 0921 6C       		.sleb128 -20
 2708 0922 21       		.uleb128 0x21
 2709 0923 4A000000 		.4byte	.LBB6
 2710 0927 4E000000 		.4byte	.LBE6-.LBB6
 2711 092b 1F       		.uleb128 0x1f
 2712 092c A5050000 		.4byte	.LASF151
 2713 0930 02       		.byte	0x2
 2714 0931 41       		.byte	0x41
 2715 0932 25000000 		.4byte	0x25
 2716 0936 02       		.uleb128 0x2
 2717 0937 91       		.byte	0x91
 2718 0938 68       		.sleb128 -24
 2719 0939 21       		.uleb128 0x21
 2720 093a 4E000000 		.4byte	.LBB7
 2721 093e 44000000 		.4byte	.LBE7-.LBB7
 2722 0942 1F       		.uleb128 0x1f
 2723 0943 C0080000 		.4byte	.LASF152
 2724 0947 02       		.byte	0x2
 2725 0948 42       		.byte	0x42
 2726 0949 25000000 		.4byte	0x25
 2727 094d 02       		.uleb128 0x2
 2728 094e 91       		.byte	0x91
 2729 094f 64       		.sleb128 -28
 2730 0950 00       		.byte	0
 2731 0951 00       		.byte	0
 2732 0952 00       		.byte	0
 2733 0953 21       		.uleb128 0x21
 2734 0954 B6000000 		.4byte	.LBB8
 2735 0958 36010000 		.4byte	.LBE8-.LBB8
 2736 095c 1F       		.uleb128 0x1f
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 57


 2737 095d F2080000 		.4byte	.LASF153
 2738 0961 02       		.byte	0x2
 2739 0962 4D       		.byte	0x4d
 2740 0963 25000000 		.4byte	0x25
 2741 0967 02       		.uleb128 0x2
 2742 0968 91       		.byte	0x91
 2743 0969 5C       		.sleb128 -36
 2744 096a 00       		.byte	0
 2745 096b 00       		.byte	0
 2746 096c 14       		.uleb128 0x14
 2747 096d 89010000 		.4byte	0x189
 2748 0971 7C090000 		.4byte	0x97c
 2749 0975 15       		.uleb128 0x15
 2750 0976 5C020000 		.4byte	0x25c
 2751 097a 13       		.byte	0x13
 2752 097b 00       		.byte	0
 2753 097c 0C       		.uleb128 0xc
 2754 097d 04       		.byte	0x4
 2755 097e 6C090000 		.4byte	0x96c
 2756 0982 0C       		.uleb128 0xc
 2757 0983 04       		.byte	0x4
 2758 0984 09040000 		.4byte	0x409
 2759 0988 22       		.uleb128 0x22
 2760 0989 CB040000 		.4byte	.LASF154
 2761 098d 02       		.byte	0x2
 2762 098e 72       		.byte	0x72
 2763 098f 46020000 		.4byte	0x246
 2764 0993 00000000 		.4byte	.LFB119
 2765 0997 E8000000 		.4byte	.LFE119-.LFB119
 2766 099b 01       		.uleb128 0x1
 2767 099c 9C       		.byte	0x9c
 2768 099d 1A0A0000 		.4byte	0xa1a
 2769 09a1 1A       		.uleb128 0x1a
 2770 09a2 08020000 		.4byte	.LASF155
 2771 09a6 02       		.byte	0x2
 2772 09a7 72       		.byte	0x72
 2773 09a8 D5070000 		.4byte	0x7d5
 2774 09ac 02       		.uleb128 0x2
 2775 09ad 91       		.byte	0x91
 2776 09ae 64       		.sleb128 -28
 2777 09af 1A       		.uleb128 0x1a
 2778 09b0 13020000 		.4byte	.LASF156
 2779 09b4 02       		.byte	0x2
 2780 09b5 72       		.byte	0x72
 2781 09b6 1A0A0000 		.4byte	0xa1a
 2782 09ba 02       		.uleb128 0x2
 2783 09bb 91       		.byte	0x91
 2784 09bc 60       		.sleb128 -32
 2785 09bd 1A       		.uleb128 0x1a
 2786 09be 88000000 		.4byte	.LASF15
 2787 09c2 02       		.byte	0x2
 2788 09c3 72       		.byte	0x72
 2789 09c4 ED040000 		.4byte	0x4ed
 2790 09c8 02       		.uleb128 0x2
 2791 09c9 91       		.byte	0x91
 2792 09ca 5F       		.sleb128 -33
 2793 09cb 1A       		.uleb128 0x1a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 58


 2794 09cc 09040000 		.4byte	.LASF17
 2795 09d0 02       		.byte	0x2
 2796 09d1 72       		.byte	0x72
 2797 09d2 49010000 		.4byte	0x149
 2798 09d6 02       		.uleb128 0x2
 2799 09d7 91       		.byte	0x91
 2800 09d8 5C       		.sleb128 -36
 2801 09d9 1F       		.uleb128 0x1f
 2802 09da C5020000 		.4byte	.LASF157
 2803 09de 02       		.byte	0x2
 2804 09df 76       		.byte	0x76
 2805 09e0 9B010000 		.4byte	0x19b
 2806 09e4 02       		.uleb128 0x2
 2807 09e5 91       		.byte	0x91
 2808 09e6 70       		.sleb128 -16
 2809 09e7 1B       		.uleb128 0x1b
 2810 09e8 73726300 		.ascii	"src\000"
 2811 09ec 02       		.byte	0x2
 2812 09ed 7B       		.byte	0x7b
 2813 09ee 74020000 		.4byte	0x274
 2814 09f2 02       		.uleb128 0x2
 2815 09f3 91       		.byte	0x91
 2816 09f4 6C       		.sleb128 -20
 2817 09f5 1B       		.uleb128 0x1b
 2818 09f6 64737400 		.ascii	"dst\000"
 2819 09fa 02       		.byte	0x2
 2820 09fb 7C       		.byte	0x7c
 2821 09fc 74020000 		.4byte	0x274
 2822 0a00 02       		.uleb128 0x2
 2823 0a01 91       		.byte	0x91
 2824 0a02 68       		.sleb128 -24
 2825 0a03 21       		.uleb128 0x21
 2826 0a04 4C000000 		.4byte	.LBB9
 2827 0a08 24000000 		.4byte	.LBE9-.LBB9
 2828 0a0c 1B       		.uleb128 0x1b
 2829 0a0d 6900     		.ascii	"i\000"
 2830 0a0f 02       		.byte	0x2
 2831 0a10 7E       		.byte	0x7e
 2832 0a11 25000000 		.4byte	0x25
 2833 0a15 02       		.uleb128 0x2
 2834 0a16 91       		.byte	0x91
 2835 0a17 74       		.sleb128 -12
 2836 0a18 00       		.byte	0
 2837 0a19 00       		.byte	0
 2838 0a1a 0D       		.uleb128 0xd
 2839 0a1b 39030000 		.4byte	0x339
 2840 0a1f 22       		.uleb128 0x22
 2841 0a20 A3040000 		.4byte	.LASF158
 2842 0a24 02       		.byte	0x2
 2843 0a25 8E       		.byte	0x8e
 2844 0a26 46020000 		.4byte	0x246
 2845 0a2a 00000000 		.4byte	.LFB120
 2846 0a2e C4000000 		.4byte	.LFE120-.LFB120
 2847 0a32 01       		.uleb128 0x1
 2848 0a33 9C       		.byte	0x9c
 2849 0a34 A30A0000 		.4byte	0xaa3
 2850 0a38 1A       		.uleb128 0x1a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 59


 2851 0a39 08020000 		.4byte	.LASF155
 2852 0a3d 02       		.byte	0x2
 2853 0a3e 8E       		.byte	0x8e
 2854 0a3f D5070000 		.4byte	0x7d5
 2855 0a43 02       		.uleb128 0x2
 2856 0a44 91       		.byte	0x91
 2857 0a45 64       		.sleb128 -28
 2858 0a46 1A       		.uleb128 0x1a
 2859 0a47 D2060000 		.4byte	.LASF159
 2860 0a4b 02       		.byte	0x2
 2861 0a4c 8E       		.byte	0x8e
 2862 0a4d 9B010000 		.4byte	0x19b
 2863 0a51 02       		.uleb128 0x2
 2864 0a52 91       		.byte	0x91
 2865 0a53 60       		.sleb128 -32
 2866 0a54 1A       		.uleb128 0x1a
 2867 0a55 88000000 		.4byte	.LASF15
 2868 0a59 02       		.byte	0x2
 2869 0a5a 8E       		.byte	0x8e
 2870 0a5b ED040000 		.4byte	0x4ed
 2871 0a5f 02       		.uleb128 0x2
 2872 0a60 91       		.byte	0x91
 2873 0a61 5F       		.sleb128 -33
 2874 0a62 1A       		.uleb128 0x1a
 2875 0a63 09040000 		.4byte	.LASF17
 2876 0a67 02       		.byte	0x2
 2877 0a68 8E       		.byte	0x8e
 2878 0a69 49010000 		.4byte	0x149
 2879 0a6d 02       		.uleb128 0x2
 2880 0a6e 91       		.byte	0x91
 2881 0a6f 5C       		.sleb128 -36
 2882 0a70 1B       		.uleb128 0x1b
 2883 0a71 64737400 		.ascii	"dst\000"
 2884 0a75 02       		.byte	0x2
 2885 0a76 94       		.byte	0x94
 2886 0a77 74020000 		.4byte	0x274
 2887 0a7b 02       		.uleb128 0x2
 2888 0a7c 91       		.byte	0x91
 2889 0a7d 70       		.sleb128 -16
 2890 0a7e 1B       		.uleb128 0x1b
 2891 0a7f 73726300 		.ascii	"src\000"
 2892 0a83 02       		.byte	0x2
 2893 0a84 95       		.byte	0x95
 2894 0a85 74020000 		.4byte	0x274
 2895 0a89 02       		.uleb128 0x2
 2896 0a8a 91       		.byte	0x91
 2897 0a8b 6C       		.sleb128 -20
 2898 0a8c 21       		.uleb128 0x21
 2899 0a8d 3A000000 		.4byte	.LBB10
 2900 0a91 24000000 		.4byte	.LBE10-.LBB10
 2901 0a95 1B       		.uleb128 0x1b
 2902 0a96 6900     		.ascii	"i\000"
 2903 0a98 02       		.byte	0x2
 2904 0a99 97       		.byte	0x97
 2905 0a9a 25000000 		.4byte	0x25
 2906 0a9e 02       		.uleb128 0x2
 2907 0a9f 91       		.byte	0x91
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 60


 2908 0aa0 74       		.sleb128 -12
 2909 0aa1 00       		.byte	0
 2910 0aa2 00       		.byte	0
 2911 0aa3 25       		.uleb128 0x25
 2912 0aa4 21040000 		.4byte	.LASF160
 2913 0aa8 0D       		.byte	0xd
 2914 0aa9 40       		.byte	0x40
 2915 0aaa 40030000 		.4byte	0x340
 2916 0aae 25       		.uleb128 0x25
 2917 0aaf D7020000 		.4byte	.LASF161
 2918 0ab3 0D       		.byte	0xd
 2919 0ab4 47       		.byte	0x47
 2920 0ab5 4B030000 		.4byte	0x34b
 2921 0ab9 25       		.uleb128 0x25
 2922 0aba 92050000 		.4byte	.LASF162
 2923 0abe 0D       		.byte	0xd
 2924 0abf 4A       		.byte	0x4a
 2925 0ac0 40030000 		.4byte	0x340
 2926 0ac4 25       		.uleb128 0x25
 2927 0ac5 F0020000 		.4byte	.LASF163
 2928 0ac9 0E       		.byte	0xe
 2929 0aca 48       		.byte	0x48
 2930 0acb 56030000 		.4byte	0x356
 2931 0acf 25       		.uleb128 0x25
 2932 0ad0 4A080000 		.4byte	.LASF164
 2933 0ad4 0F       		.byte	0xf
 2934 0ad5 44       		.byte	0x44
 2935 0ad6 40030000 		.4byte	0x340
 2936 0ada 26       		.uleb128 0x26
 2937 0adb AF060000 		.4byte	.LASF165
 2938 0adf 10       		.byte	0x10
 2939 0ae0 1207     		.2byte	0x712
 2940 0ae2 E60A0000 		.4byte	0xae6
 2941 0ae6 27       		.uleb128 0x27
 2942 0ae7 69020000 		.4byte	0x269
 2943 0aeb 28       		.uleb128 0x28
 2944 0aec 3A030000 		.4byte	.LASF166
 2945 0af0 0B       		.byte	0xb
 2946 0af1 27       		.byte	0x27
 2947 0af2 75040000 		.4byte	0x475
 2948 0af6 05       		.uleb128 0x5
 2949 0af7 03       		.byte	0x3
 2950 0af8 00000000 		.4byte	drawer_commands
 2951 0afc 00       		.byte	0
 2952              		.section	.debug_abbrev,"",%progbits
 2953              	.Ldebug_abbrev0:
 2954 0000 01       		.uleb128 0x1
 2955 0001 11       		.uleb128 0x11
 2956 0002 01       		.byte	0x1
 2957 0003 25       		.uleb128 0x25
 2958 0004 0E       		.uleb128 0xe
 2959 0005 13       		.uleb128 0x13
 2960 0006 0B       		.uleb128 0xb
 2961 0007 03       		.uleb128 0x3
 2962 0008 0E       		.uleb128 0xe
 2963 0009 1B       		.uleb128 0x1b
 2964 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 61


 2965 000b 55       		.uleb128 0x55
 2966 000c 17       		.uleb128 0x17
 2967 000d 11       		.uleb128 0x11
 2968 000e 01       		.uleb128 0x1
 2969 000f 10       		.uleb128 0x10
 2970 0010 17       		.uleb128 0x17
 2971 0011 00       		.byte	0
 2972 0012 00       		.byte	0
 2973 0013 02       		.uleb128 0x2
 2974 0014 24       		.uleb128 0x24
 2975 0015 00       		.byte	0
 2976 0016 0B       		.uleb128 0xb
 2977 0017 0B       		.uleb128 0xb
 2978 0018 3E       		.uleb128 0x3e
 2979 0019 0B       		.uleb128 0xb
 2980 001a 03       		.uleb128 0x3
 2981 001b 08       		.uleb128 0x8
 2982 001c 00       		.byte	0
 2983 001d 00       		.byte	0
 2984 001e 03       		.uleb128 0x3
 2985 001f 16       		.uleb128 0x16
 2986 0020 00       		.byte	0
 2987 0021 03       		.uleb128 0x3
 2988 0022 0E       		.uleb128 0xe
 2989 0023 3A       		.uleb128 0x3a
 2990 0024 0B       		.uleb128 0xb
 2991 0025 3B       		.uleb128 0x3b
 2992 0026 0B       		.uleb128 0xb
 2993 0027 49       		.uleb128 0x49
 2994 0028 13       		.uleb128 0x13
 2995 0029 00       		.byte	0
 2996 002a 00       		.byte	0
 2997 002b 04       		.uleb128 0x4
 2998 002c 24       		.uleb128 0x24
 2999 002d 00       		.byte	0
 3000 002e 0B       		.uleb128 0xb
 3001 002f 0B       		.uleb128 0xb
 3002 0030 3E       		.uleb128 0x3e
 3003 0031 0B       		.uleb128 0xb
 3004 0032 03       		.uleb128 0x3
 3005 0033 0E       		.uleb128 0xe
 3006 0034 00       		.byte	0
 3007 0035 00       		.byte	0
 3008 0036 05       		.uleb128 0x5
 3009 0037 04       		.uleb128 0x4
 3010 0038 01       		.byte	0x1
 3011 0039 0B       		.uleb128 0xb
 3012 003a 0B       		.uleb128 0xb
 3013 003b 49       		.uleb128 0x49
 3014 003c 13       		.uleb128 0x13
 3015 003d 3A       		.uleb128 0x3a
 3016 003e 0B       		.uleb128 0xb
 3017 003f 3B       		.uleb128 0x3b
 3018 0040 0B       		.uleb128 0xb
 3019 0041 01       		.uleb128 0x1
 3020 0042 13       		.uleb128 0x13
 3021 0043 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 62


 3022 0044 00       		.byte	0
 3023 0045 06       		.uleb128 0x6
 3024 0046 28       		.uleb128 0x28
 3025 0047 00       		.byte	0
 3026 0048 03       		.uleb128 0x3
 3027 0049 0E       		.uleb128 0xe
 3028 004a 1C       		.uleb128 0x1c
 3029 004b 0B       		.uleb128 0xb
 3030 004c 00       		.byte	0
 3031 004d 00       		.byte	0
 3032 004e 07       		.uleb128 0x7
 3033 004f 04       		.uleb128 0x4
 3034 0050 01       		.byte	0x1
 3035 0051 03       		.uleb128 0x3
 3036 0052 0E       		.uleb128 0xe
 3037 0053 0B       		.uleb128 0xb
 3038 0054 0B       		.uleb128 0xb
 3039 0055 49       		.uleb128 0x49
 3040 0056 13       		.uleb128 0x13
 3041 0057 3A       		.uleb128 0x3a
 3042 0058 0B       		.uleb128 0xb
 3043 0059 3B       		.uleb128 0x3b
 3044 005a 0B       		.uleb128 0xb
 3045 005b 01       		.uleb128 0x1
 3046 005c 13       		.uleb128 0x13
 3047 005d 00       		.byte	0
 3048 005e 00       		.byte	0
 3049 005f 08       		.uleb128 0x8
 3050 0060 28       		.uleb128 0x28
 3051 0061 00       		.byte	0
 3052 0062 03       		.uleb128 0x3
 3053 0063 0E       		.uleb128 0xe
 3054 0064 1C       		.uleb128 0x1c
 3055 0065 0D       		.uleb128 0xd
 3056 0066 00       		.byte	0
 3057 0067 00       		.byte	0
 3058 0068 09       		.uleb128 0x9
 3059 0069 13       		.uleb128 0x13
 3060 006a 01       		.byte	0x1
 3061 006b 03       		.uleb128 0x3
 3062 006c 0E       		.uleb128 0xe
 3063 006d 0B       		.uleb128 0xb
 3064 006e 0B       		.uleb128 0xb
 3065 006f 3A       		.uleb128 0x3a
 3066 0070 0B       		.uleb128 0xb
 3067 0071 3B       		.uleb128 0x3b
 3068 0072 0B       		.uleb128 0xb
 3069 0073 01       		.uleb128 0x1
 3070 0074 13       		.uleb128 0x13
 3071 0075 00       		.byte	0
 3072 0076 00       		.byte	0
 3073 0077 0A       		.uleb128 0xa
 3074 0078 0D       		.uleb128 0xd
 3075 0079 00       		.byte	0
 3076 007a 03       		.uleb128 0x3
 3077 007b 0E       		.uleb128 0xe
 3078 007c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 63


 3079 007d 0B       		.uleb128 0xb
 3080 007e 3B       		.uleb128 0x3b
 3081 007f 0B       		.uleb128 0xb
 3082 0080 49       		.uleb128 0x49
 3083 0081 13       		.uleb128 0x13
 3084 0082 38       		.uleb128 0x38
 3085 0083 0B       		.uleb128 0xb
 3086 0084 00       		.byte	0
 3087 0085 00       		.byte	0
 3088 0086 0B       		.uleb128 0xb
 3089 0087 0D       		.uleb128 0xd
 3090 0088 00       		.byte	0
 3091 0089 03       		.uleb128 0x3
 3092 008a 08       		.uleb128 0x8
 3093 008b 3A       		.uleb128 0x3a
 3094 008c 0B       		.uleb128 0xb
 3095 008d 3B       		.uleb128 0x3b
 3096 008e 0B       		.uleb128 0xb
 3097 008f 49       		.uleb128 0x49
 3098 0090 13       		.uleb128 0x13
 3099 0091 38       		.uleb128 0x38
 3100 0092 0B       		.uleb128 0xb
 3101 0093 00       		.byte	0
 3102 0094 00       		.byte	0
 3103 0095 0C       		.uleb128 0xc
 3104 0096 0F       		.uleb128 0xf
 3105 0097 00       		.byte	0
 3106 0098 0B       		.uleb128 0xb
 3107 0099 0B       		.uleb128 0xb
 3108 009a 49       		.uleb128 0x49
 3109 009b 13       		.uleb128 0x13
 3110 009c 00       		.byte	0
 3111 009d 00       		.byte	0
 3112 009e 0D       		.uleb128 0xd
 3113 009f 26       		.uleb128 0x26
 3114 00a0 00       		.byte	0
 3115 00a1 49       		.uleb128 0x49
 3116 00a2 13       		.uleb128 0x13
 3117 00a3 00       		.byte	0
 3118 00a4 00       		.byte	0
 3119 00a5 0E       		.uleb128 0xe
 3120 00a6 0F       		.uleb128 0xf
 3121 00a7 00       		.byte	0
 3122 00a8 0B       		.uleb128 0xb
 3123 00a9 0B       		.uleb128 0xb
 3124 00aa 00       		.byte	0
 3125 00ab 00       		.byte	0
 3126 00ac 0F       		.uleb128 0xf
 3127 00ad 28       		.uleb128 0x28
 3128 00ae 00       		.byte	0
 3129 00af 03       		.uleb128 0x3
 3130 00b0 0E       		.uleb128 0xe
 3131 00b1 1C       		.uleb128 0x1c
 3132 00b2 05       		.uleb128 0x5
 3133 00b3 00       		.byte	0
 3134 00b4 00       		.byte	0
 3135 00b5 10       		.uleb128 0x10
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 64


 3136 00b6 28       		.uleb128 0x28
 3137 00b7 00       		.byte	0
 3138 00b8 03       		.uleb128 0x3
 3139 00b9 08       		.uleb128 0x8
 3140 00ba 1C       		.uleb128 0x1c
 3141 00bb 0B       		.uleb128 0xb
 3142 00bc 00       		.byte	0
 3143 00bd 00       		.byte	0
 3144 00be 11       		.uleb128 0x11
 3145 00bf 26       		.uleb128 0x26
 3146 00c0 00       		.byte	0
 3147 00c1 00       		.byte	0
 3148 00c2 00       		.byte	0
 3149 00c3 12       		.uleb128 0x12
 3150 00c4 17       		.uleb128 0x17
 3151 00c5 01       		.byte	0x1
 3152 00c6 0B       		.uleb128 0xb
 3153 00c7 0B       		.uleb128 0xb
 3154 00c8 3A       		.uleb128 0x3a
 3155 00c9 0B       		.uleb128 0xb
 3156 00ca 3B       		.uleb128 0x3b
 3157 00cb 0B       		.uleb128 0xb
 3158 00cc 01       		.uleb128 0x1
 3159 00cd 13       		.uleb128 0x13
 3160 00ce 00       		.byte	0
 3161 00cf 00       		.byte	0
 3162 00d0 13       		.uleb128 0x13
 3163 00d1 0D       		.uleb128 0xd
 3164 00d2 00       		.byte	0
 3165 00d3 03       		.uleb128 0x3
 3166 00d4 0E       		.uleb128 0xe
 3167 00d5 3A       		.uleb128 0x3a
 3168 00d6 0B       		.uleb128 0xb
 3169 00d7 3B       		.uleb128 0x3b
 3170 00d8 0B       		.uleb128 0xb
 3171 00d9 49       		.uleb128 0x49
 3172 00da 13       		.uleb128 0x13
 3173 00db 00       		.byte	0
 3174 00dc 00       		.byte	0
 3175 00dd 14       		.uleb128 0x14
 3176 00de 01       		.uleb128 0x1
 3177 00df 01       		.byte	0x1
 3178 00e0 49       		.uleb128 0x49
 3179 00e1 13       		.uleb128 0x13
 3180 00e2 01       		.uleb128 0x1
 3181 00e3 13       		.uleb128 0x13
 3182 00e4 00       		.byte	0
 3183 00e5 00       		.byte	0
 3184 00e6 15       		.uleb128 0x15
 3185 00e7 21       		.uleb128 0x21
 3186 00e8 00       		.byte	0
 3187 00e9 49       		.uleb128 0x49
 3188 00ea 13       		.uleb128 0x13
 3189 00eb 2F       		.uleb128 0x2f
 3190 00ec 0B       		.uleb128 0xb
 3191 00ed 00       		.byte	0
 3192 00ee 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 65


 3193 00ef 16       		.uleb128 0x16
 3194 00f0 13       		.uleb128 0x13
 3195 00f1 01       		.byte	0x1
 3196 00f2 0B       		.uleb128 0xb
 3197 00f3 0B       		.uleb128 0xb
 3198 00f4 3A       		.uleb128 0x3a
 3199 00f5 0B       		.uleb128 0xb
 3200 00f6 3B       		.uleb128 0x3b
 3201 00f7 0B       		.uleb128 0xb
 3202 00f8 01       		.uleb128 0x1
 3203 00f9 13       		.uleb128 0x13
 3204 00fa 00       		.byte	0
 3205 00fb 00       		.byte	0
 3206 00fc 17       		.uleb128 0x17
 3207 00fd 13       		.uleb128 0x13
 3208 00fe 01       		.byte	0x1
 3209 00ff 0B       		.uleb128 0xb
 3210 0100 05       		.uleb128 0x5
 3211 0101 3A       		.uleb128 0x3a
 3212 0102 0B       		.uleb128 0xb
 3213 0103 3B       		.uleb128 0x3b
 3214 0104 0B       		.uleb128 0xb
 3215 0105 01       		.uleb128 0x1
 3216 0106 13       		.uleb128 0x13
 3217 0107 00       		.byte	0
 3218 0108 00       		.byte	0
 3219 0109 18       		.uleb128 0x18
 3220 010a 0D       		.uleb128 0xd
 3221 010b 00       		.byte	0
 3222 010c 03       		.uleb128 0x3
 3223 010d 0E       		.uleb128 0xe
 3224 010e 3A       		.uleb128 0x3a
 3225 010f 0B       		.uleb128 0xb
 3226 0110 3B       		.uleb128 0x3b
 3227 0111 0B       		.uleb128 0xb
 3228 0112 49       		.uleb128 0x49
 3229 0113 13       		.uleb128 0x13
 3230 0114 38       		.uleb128 0x38
 3231 0115 05       		.uleb128 0x5
 3232 0116 00       		.byte	0
 3233 0117 00       		.byte	0
 3234 0118 19       		.uleb128 0x19
 3235 0119 2E       		.uleb128 0x2e
 3236 011a 01       		.byte	0x1
 3237 011b 03       		.uleb128 0x3
 3238 011c 0E       		.uleb128 0xe
 3239 011d 3A       		.uleb128 0x3a
 3240 011e 0B       		.uleb128 0xb
 3241 011f 3B       		.uleb128 0x3b
 3242 0120 0B       		.uleb128 0xb
 3243 0121 27       		.uleb128 0x27
 3244 0122 19       		.uleb128 0x19
 3245 0123 49       		.uleb128 0x49
 3246 0124 13       		.uleb128 0x13
 3247 0125 11       		.uleb128 0x11
 3248 0126 01       		.uleb128 0x1
 3249 0127 12       		.uleb128 0x12
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 66


 3250 0128 06       		.uleb128 0x6
 3251 0129 40       		.uleb128 0x40
 3252 012a 18       		.uleb128 0x18
 3253 012b 9742     		.uleb128 0x2117
 3254 012d 19       		.uleb128 0x19
 3255 012e 01       		.uleb128 0x1
 3256 012f 13       		.uleb128 0x13
 3257 0130 00       		.byte	0
 3258 0131 00       		.byte	0
 3259 0132 1A       		.uleb128 0x1a
 3260 0133 05       		.uleb128 0x5
 3261 0134 00       		.byte	0
 3262 0135 03       		.uleb128 0x3
 3263 0136 0E       		.uleb128 0xe
 3264 0137 3A       		.uleb128 0x3a
 3265 0138 0B       		.uleb128 0xb
 3266 0139 3B       		.uleb128 0x3b
 3267 013a 0B       		.uleb128 0xb
 3268 013b 49       		.uleb128 0x49
 3269 013c 13       		.uleb128 0x13
 3270 013d 02       		.uleb128 0x2
 3271 013e 18       		.uleb128 0x18
 3272 013f 00       		.byte	0
 3273 0140 00       		.byte	0
 3274 0141 1B       		.uleb128 0x1b
 3275 0142 34       		.uleb128 0x34
 3276 0143 00       		.byte	0
 3277 0144 03       		.uleb128 0x3
 3278 0145 08       		.uleb128 0x8
 3279 0146 3A       		.uleb128 0x3a
 3280 0147 0B       		.uleb128 0xb
 3281 0148 3B       		.uleb128 0x3b
 3282 0149 0B       		.uleb128 0xb
 3283 014a 49       		.uleb128 0x49
 3284 014b 13       		.uleb128 0x13
 3285 014c 02       		.uleb128 0x2
 3286 014d 18       		.uleb128 0x18
 3287 014e 00       		.byte	0
 3288 014f 00       		.byte	0
 3289 0150 1C       		.uleb128 0x1c
 3290 0151 2E       		.uleb128 0x2e
 3291 0152 01       		.byte	0x1
 3292 0153 03       		.uleb128 0x3
 3293 0154 0E       		.uleb128 0xe
 3294 0155 3A       		.uleb128 0x3a
 3295 0156 0B       		.uleb128 0xb
 3296 0157 3B       		.uleb128 0x3b
 3297 0158 0B       		.uleb128 0xb
 3298 0159 27       		.uleb128 0x27
 3299 015a 19       		.uleb128 0x19
 3300 015b 11       		.uleb128 0x11
 3301 015c 01       		.uleb128 0x1
 3302 015d 12       		.uleb128 0x12
 3303 015e 06       		.uleb128 0x6
 3304 015f 40       		.uleb128 0x40
 3305 0160 18       		.uleb128 0x18
 3306 0161 9742     		.uleb128 0x2117
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 67


 3307 0163 19       		.uleb128 0x19
 3308 0164 01       		.uleb128 0x1
 3309 0165 13       		.uleb128 0x13
 3310 0166 00       		.byte	0
 3311 0167 00       		.byte	0
 3312 0168 1D       		.uleb128 0x1d
 3313 0169 05       		.uleb128 0x5
 3314 016a 00       		.byte	0
 3315 016b 03       		.uleb128 0x3
 3316 016c 08       		.uleb128 0x8
 3317 016d 3A       		.uleb128 0x3a
 3318 016e 0B       		.uleb128 0xb
 3319 016f 3B       		.uleb128 0x3b
 3320 0170 0B       		.uleb128 0xb
 3321 0171 49       		.uleb128 0x49
 3322 0172 13       		.uleb128 0x13
 3323 0173 02       		.uleb128 0x2
 3324 0174 18       		.uleb128 0x18
 3325 0175 00       		.byte	0
 3326 0176 00       		.byte	0
 3327 0177 1E       		.uleb128 0x1e
 3328 0178 2E       		.uleb128 0x2e
 3329 0179 01       		.byte	0x1
 3330 017a 03       		.uleb128 0x3
 3331 017b 0E       		.uleb128 0xe
 3332 017c 3A       		.uleb128 0x3a
 3333 017d 0B       		.uleb128 0xb
 3334 017e 3B       		.uleb128 0x3b
 3335 017f 0B       		.uleb128 0xb
 3336 0180 27       		.uleb128 0x27
 3337 0181 19       		.uleb128 0x19
 3338 0182 49       		.uleb128 0x49
 3339 0183 13       		.uleb128 0x13
 3340 0184 11       		.uleb128 0x11
 3341 0185 01       		.uleb128 0x1
 3342 0186 12       		.uleb128 0x12
 3343 0187 06       		.uleb128 0x6
 3344 0188 40       		.uleb128 0x40
 3345 0189 18       		.uleb128 0x18
 3346 018a 9642     		.uleb128 0x2116
 3347 018c 19       		.uleb128 0x19
 3348 018d 01       		.uleb128 0x1
 3349 018e 13       		.uleb128 0x13
 3350 018f 00       		.byte	0
 3351 0190 00       		.byte	0
 3352 0191 1F       		.uleb128 0x1f
 3353 0192 34       		.uleb128 0x34
 3354 0193 00       		.byte	0
 3355 0194 03       		.uleb128 0x3
 3356 0195 0E       		.uleb128 0xe
 3357 0196 3A       		.uleb128 0x3a
 3358 0197 0B       		.uleb128 0xb
 3359 0198 3B       		.uleb128 0x3b
 3360 0199 0B       		.uleb128 0xb
 3361 019a 49       		.uleb128 0x49
 3362 019b 13       		.uleb128 0x13
 3363 019c 02       		.uleb128 0x2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 68


 3364 019d 18       		.uleb128 0x18
 3365 019e 00       		.byte	0
 3366 019f 00       		.byte	0
 3367 01a0 20       		.uleb128 0x20
 3368 01a1 0A       		.uleb128 0xa
 3369 01a2 00       		.byte	0
 3370 01a3 03       		.uleb128 0x3
 3371 01a4 0E       		.uleb128 0xe
 3372 01a5 3A       		.uleb128 0x3a
 3373 01a6 0B       		.uleb128 0xb
 3374 01a7 3B       		.uleb128 0x3b
 3375 01a8 0B       		.uleb128 0xb
 3376 01a9 11       		.uleb128 0x11
 3377 01aa 01       		.uleb128 0x1
 3378 01ab 00       		.byte	0
 3379 01ac 00       		.byte	0
 3380 01ad 21       		.uleb128 0x21
 3381 01ae 0B       		.uleb128 0xb
 3382 01af 01       		.byte	0x1
 3383 01b0 11       		.uleb128 0x11
 3384 01b1 01       		.uleb128 0x1
 3385 01b2 12       		.uleb128 0x12
 3386 01b3 06       		.uleb128 0x6
 3387 01b4 00       		.byte	0
 3388 01b5 00       		.byte	0
 3389 01b6 22       		.uleb128 0x22
 3390 01b7 2E       		.uleb128 0x2e
 3391 01b8 01       		.byte	0x1
 3392 01b9 3F       		.uleb128 0x3f
 3393 01ba 19       		.uleb128 0x19
 3394 01bb 03       		.uleb128 0x3
 3395 01bc 0E       		.uleb128 0xe
 3396 01bd 3A       		.uleb128 0x3a
 3397 01be 0B       		.uleb128 0xb
 3398 01bf 3B       		.uleb128 0x3b
 3399 01c0 0B       		.uleb128 0xb
 3400 01c1 27       		.uleb128 0x27
 3401 01c2 19       		.uleb128 0x19
 3402 01c3 49       		.uleb128 0x49
 3403 01c4 13       		.uleb128 0x13
 3404 01c5 11       		.uleb128 0x11
 3405 01c6 01       		.uleb128 0x1
 3406 01c7 12       		.uleb128 0x12
 3407 01c8 06       		.uleb128 0x6
 3408 01c9 40       		.uleb128 0x40
 3409 01ca 18       		.uleb128 0x18
 3410 01cb 9642     		.uleb128 0x2116
 3411 01cd 19       		.uleb128 0x19
 3412 01ce 01       		.uleb128 0x1
 3413 01cf 13       		.uleb128 0x13
 3414 01d0 00       		.byte	0
 3415 01d1 00       		.byte	0
 3416 01d2 23       		.uleb128 0x23
 3417 01d3 2E       		.uleb128 0x2e
 3418 01d4 01       		.byte	0x1
 3419 01d5 3F       		.uleb128 0x3f
 3420 01d6 19       		.uleb128 0x19
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 69


 3421 01d7 03       		.uleb128 0x3
 3422 01d8 0E       		.uleb128 0xe
 3423 01d9 3A       		.uleb128 0x3a
 3424 01da 0B       		.uleb128 0xb
 3425 01db 3B       		.uleb128 0x3b
 3426 01dc 0B       		.uleb128 0xb
 3427 01dd 27       		.uleb128 0x27
 3428 01de 19       		.uleb128 0x19
 3429 01df 49       		.uleb128 0x49
 3430 01e0 13       		.uleb128 0x13
 3431 01e1 11       		.uleb128 0x11
 3432 01e2 01       		.uleb128 0x1
 3433 01e3 12       		.uleb128 0x12
 3434 01e4 06       		.uleb128 0x6
 3435 01e5 40       		.uleb128 0x40
 3436 01e6 18       		.uleb128 0x18
 3437 01e7 9742     		.uleb128 0x2117
 3438 01e9 19       		.uleb128 0x19
 3439 01ea 01       		.uleb128 0x1
 3440 01eb 13       		.uleb128 0x13
 3441 01ec 00       		.byte	0
 3442 01ed 00       		.byte	0
 3443 01ee 24       		.uleb128 0x24
 3444 01ef 0B       		.uleb128 0xb
 3445 01f0 01       		.byte	0x1
 3446 01f1 11       		.uleb128 0x11
 3447 01f2 01       		.uleb128 0x1
 3448 01f3 12       		.uleb128 0x12
 3449 01f4 06       		.uleb128 0x6
 3450 01f5 01       		.uleb128 0x1
 3451 01f6 13       		.uleb128 0x13
 3452 01f7 00       		.byte	0
 3453 01f8 00       		.byte	0
 3454 01f9 25       		.uleb128 0x25
 3455 01fa 34       		.uleb128 0x34
 3456 01fb 00       		.byte	0
 3457 01fc 03       		.uleb128 0x3
 3458 01fd 0E       		.uleb128 0xe
 3459 01fe 3A       		.uleb128 0x3a
 3460 01ff 0B       		.uleb128 0xb
 3461 0200 3B       		.uleb128 0x3b
 3462 0201 0B       		.uleb128 0xb
 3463 0202 49       		.uleb128 0x49
 3464 0203 13       		.uleb128 0x13
 3465 0204 3F       		.uleb128 0x3f
 3466 0205 19       		.uleb128 0x19
 3467 0206 3C       		.uleb128 0x3c
 3468 0207 19       		.uleb128 0x19
 3469 0208 00       		.byte	0
 3470 0209 00       		.byte	0
 3471 020a 26       		.uleb128 0x26
 3472 020b 34       		.uleb128 0x34
 3473 020c 00       		.byte	0
 3474 020d 03       		.uleb128 0x3
 3475 020e 0E       		.uleb128 0xe
 3476 020f 3A       		.uleb128 0x3a
 3477 0210 0B       		.uleb128 0xb
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 70


 3478 0211 3B       		.uleb128 0x3b
 3479 0212 05       		.uleb128 0x5
 3480 0213 49       		.uleb128 0x49
 3481 0214 13       		.uleb128 0x13
 3482 0215 3F       		.uleb128 0x3f
 3483 0216 19       		.uleb128 0x19
 3484 0217 3C       		.uleb128 0x3c
 3485 0218 19       		.uleb128 0x19
 3486 0219 00       		.byte	0
 3487 021a 00       		.byte	0
 3488 021b 27       		.uleb128 0x27
 3489 021c 35       		.uleb128 0x35
 3490 021d 00       		.byte	0
 3491 021e 49       		.uleb128 0x49
 3492 021f 13       		.uleb128 0x13
 3493 0220 00       		.byte	0
 3494 0221 00       		.byte	0
 3495 0222 28       		.uleb128 0x28
 3496 0223 34       		.uleb128 0x34
 3497 0224 00       		.byte	0
 3498 0225 03       		.uleb128 0x3
 3499 0226 0E       		.uleb128 0xe
 3500 0227 3A       		.uleb128 0x3a
 3501 0228 0B       		.uleb128 0xb
 3502 0229 3B       		.uleb128 0x3b
 3503 022a 0B       		.uleb128 0xb
 3504 022b 49       		.uleb128 0x49
 3505 022c 13       		.uleb128 0x13
 3506 022d 3F       		.uleb128 0x3f
 3507 022e 19       		.uleb128 0x19
 3508 022f 02       		.uleb128 0x2
 3509 0230 18       		.uleb128 0x18
 3510 0231 00       		.byte	0
 3511 0232 00       		.byte	0
 3512 0233 00       		.byte	0
 3513              		.section	.debug_aranges,"",%progbits
 3514 0000 64000000 		.4byte	0x64
 3515 0004 0200     		.2byte	0x2
 3516 0006 00000000 		.4byte	.Ldebug_info0
 3517 000a 04       		.byte	0x4
 3518 000b 00       		.byte	0
 3519 000c 0000     		.2byte	0
 3520 000e 0000     		.2byte	0
 3521 0010 00000000 		.4byte	.LFB0
 3522 0014 4E000000 		.4byte	.LFE0-.LFB0
 3523 0018 00000000 		.4byte	.LFB1
 3524 001c 32000000 		.4byte	.LFE1-.LFB1
 3525 0020 00000000 		.4byte	.LFB2
 3526 0024 F0000000 		.4byte	.LFE2-.LFB2
 3527 0028 00000000 		.4byte	.LFB3
 3528 002c E6020000 		.4byte	.LFE3-.LFB3
 3529 0030 00000000 		.4byte	.LFB115
 3530 0034 6C000000 		.4byte	.LFE115-.LFB115
 3531 0038 00000000 		.4byte	.LFB116
 3532 003c 32000000 		.4byte	.LFE116-.LFB116
 3533 0040 00000000 		.4byte	.LFB117
 3534 0044 34000000 		.4byte	.LFE117-.LFB117
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 71


 3535 0048 00000000 		.4byte	.LFB118
 3536 004c FC010000 		.4byte	.LFE118-.LFB118
 3537 0050 00000000 		.4byte	.LFB119
 3538 0054 E8000000 		.4byte	.LFE119-.LFB119
 3539 0058 00000000 		.4byte	.LFB120
 3540 005c C4000000 		.4byte	.LFE120-.LFB120
 3541 0060 00000000 		.4byte	0
 3542 0064 00000000 		.4byte	0
 3543              		.section	.debug_ranges,"",%progbits
 3544              	.Ldebug_ranges0:
 3545 0000 00000000 		.4byte	.LFB0
 3546 0004 4E000000 		.4byte	.LFE0
 3547 0008 00000000 		.4byte	.LFB1
 3548 000c 32000000 		.4byte	.LFE1
 3549 0010 00000000 		.4byte	.LFB2
 3550 0014 F0000000 		.4byte	.LFE2
 3551 0018 00000000 		.4byte	.LFB3
 3552 001c E6020000 		.4byte	.LFE3
 3553 0020 00000000 		.4byte	.LFB115
 3554 0024 6C000000 		.4byte	.LFE115
 3555 0028 00000000 		.4byte	.LFB116
 3556 002c 32000000 		.4byte	.LFE116
 3557 0030 00000000 		.4byte	.LFB117
 3558 0034 34000000 		.4byte	.LFE117
 3559 0038 00000000 		.4byte	.LFB118
 3560 003c FC010000 		.4byte	.LFE118
 3561 0040 00000000 		.4byte	.LFB119
 3562 0044 E8000000 		.4byte	.LFE119
 3563 0048 00000000 		.4byte	.LFB120
 3564 004c C4000000 		.4byte	.LFE120
 3565 0050 00000000 		.4byte	0
 3566 0054 00000000 		.4byte	0
 3567              		.section	.debug_line,"",%progbits
 3568              	.Ldebug_line0:
 3569 0000 24050000 		.section	.debug_str,"MS",%progbits,1
 3569      0200EB02 
 3569      00000201 
 3569      FB0E0D00 
 3569      01010101 
 3570              	.LASF45:
 3571 0000 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 3571      52524F52 
 3571      5F54494D 
 3571      455F4F55 
 3571      5400
 3572              	.LASF115:
 3573 0012 4D425F48 		.ascii	"MB_HMI\000"
 3573      4D4900
 3574              	.LASF140:
 3575 0019 6A736D6E 		.ascii	"jsmn_parse_string\000"
 3575      5F706172 
 3575      73655F73 
 3575      7472696E 
 3575      6700
 3576              	.LASF57:
 3577 002b 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 3577      52524F52 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 72


 3577      5F494E56 
 3577      414C4944 
 3577      5F535441 
 3578              	.LASF70:
 3579 0042 4D414745 		.ascii	"MAGENTA\000"
 3579      4E544100 
 3580              	.LASF9:
 3581 004a 73697A65 		.ascii	"size_t\000"
 3581      5F7400
 3582              	.LASF96:
 3583 0051 44524157 		.ascii	"DRAWER_CMD_DRAW\000"
 3583      45525F43 
 3583      4D445F44 
 3583      52415700 
 3584              	.LASF68:
 3585 0061 47524544 		.ascii	"GRED\000"
 3585      00
 3586              	.LASF64:
 3587 0066 57484954 		.ascii	"WHITE\000"
 3587      4500
 3588              	.LASF130:
 3589 006c 6D625F74 		.ascii	"mb_type\000"
 3589      79706500 
 3590              	.LASF60:
 3591 0074 52435F74 		.ascii	"RC_t\000"
 3591      00
 3592              	.LASF39:
 3593 0079 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 3593      52524F52 
 3593      5F52414E 
 3593      474500
 3594              	.LASF15:
 3595 0088 74797065 		.ascii	"type\000"
 3595      00
 3596              	.LASF167:
 3597 008d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3597      43313120 
 3597      352E342E 
 3597      31203230 
 3597      31363036 
 3598 00c0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3598      20726576 
 3598      6973696F 
 3598      6E203233 
 3598      37373135 
 3599 00f3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3599      66756E63 
 3599      74696F6E 
 3599      2D736563 
 3599      74696F6E 
 3600              	.LASF127:
 3601 011b 6D625F77 		.ascii	"mb_writeIndex\000"
 3601      72697465 
 3601      496E6465 
 3601      7800
 3602              	.LASF53:
 3603 0129 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 73


 3603      52524F52 
 3603      5F4E4F54 
 3603      5F4D4154 
 3603      434800
 3604              	.LASF31:
 3605 013c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3605      206C6F6E 
 3605      6720756E 
 3605      7369676E 
 3605      65642069 
 3606              	.LASF109:
 3607 0153 64775F74 		.ascii	"dw_type\000"
 3607      79706500 
 3608              	.LASF55:
 3609 015b 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 3609      52524F52 
 3609      5F424144 
 3609      5F444154 
 3609      4100
 3610              	.LASF120:
 3611 016d 42554646 		.ascii	"BUFFERTYPE_UINT8\000"
 3611      45525459 
 3611      50455F55 
 3611      494E5438 
 3611      00
 3612              	.LASF128:
 3613 017e 6D625F66 		.ascii	"mb_fillLevel\000"
 3613      696C6C4C 
 3613      6576656C 
 3613      00
 3614              	.LASF4:
 3615 018b 4A534D4E 		.ascii	"JSMN_OBJECT\000"
 3615      5F4F424A 
 3615      45435400 
 3616              	.LASF84:
 3617 0197 5446545F 		.ascii	"TFT_colors_t\000"
 3617      636F6C6F 
 3617      72735F74 
 3617      00
 3618              	.LASF11:
 3619 01a4 4A534D4E 		.ascii	"JSMN_ERROR_NOMEM\000"
 3619      5F455252 
 3619      4F525F4E 
 3619      4F4D454D 
 3619      00
 3620              	.LASF1:
 3621 01b5 6C6F6E67 		.ascii	"long long int\000"
 3621      206C6F6E 
 3621      6720696E 
 3621      7400
 3622              	.LASF14:
 3623 01c3 7369676E 		.ascii	"signed char\000"
 3623      65642063 
 3623      68617200 
 3624              	.LASF116:
 3625 01cf 4D425F4A 		.ascii	"MB_JSON\000"
 3625      534F4E00 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 74


 3626              	.LASF38:
 3627 01d7 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 3627      52524F52 
 3627      5F4D454D 
 3627      4F525900 
 3628              	.LASF97:
 3629 01e7 44726177 		.ascii	"Drawer_commandType_t\000"
 3629      65725F63 
 3629      6F6D6D61 
 3629      6E645479 
 3629      70655F74 
 3630              	.LASF20:
 3631 01fc 6A736D6E 		.ascii	"jsmn_parser\000"
 3631      5F706172 
 3631      73657200 
 3632              	.LASF155:
 3633 0208 6D657373 		.ascii	"messagebox\000"
 3633      61676562 
 3633      6F7800
 3634              	.LASF156:
 3635 0213 62756666 		.ascii	"buffer_data\000"
 3635      65725F64 
 3635      61746100 
 3636              	.LASF43:
 3637 021f 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 3637      52524F52 
 3637      5F425546 
 3637      4645525F 
 3637      454D5450 
 3638              	.LASF27:
 3639 0235 6C6F6E67 		.ascii	"long int\000"
 3639      20696E74 
 3639      00
 3640              	.LASF103:
 3641 023e 44726177 		.ascii	"Drawer_t\000"
 3641      65725F74 
 3641      00
 3642              	.LASF74:
 3643 0247 42524F57 		.ascii	"BROWN\000"
 3643      4E00
 3644              	.LASF73:
 3645 024d 59454C4C 		.ascii	"YELLOW\000"
 3645      4F5700
 3646              	.LASF169:
 3647 0254 433A5C55 		.ascii	"C:\\Users\\schmi\\OneDrive\\Dokumente\\PSoC Creator"
 3647      73657273 
 3647      5C736368 
 3647      6D695C4F 
 3647      6E654472 
 3648 0282 5C4A736F 		.ascii	"\\JsonParserLAB3\\holidayProject\\setUpEnv.cydsn\000"
 3648      6E506172 
 3648      7365724C 
 3648      4142335C 
 3648      686F6C69 
 3649              	.LASF46:
 3650 02b0 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 3650      52524F52 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 75


 3650      5F4F5045 
 3650      4E00
 3651              	.LASF30:
 3652 02be 646F7562 		.ascii	"double\000"
 3652      6C6500
 3653              	.LASF157:
 3654 02c5 62756666 		.ascii	"buffer\000"
 3654      657200
 3655              	.LASF10:
 3656 02cc 6A736D6E 		.ascii	"jsmntype_t\000"
 3656      74797065 
 3656      5F7400
 3657              	.LASF161:
 3658 02d7 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 3658      6F5F4952 
 3658      515F7375 
 3658      7370656E 
 3658      645F7374 
 3659              	.LASF163:
 3660 02f0 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 3660      74645F65 
 3660      6E646379 
 3660      636C655F 
 3660      6E657874 
 3661              	.LASF95:
 3662 0309 44524157 		.ascii	"DRAWER_CMD_COLOR\000"
 3662      45525F43 
 3662      4D445F43 
 3662      4F4C4F52 
 3662      00
 3663              	.LASF142:
 3664 031a 6D625F73 		.ascii	"mb_setHMIEventAndTaskType\000"
 3664      6574484D 
 3664      49457665 
 3664      6E74416E 
 3664      64546173 
 3665              	.LASF81:
 3666 0334 4C475241 		.ascii	"LGRAY\000"
 3666      5900
 3667              	.LASF166:
 3668 033a 64726177 		.ascii	"drawer_commands\000"
 3668      65725F63 
 3668      6F6D6D61 
 3668      6E647300 
 3669              	.LASF89:
 3670 034a 45455F54 		.ascii	"EE_TID\000"
 3670      494400
 3671              	.LASF121:
 3672 0351 74797065 		.ascii	"type_t\000"
 3672      5F7400
 3673              	.LASF58:
 3674 0358 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 3674      52524F52 
 3674      5F554E4B 
 3674      4E4F574E 
 3674      00
 3675              	.LASF0:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 76


 3676 0369 756E7369 		.ascii	"unsigned int\000"
 3676      676E6564 
 3676      20696E74 
 3676      00
 3677              	.LASF25:
 3678 0376 75696E74 		.ascii	"uint16_t\000"
 3678      31365F74 
 3678      00
 3679              	.LASF171:
 3680 037f 6A736D6E 		.ascii	"jsmn_fill_token\000"
 3680      5F66696C 
 3680      6C5F746F 
 3680      6B656E00 
 3681              	.LASF87:
 3682 038f 45455F55 		.ascii	"EE_UREG\000"
 3682      52454700 
 3683              	.LASF47:
 3684 0397 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 3684      52524F52 
 3684      5F434845 
 3684      434B5355 
 3684      4D00
 3685              	.LASF28:
 3686 03a9 6C6F6E67 		.ascii	"long unsigned int\000"
 3686      20756E73 
 3686      69676E65 
 3686      6420696E 
 3686      7400
 3687              	.LASF36:
 3688 03bb 52435F45 		.ascii	"RC_ERROR_NULL\000"
 3688      52524F52 
 3688      5F4E554C 
 3688      4C00
 3689              	.LASF34:
 3690 03c9 52435F53 		.ascii	"RC_SUCCESS\000"
 3690      55434345 
 3690      535300
 3691              	.LASF111:
 3692 03d4 4D425F48 		.ascii	"MB_HMI_DATA_READY\000"
 3692      4D495F44 
 3692      4154415F 
 3692      52454144 
 3692      5900
 3693              	.LASF168:
 3694 03e6 6D657373 		.ascii	"message.c\000"
 3694      6167652E 
 3694      6300
 3695              	.LASF129:
 3696 03f0 6D625F73 		.ascii	"mb_size\000"
 3696      697A6500 
 3697              	.LASF131:
 3698 03f8 6D625F74 		.ascii	"mb_taskType\000"
 3698      61736B54 
 3698      79706500 
 3699              	.LASF102:
 3700 0404 64617461 		.ascii	"data\000"
 3700      00
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 77


 3701              	.LASF17:
 3702 0409 73697A65 		.ascii	"size\000"
 3702      00
 3703              	.LASF26:
 3704 040e 73686F72 		.ascii	"short unsigned int\000"
 3704      7420756E 
 3704      7369676E 
 3704      65642069 
 3704      6E7400
 3705              	.LASF160:
 3706 0421 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 3706      6F5F4952 
 3706      515F6469 
 3706      7361626C 
 3706      655F636F 
 3707              	.LASF75:
 3708 0439 42525245 		.ascii	"BRRED\000"
 3708      4400
 3709              	.LASF42:
 3710 043f 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 3710      52524F52 
 3710      5F425546 
 3710      4645525F 
 3710      46554C4C 
 3711              	.LASF83:
 3712 0454 4C42424C 		.ascii	"LBBLUE\000"
 3712      554500
 3713              	.LASF106:
 3714 045b 64775F77 		.ascii	"dw_writeIndex\000"
 3714      72697465 
 3714      496E6465 
 3714      7800
 3715              	.LASF108:
 3716 0469 64775F73 		.ascii	"dw_size\000"
 3716      697A6500 
 3717              	.LASF146:
 3718 0471 74667443 		.ascii	"tftCommands\000"
 3718      6F6D6D61 
 3718      6E647300 
 3719              	.LASF82:
 3720 047d 4C475241 		.ascii	"LGRAYBLUE\000"
 3720      59424C55 
 3720      4500
 3721              	.LASF52:
 3722 0487 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 3722      52524F52 
 3722      5F575249 
 3722      54455F46 
 3722      41494C53 
 3723              	.LASF93:
 3724 049c 545F4E4F 		.ascii	"T_NONE\000"
 3724      4E4500
 3725              	.LASF158:
 3726 04a3 4D455353 		.ascii	"MESSAGE_BUFFER_READ\000"
 3726      4147455F 
 3726      42554646 
 3726      45525F52 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 78


 3726      45414400 
 3727              	.LASF18:
 3728 04b7 6A736D6E 		.ascii	"jsmntok_t\000"
 3728      746F6B5F 
 3728      7400
 3729              	.LASF61:
 3730 04c1 5F5F696E 		.ascii	"__int32_t\000"
 3730      7433325F 
 3730      7400
 3731              	.LASF154:
 3732 04cb 4D455353 		.ascii	"MESSAGE_BUFFER_WRITE\000"
 3732      4147455F 
 3732      42554646 
 3732      45525F57 
 3732      52495445 
 3733              	.LASF147:
 3734 04e0 6A736F6E 		.ascii	"jsonString\000"
 3734      53747269 
 3734      6E6700
 3735              	.LASF98:
 3736 04eb 636F6C6F 		.ascii	"color\000"
 3736      7200
 3737              	.LASF78:
 3738 04f1 4C494748 		.ascii	"LIGHTBLUE\000"
 3738      54424C55 
 3738      4500
 3739              	.LASF134:
 3740 04fb 70617273 		.ascii	"parser\000"
 3740      657200
 3741              	.LASF104:
 3742 0502 64775F62 		.ascii	"dw_buffer\000"
 3742      75666665 
 3742      7200
 3743              	.LASF143:
 3744 050c 6D625F48 		.ascii	"mb_HMIFired\000"
 3744      4D494669 
 3744      72656400 
 3745              	.LASF3:
 3746 0518 4A534D4E 		.ascii	"JSMN_UNDEFINED\000"
 3746      5F554E44 
 3746      4546494E 
 3746      454400
 3747              	.LASF49:
 3748 0527 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 3748      52524F52 
 3748      5F575249 
 3748      54455F4F 
 3748      4E4C5900 
 3749              	.LASF92:
 3750 053b 545F5354 		.ascii	"T_STHELSE\000"
 3750      48454C53 
 3750      4500
 3751              	.LASF105:
 3752 0545 64775F72 		.ascii	"dw_readIndex\000"
 3752      65616449 
 3752      6E646578 
 3752      00
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 79


 3753              	.LASF138:
 3754 0552 6A736D6E 		.ascii	"jsmn_alloc_token\000"
 3754      5F616C6C 
 3754      6F635F74 
 3754      6F6B656E 
 3754      00
 3755              	.LASF62:
 3756 0563 73697A65 		.ascii	"sizetype\000"
 3756      74797065 
 3756      00
 3757              	.LASF32:
 3758 056c 626F6F6C 		.ascii	"boolean_t\000"
 3758      65616E5F 
 3758      7400
 3759              	.LASF50:
 3760 0576 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 3760      52524F52 
 3760      5F494E56 
 3760      414C4944 
 3760      00
 3761              	.LASF99:
 3762 0587 636F6F72 		.ascii	"coordinate\000"
 3762      64696E61 
 3762      746500
 3763              	.LASF162:
 3764 0592 45455F41 		.ascii	"EE_ApplicationMode\000"
 3764      70706C69 
 3764      63617469 
 3764      6F6E4D6F 
 3764      646500
 3765              	.LASF151:
 3766 05a5 546F6B65 		.ascii	"TokenContent\000"
 3766      6E436F6E 
 3766      74656E74 
 3766      00
 3767              	.LASF135:
 3768 05b2 746F6B65 		.ascii	"tokens\000"
 3768      6E7300
 3769              	.LASF22:
 3770 05b9 746F6B73 		.ascii	"toksuper\000"
 3770      75706572 
 3770      00
 3771              	.LASF56:
 3772 05c2 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 3772      52524F52 
 3772      5F43414E 
 3772      43454C45 
 3772      4400
 3773              	.LASF76:
 3774 05d4 47524159 		.ascii	"GRAY\000"
 3774      00
 3775              	.LASF41:
 3776 05d9 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 3776      52524F52 
 3776      5F554E44 
 3776      45525255 
 3776      4E00
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 80


 3777              	.LASF51:
 3778 05eb 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 3778      52524F52 
 3778      5F524541 
 3778      445F4641 
 3778      494C5300 
 3779              	.LASF125:
 3780 05ff 6D625F62 		.ascii	"mb_buffer\000"
 3780      75666665 
 3780      7200
 3781              	.LASF77:
 3782 0609 4441524B 		.ascii	"DARKBLUE\000"
 3782      424C5545 
 3782      00
 3783              	.LASF35:
 3784 0612 52435F45 		.ascii	"RC_ERROR\000"
 3784      52524F52 
 3784      00
 3785              	.LASF67:
 3786 061b 42524544 		.ascii	"BRED\000"
 3786      00
 3787              	.LASF29:
 3788 0620 666C6F61 		.ascii	"float\000"
 3788      7400
 3789              	.LASF94:
 3790 0626 52696E67 		.ascii	"RingBuffer_type\000"
 3790      42756666 
 3790      65725F74 
 3790      79706500 
 3791              	.LASF123:
 3792 0636 6D5F7042 		.ascii	"m_pBuffer\000"
 3792      75666665 
 3792      7200
 3793              	.LASF137:
 3794 0640 746F6B65 		.ascii	"token\000"
 3794      6E00
 3795              	.LASF13:
 3796 0646 4A534D4E 		.ascii	"JSMN_ERROR_PART\000"
 3796      5F455252 
 3796      4F525F50 
 3796      41525400 
 3797              	.LASF44:
 3798 0656 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 3798      52524F52 
 3798      5F425553 
 3798      5900
 3799              	.LASF110:
 3800 0664 64775F52 		.ascii	"dw_Ringbuffer_t\000"
 3800      696E6762 
 3800      75666665 
 3800      725F7400 
 3801              	.LASF19:
 3802 0674 6A736D6E 		.ascii	"jsmntok\000"
 3802      746F6B00 
 3803              	.LASF63:
 3804 067c 696E7433 		.ascii	"int32_t\000"
 3804      325F7400 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 81


 3805              	.LASF8:
 3806 0684 756E7369 		.ascii	"unsigned char\000"
 3806      676E6564 
 3806      20636861 
 3806      7200
 3807              	.LASF126:
 3808 0692 6D625F72 		.ascii	"mb_readIndex\000"
 3808      65616449 
 3808      6E646578 
 3808      00
 3809              	.LASF21:
 3810 069f 746F6B6E 		.ascii	"toknext\000"
 3810      65787400 
 3811              	.LASF91:
 3812 06a7 545F5549 		.ascii	"T_UINT8\000"
 3812      4E543800 
 3813              	.LASF165:
 3814 06af 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3814      52784275 
 3814      66666572 
 3814      00
 3815              	.LASF149:
 3816 06bc 696E6465 		.ascii	"index_tokens\000"
 3816      785F746F 
 3816      6B656E73 
 3816      00
 3817              	.LASF100:
 3818 06c9 73436F6D 		.ascii	"sCommand\000"
 3818      6D616E64 
 3818      00
 3819              	.LASF159:
 3820 06d2 6F757470 		.ascii	"output_data\000"
 3820      75745F64 
 3820      61746100 
 3821              	.LASF24:
 3822 06de 73686F72 		.ascii	"short int\000"
 3822      7420696E 
 3822      7400
 3823              	.LASF141:
 3824 06e8 6D625F72 		.ascii	"mb_ringbufferInit\000"
 3824      696E6762 
 3824      75666665 
 3824      72496E69 
 3824      7400
 3825              	.LASF144:
 3826 06fa 6D625F74 		.ascii	"mb_transferTokenIntoDrawer\000"
 3826      72616E73 
 3826      66657254 
 3826      6F6B656E 
 3826      496E746F 
 3827              	.LASF72:
 3828 0715 4359414E 		.ascii	"CYAN\000"
 3828      00
 3829              	.LASF148:
 3830 071a 6C6F6361 		.ascii	"local_drawer\000"
 3830      6C5F6472 
 3830      61776572 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 82


 3830      00
 3831              	.LASF37:
 3832 0727 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 3832      52524F52 
 3832      5F5A4552 
 3832      4F00
 3833              	.LASF54:
 3834 0735 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 3834      52524F52 
 3834      5F424144 
 3834      5F504152 
 3834      414D00
 3835              	.LASF48:
 3836 0748 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 3836      52524F52 
 3836      5F524541 
 3836      445F4F4E 
 3836      4C5900
 3837              	.LASF2:
 3838 075b 6C6F6E67 		.ascii	"long double\000"
 3838      20646F75 
 3838      626C6500 
 3839              	.LASF170:
 3840 0767 6A736D6E 		.ascii	"jsmnerr\000"
 3840      65727200 
 3841              	.LASF33:
 3842 076f 63686172 		.ascii	"char\000"
 3842      00
 3843              	.LASF65:
 3844 0774 424C4143 		.ascii	"BLACK\000"
 3844      4B00
 3845              	.LASF136:
 3846 077a 6E756D5F 		.ascii	"num_tokens\000"
 3846      746F6B65 
 3846      6E7300
 3847              	.LASF112:
 3848 0785 4D425F55 		.ascii	"MB_UART_DATA_READY\000"
 3848      4152545F 
 3848      44415441 
 3848      5F524541 
 3848      445900
 3849              	.LASF101:
 3850 0798 636F6D6D 		.ascii	"command\000"
 3850      616E6400 
 3851              	.LASF113:
 3852 07a0 4D425F4E 		.ascii	"MB_NOEVENT\000"
 3852      4F455645 
 3852      4E5400
 3853              	.LASF71:
 3854 07ab 47524545 		.ascii	"GREEN\000"
 3854      4E00
 3855              	.LASF7:
 3856 07b1 4A534D4E 		.ascii	"JSMN_PRIMITIVE\000"
 3856      5F505249 
 3856      4D495449 
 3856      564500
 3857              	.LASF5:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 83


 3858 07c0 4A534D4E 		.ascii	"JSMN_ARRAY\000"
 3858      5F415252 
 3858      415900
 3859              	.LASF59:
 3860 07cb 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 3860      52524F52 
 3860      5F4E4F54 
 3860      5F494D50 
 3860      4C454D45 
 3861              	.LASF40:
 3862 07e4 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 3862      52524F52 
 3862      5F4F5645 
 3862      5252554E 
 3862      00
 3863              	.LASF80:
 3864 07f5 4C494748 		.ascii	"LIGHTGREEN\000"
 3864      54475245 
 3864      454E00
 3865              	.LASF133:
 3866 0800 6D657373 		.ascii	"messagebox_t\000"
 3866      61676562 
 3866      6F785F74 
 3866      00
 3867              	.LASF117:
 3868 080d 4D425F4E 		.ascii	"MB_NOTASK\000"
 3868      4F544153 
 3868      4B00
 3869              	.LASF124:
 3870 0817 6D657373 		.ascii	"message_t\000"
 3870      6167655F 
 3870      7400
 3871              	.LASF172:
 3872 0821 666F756E 		.ascii	"found\000"
 3872      6400
 3873              	.LASF6:
 3874 0827 4A534D4E 		.ascii	"JSMN_STRING\000"
 3874      5F535452 
 3874      494E4700 
 3875              	.LASF69:
 3876 0833 47424C55 		.ascii	"GBLUE\000"
 3876      4500
 3877              	.LASF12:
 3878 0839 4A534D4E 		.ascii	"JSMN_ERROR_INVAL\000"
 3878      5F455252 
 3878      4F525F49 
 3878      4E56414C 
 3878      00
 3879              	.LASF164:
 3880 084a 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 3880      52515F6E 
 3880      65737469 
 3880      6E675F6C 
 3880      6576656C 
 3881              	.LASF86:
 3882 085f 45455F55 		.ascii	"EE_UINT32\000"
 3882      494E5433 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 84


 3882      3200
 3883              	.LASF114:
 3884 0869 4D425F45 		.ascii	"MB_EventMaskType\000"
 3884      76656E74 
 3884      4D61736B 
 3884      54797065 
 3884      00
 3885              	.LASF85:
 3886 087a 45455F49 		.ascii	"EE_INT32\000"
 3886      4E543332 
 3886      00
 3887              	.LASF23:
 3888 0883 75696E74 		.ascii	"uint8_t\000"
 3888      385F7400 
 3889              	.LASF66:
 3890 088b 424C5545 		.ascii	"BLUE\000"
 3890      00
 3891              	.LASF90:
 3892 0890 545F4452 		.ascii	"T_DRAWER\000"
 3892      41574552 
 3892      00
 3893              	.LASF150:
 3894 0899 74667443 		.ascii	"tftCommandToken\000"
 3894      6F6D6D61 
 3894      6E64546F 
 3894      6B656E00 
 3895              	.LASF145:
 3896 08a9 6E627254 		.ascii	"nbrTokens\000"
 3896      6F6B656E 
 3896      7300
 3897              	.LASF107:
 3898 08b3 64775F66 		.ascii	"dw_fillLevel\000"
 3898      696C6C4C 
 3898      6576656C 
 3898      00
 3899              	.LASF152:
 3900 08c0 746F6B65 		.ascii	"tokenPosition\000"
 3900      6E506F73 
 3900      6974696F 
 3900      6E00
 3901              	.LASF139:
 3902 08ce 6A736D6E 		.ascii	"jsmn_parse_primitive\000"
 3902      5F706172 
 3902      73655F70 
 3902      72696D69 
 3902      74697665 
 3903              	.LASF132:
 3904 08e3 6D625F65 		.ascii	"mb_ev\000"
 3904      7600
 3905              	.LASF79:
 3906 08e9 47524159 		.ascii	"GRAYBLUE\000"
 3906      424C5545 
 3906      00
 3907              	.LASF153:
 3908 08f2 6576656E 		.ascii	"even_commands\000"
 3908      5F636F6D 
 3908      6D616E64 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\cc3rBAwr.s 			page 85


 3908      7300
 3909              	.LASF16:
 3910 0900 73746172 		.ascii	"start\000"
 3910      7400
 3911              	.LASF119:
 3912 0906 42554646 		.ascii	"BUFFERTYPE_DRAWER\000"
 3912      45525459 
 3912      50455F44 
 3912      52415745 
 3912      5200
 3913              	.LASF118:
 3914 0918 4D425F54 		.ascii	"MB_TaskType\000"
 3914      61736B54 
 3914      79706500 
 3915              	.LASF122:
 3916 0924 6D5F7369 		.ascii	"m_size\000"
 3916      7A6500
 3917              	.LASF88:
 3918 092b 45455F46 		.ascii	"EE_FREG\000"
 3918      52454700 
 3919              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
