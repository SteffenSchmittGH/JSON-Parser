ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_irqendin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_hal_endcycle_ready,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	EE_hal_endcycle_ready, %function
  24              	EE_hal_endcycle_ready:
  25              	.LFB34:
  26              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 2


  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 3


  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 4


 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_ready(EE_TID tid)
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
  27              		.loc 1 172 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = tid;
  40              		.loc 1 173 0
  41 0008 034A     		ldr	r2, .L2
  42 000a 7B68     		ldr	r3, [r7, #4]
  43 000c 1360     		str	r3, [r2]
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  44              		.loc 1 174 0
  45 000e 00BF     		nop
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 80BC     		pop	{r7}
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0016 7047     		bx	lr
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 5


  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0018 00000000 		.word	EE_std_endcycle_next_tid
  59              		.cfi_endproc
  60              	.LFE34:
  61              		.size	EE_hal_endcycle_ready, .-EE_hal_endcycle_ready
  62              		.section	.text.EE_hal_endcycle_stacked,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  66              		.type	EE_hal_endcycle_stacked, %function
  67              	EE_hal_endcycle_stacked:
  68              	.LFB35:
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_stacked(EE_TID tid)
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
  69              		.loc 1 178 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 83B0     		sub	sp, sp, #12
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = EE_std_mark_tid_stacked(tid);
  82              		.loc 1 179 0
  83 0008 7B68     		ldr	r3, [r7, #4]
  84 000a 43F00043 		orr	r3, r3, #-2147483648
  85 000e 034A     		ldr	r2, .L5
  86 0010 1360     		str	r3, [r2]
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
  87              		.loc 1 180 0
  88 0012 00BF     		nop
  89 0014 0C37     		adds	r7, r7, #12
  90              		.cfi_def_cfa_offset 4
  91 0016 BD46     		mov	sp, r7
  92              		.cfi_def_cfa_register 13
  93              		@ sp needed
  94 0018 80BC     		pop	{r7}
  95              		.cfi_restore 7
  96              		.cfi_def_cfa_offset 0
  97 001a 7047     		bx	lr
  98              	.L6:
  99              		.align	2
 100              	.L5:
 101 001c 00000000 		.word	EE_std_endcycle_next_tid
 102              		.cfi_endproc
 103              	.LFE35:
 104              		.size	EE_hal_endcycle_stacked, .-EE_hal_endcycle_stacked
 105              		.section	.text.EE_ORTI_set_th_eq_dispatch_prio,"ax",%progbits
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 6


 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 109              		.type	EE_ORTI_set_th_eq_dispatch_prio, %function
 110              	EE_ORTI_set_th_eq_dispatch_prio:
 111              	.LFB39:
 112              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 as published by the Free Software Foundation,
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * CVS: $Id: ee_common.h,v 1.7 2006/05/03 05:59:55 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 7


  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define PKG_KERNEL_OO_INC_EE_OO_COMMON_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                             Kernel Constants
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* invalid TID */
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_NIL          ((EE_TID)-1)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* maximum value for EE_UREG (used in EE_th_resource_last) */
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_UREG_MINUS1  ((EE_UREG)-1)
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** The Kernel constants like NIL and other thread statuses are defined
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** in the following sections:
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - invalid see 13.2.4
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** - thread statuses see 13.2.4
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Moreover, the user must specify (into types.h) in a fashion like
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    #define identifier unique_number
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the following identifiers:
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource identifiers declared with the macro
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      DeclareResource (13.4.2.1)
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The task identifiers declared with the macro TASK(TaskName) (13.2.5)
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - The resource (RES_SCHEDULER) MUST have the maximum ceiling possible
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      for Tasks
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For the Extended status and ORTI support:
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_TASK maximum number of tasks (used in TaskActivate
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_RESOURCE maximum number of resources
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_ALARM maximum number of alarms
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    For TASK/ALARM Autostart support:
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - EE_MAX_APPMODE maximum number of Application modes (typically
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      >0, because there is always the mode OSDEFAULTAPPMODE.
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Types
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priority type */
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPRIO
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPRIO EE_UREG
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* status type */
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the status type, that usually was an used configurable type, is set
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    by the OO Standard (Bindings specification, paragraph 3.2) to be
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    unsigned char. */
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPESTATUS
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPESTATUS EE_UREG
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 8


 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pending activation type */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPENACT
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPENACT EE_UREG
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* event mask type */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEEVENTMASK
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEEVENTMASK EE_UREG
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* pair type (signed!) */
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEPAIR
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEPAIR EE_SREG
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* application mode type */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEAPPMODE
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEAPPMODE EE_UREG
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* service id type */
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEOSSERVICEID
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEOSSERVICEID EE_UINT8
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* resource id type */
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPERESOURCE
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPERESOURCE EE_UREG
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter id type */
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTER
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTER EE_UREG
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter object id type */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPECOUNTEROBJECT
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPECOUNTEROBJECT  EE_UREG
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* alarm id type */
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEALARM
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEALARM EE_TYPECOUNTEROBJECT
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* action id type */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPEACTION
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPEACTION EE_UREG
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* counter tick type */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_TYPETICK
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK EE_UREG
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 9


 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies the OS-Application. */
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID                ApplicationType;
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_OSAPPLICATION ((ApplicationType)-1)
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define KERNEL_OSAPPLICATION  ((ApplicationType)0U)
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Maximum number of pending activations */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPENACT   EE_th_rnact_max[EE_MAX_TASK];
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* priorities (NB: they are bit fields!!!) */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_ready_prio[EE_MAX_TASK];
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO EE_th_dispatch_prio[EE_MAX_TASK];
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_TASK_NAME[EE_MAX_TASK];
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_EVENT_NAME[EE_MAX_EVENT];
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_ALARM_NAME[EE_MAX_ALARM];
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const char* EE_RESOURCE_NAME[EE_MAX_RESOURCE];
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_RESOURCE_ID[EE_MAX_RESOURCE];
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_EVENT_ID[EE_MAX_EVENT];
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const unsigned long EE_ALARM_ID[EE_MAX_ALARM];
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*uthra changes*/
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*************************************************************************
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  Kernel Variables defined by the application
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *************************************************************************/
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread status, all initialized to SUSPENDED */
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPESTATUS EE_th_status[EE_MAX_TASK];
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* next: is used for:
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the stacked queue
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - WaitEvent (?)
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - the ready queue (BCC1, ECC1)
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    all initialized with EE_NIL
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_next[EE_MAX_TASK];
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * remaining nact: init= maximum pending activations of a Task
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * =1 for BCC1 and ECC1, >= 0 for BCC2 and ECC2
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * all initialized with 1 (ECC2, BCC2: or with a value >1)
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPENACT   EE_th_rnact[EE_MAX_TASK];
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_CHAINTASK__
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The next task to be activated after a ChainTask. initvalue=all EE_NIL */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 10


 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_th_terminate_nextask[EE_MAX_TASK];
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The first stacked task (initvalue = EE_NIL) */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID       EE_stkfirst;
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* First task in the ready queue (initvalue = EE_NIL) */
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID EE_rq_first;
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  __OO_BCC1__ || __OO_ECC1__ */
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* System ceiling (initvalue = 0) */
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_sys_ceiling;
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ready queue implementation:
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - 16 priorities
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - we use a queue for each priority. Head and tail are stored in an array
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - each queue contains pairs (Task ID, next)
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - the number of pairs is the sum of all the possible activations
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   of all the tasks (in that way, an activation will never fail due
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   to the lack of a pair)
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * - to know which queue have to be used, a bit mask is used to do a fast
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *   lookup (the 8 bit lookup table is defined into ee_lookup.c)
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  */
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* bit mask with 16 or 8 priority levels (Initvalue = 0) */
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_BCC2__)
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT8 EE_TYPE_RQ_MASK;
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UINT16 EE_TYPE_RQ_MASK;
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 11


 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following data structure gives the link between a task and its
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority queue.  The values of this data structure are the same of
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_ready_prio, except that they are not stored as bitfields
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: each TID = x such that th_ready_prio[TID]= 1<<x
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_rq_link[EE_MAX_TASK];
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The priority queues  (initvalue: all -1;
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number of elements: 8(BCC2) or 16(ECC2) ) */
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_head[EE_RQ_QUEUES_HEAD_SIZE];
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_queues_tail[EE_RQ_QUEUES_TAIL_SIZE];
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The pairs that are enqueued into the priority queues */
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* initvalue: something like {1,2,3,4,5,...,-1}.
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of elements is equal to the sum of the elements of
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EE_th_rnact */
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_pairs_next[EE_RQ_PAIRS_NEXT_SIZE];
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* init value=0 (no init value); the number of elements is equal to the
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    sum of the elements of EE_th_rnact */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TID      EE_rq_pairs_tid[EE_RQ_PAIRS_TID_SIZE];
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RQ priority Mask */
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPE_RQ_MASK EE_rq_bitmask;
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a list of unused pairs */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPAIR EE_rq_free; /* pointer to a free pair; initvalue=0 */
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Event handling */
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: To save memory space, Extended tasks should have the smallest
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    number into the task data structures. In that way, the following
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    data structures can be sized to exactly the number of the extended
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 12


 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    tasks */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread events already active; these events are set using the
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    SetEvent primitive. initvalue = 0 */
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_active[EE_MAX_TASK];
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* thread wait mask. this is the event mask the task is waiting using
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    WaitEvent. A task IS waiting only if the value in this array IS != 0.
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    initvalue = 0 */
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEEVENTMASK EE_th_event_waitmask[EE_MAX_TASK];
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this structure contains a flag that is 1 if a thread has been
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    suspended using EE_hal_stkchange. In that case, the task have to
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be wakened again using the same function. initvalue = 0
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_th_waswaiting[EE_MAX_TASK];
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* just a flag: this flag is 1 if the task is an extended task, 0 otherwise */
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Please note that this flag is defined both in STANDARD and in
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    EXTENDED status. The need for this flag in standard status is
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    because task activations of an extended task clears its pending
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    event mask. */
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEBOOL EE_th_is_extended[EE_MAX_TASK];
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resources data structures */
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Resource ceiling */
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEPRIO   EE_resource_ceiling[EE_MAX_RESOURCE];
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ISR2 priority tied to an resource */
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPEISR2PRIO  EE_resource_isr2_priority[EE_MAX_RESOURCE];
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 13


 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: There is no constraint on the index that is assigned
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    RES_SCHEDULER!!! */
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old resource ceiling */
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO   EE_resource_oldceiling[EE_MAX_RESOURCE];
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ISR2_RESOURCES__
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* New data structures to handle resource sharing with isr2 and isr2 hardware
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    priority ceiling. */
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Old ISR2 priority */
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEISR2PRIO  EE_isr2_oldpriority[EE_MAX_RESOURCE];
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ */
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ORTI_RES_ISLOCKED__))
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status or when using ORTI with resources; for each
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    resource, a flag is allocated to see if the resource is locked or
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not.  Note that this information cannot be easily knew from the
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    previous two data structures. initvalue=0
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEBOOL EE_resource_locked[EE_MAX_RESOURCE];
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_EXTENDED_STATUS__ || __OO_ORTI_RES_ISLOCKED__ */
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(__OO_ISR2_RESOURCES__))
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Only in extended status; for each task, we allocate a data
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    structure that keeps track of the order in which every task has
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    allocated a resource. This is needed to return a meaningful
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    E_OS_NOFUNC error in the ReleaseResource call. */
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the last resource that the task has locked. This array
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    contains one entry for each task.  Initvalue= all -1. at runtime,
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    it points to the first item in the EE_resource_stack data structure */
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef EE_MAX_ISR2_WITH_RESOURCES
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK];
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* !EE_MAX_ISR2_WITH_RESOURCES */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_th_resource_last[EE_MAX_TASK + EE_MAX_ISR2_WITH_RESOURCES];
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !EE_MAX_ISR2_WITH_RESOURCES */
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this array is used to store a list of resources locked by a
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    task. there is one entry for each resource, initvalue = -1. the
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    list of resources locked by a task is ended by -1. */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG EE_resource_stack[EE_MAX_RESOURCE];
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ || __OO_ISR2_RESOURCES__ */
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 14


 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_NO_RESOURCES__ */
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(EE_MAX_ISR2_WITH_RESOURCES)) && (!defined(EE_AS_USER_SPINLOCKS__))
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2_WITH_RESOURCES > 0)
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Array to hold corresponding isr2 nesting levels */
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2_WITH_RESOURCES];
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* (EE_MAX_ISR2_WITH_RESOURCES > 0) && !EE_AS_USER_SPINLOCKS__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #elif defined (EE_MAX_ISR2)
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_MAX_ISR2 > 0)
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_UREG                EE_isr2_nesting_level[EE_MAX_ISR2];
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_ISR2 > 0 */
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the stub that have to be put into the EE_th_body array */
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern void EE_oo_thread_stub(void);
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* see top of the file */
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.2 Task management
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.1 Data types                                                       */
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies a task. */
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID TaskType;
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of TaskType. */
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TID *TaskRefType;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 15


 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type identifies the state of a task. */
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS TaskStateType;
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type points to a variable of the data type TaskStateType. */
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESTATUS *TaskStateRefType;
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ISR2 management
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type identifies an interrupt service routine (ISR). */
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_UTID ISRType;
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ISR ((ISRType)-1)
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.2.4 Constants                                                        */
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state running. */
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define RUNNING   ((EE_TYPESTATUS)0U)
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state waiting. */
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define WAITING   ((EE_TYPESTATUS)1U)
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state ready. */
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define READY     ((EE_TYPESTATUS)2U)
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constant of data type TaskStateType for task state suspended. */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define SUSPENDED ((EE_TYPESTATUS)3U)
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.4 Resource management
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.4.1 Data types                                                       */
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef __OO_NO_RESOURCES__
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPERESOURCE ResourceType;
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.5 Event control
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.5.1 Data types                                                       */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK EventMaskType;
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEEVENTMASK *EventMaskRefType;
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.6 Counters & Alarms
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 16


 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents count values in ticks. */
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPETICK TickType;
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type TickType. */
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef TickType *TickRefType;
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_CPU_CLOCK
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of ms in number of ticks at the CPU
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     clock frequency **/
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MILLI_TO_CPU_TICKS(X_MS) EE_MILLI_TO_TICKS(X_MS, EE_CPU_CLOCK)
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Utility Macro that convert an amount of us in number of ticks of a given
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     frequency **/
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MICRO_TO_CPU_TICKS(X_US) EE_MICRO_TO_TICKS(X_US, EE_CPU_CLOCK)
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_CPU_CLOCK */
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Alarms Handling */
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Used to handle some corner cases with TickType */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_TYPETICK_HALF_VALUE ((((EE_TYPETICK)-1) >> 1) + 1U)
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.6.1 Data types                                                       */
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* A structure for storage of counter characteristics. */
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType maxallowedvalue; /* Maximum possible allowed count value in
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                ticks */
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType ticksperbase;    /* Number of hardware ticks required to reach a
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                                counter-specific (significant) unit. */
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_EXTENDED_STATUS__
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType mincycle; /* Smallest allowed value for the cycle-parameter
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         of SetRelAlarm/SetAbsAlarm) (only for systems
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****                         with extended status) */
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_EXTENDED_STATUS__ */
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } AlarmBaseType;
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type points to the data type AlarmBaseType. */
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef AlarmBaseType *AlarmBaseRefType;
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represent a counter object ID. */
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTEROBJECT  CounterObjectType;
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter object ID */
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER_OBJECT  ((CounterObjectType)-1)
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an action ID. */
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEACTION ActionType;
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This data type represents an alarm ID. */
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEALARM AlarmType;
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid alarm */
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_ALARM ((AlarmType)-1)
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef This is an additional data type that represents a counter ID. */
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOUNTER CounterType;
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 17


 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Define for an invalid counter */
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_COUNTER ((CounterType)-1)
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: depends on configuration */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        maxallowedvalue;
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        ticksperbase;
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType        mincycle;
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this counter belong to. */
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType ApplID;
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_ROM_type;
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Initialization Value: {0, -1} */
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          value;  /**< current value of the counter */
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType first;  /**< first object queued on the counter */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_RAM_type;
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Add supplementary support info for hardware counters */
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType microsecondspertick;
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_hw_ROM_type;
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter objects */
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ALARM,
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_SCHEDULETABLE
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_kind_type;
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_counter_object_kind_type CounterObjectKindType;
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The counter this counter is linked to */
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType           c;
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** ID specialized Id (In Alarm or Schedule Tables List) */
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType     spec_id;
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** Which kind of Counter Object is this */
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectKindType kind;
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_ROM_type;
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These data structures represent a generic counter object. Object of this
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     kind will build a counter's expire list */
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TYPEBOOL       used;     /**< a flag that is 1 when the alarm is armed */
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          cntcycle; /**< cycle for periodic alarms */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TickType          delta;    /**< delta expiration time (into a queue!) */
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterObjectType next;     /**< next counter object in the delta queue */
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_counter_object_RAM_type;
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 18


 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** These are the different kind of counter object actions */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_TASK      = 0U,
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_EVENT     = 1U,
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_COUNTER   = 2U,
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ACTION_CALLBACK  = 3U
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_kind_type;
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** Typedef to have a more harmonized type name with other OSEK type names */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_oo_action_kind_type ActionKindType;
 688:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 689:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** This data structure represent an counter object action */
 690:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 691:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionKindType    action_kind;
 692:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TaskType          action_task;
 693:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 694:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EventMaskType     action_mask;
 695:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 696:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_VOID_CALLBACK  f;
 697:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Counter to increment when the alarm expire.*/
 698:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   CounterType       inccount;
 699:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_action_ROM_type;
 700:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 701:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct {
 702:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the action that have to be executed when this alarm expire */
 703:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ActionType        action_id;
 704:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_OSAPPLICATIONS__
 705:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /** The ID of the application to which this alarm belong to. */
 706:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ApplicationType   ApplID;
 707:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_AS_OSAPPLICATIONS__ */
 708:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_oo_alarm_ROM_type;
 709:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 710:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This array contains, for each counter, the characteristics of the counter.
 711:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The initialization value is implementation dependent */
 712:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_ROM_SIZE)
 713:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if EE_COUNTER_ROM_SIZE > 0
 714:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_ROM_type EE_counter_ROM[EE_COUNTER_ROM_SIZE];
 715:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 716:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 717:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 718:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_MAX_COUNTER_HW
 719:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Add supplementary support info for HARDWARE counters.
 720:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    This array contains, for each HARDWARE counter, the supplementary
 721:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    characteristics of the counter.The initialization value is implementation
 722:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    dependent */
 723:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_hw_ROM_type
 724:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_counter_hw_ROM[EE_COUNTER_HW_ROM_SIZE];
 725:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_COUNTER_HW */
 726:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 727:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the fixed part of a counter object.
 728:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm or the schedule table represented by this
 729:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 730:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 731:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 732:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_counter_object_ROM_type
 733:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_ROM[EE_COUNTER_OBJECTS_ROM_SIZE];
 734:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 19


 735:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 736:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 737:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part represent the list of the configured actions.
 738:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarms and the schedule tables have been
 739:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    have been configured */
 740:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ACTION_ROM_SIZE)
 741:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ACTION_ROM_SIZE > 0)
 742:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_action_ROM_type EE_oo_action_ROM[EE_ACTION_ROM_SIZE];
 743:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 744:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 745:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 746:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this is the fixed part of the configuration of an alarm
 747:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue= depends on how the alarm have been configured */
 748:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_ALARM_ROM_SIZE)
 749:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_ALARM_ROM_SIZE > 0)
 750:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_oo_alarm_ROM_type   EE_alarm_ROM[EE_ALARM_ROM_SIZE];
 751:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 752:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 753:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 754:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 755:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 756:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
 757:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
 758:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 759:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 760:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 761:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the RAM part of a counter.
 762:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initialization value = an array of {0,-1} elements */
 763:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_RAM_type       EE_counter_RAM[EE_MAX_COUNTER];
 764:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 765:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this part is the variable part of a counter object.
 766:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: all zeros. Note that setting the next value to 0 and
 767:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    not -1 does not give problems because used=0; the next field will
 768:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be set by counter_object_insert when inserting the alarm in the queue */
 769:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 770:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 771:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_oo_counter_object_RAM_type
 772:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_counter_object_RAM[EE_COUNTER_OBJECTS_ROM_SIZE];
 773:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 774:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 775:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 776:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 777:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 778:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
 779:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 780:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 781:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 782:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 783:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 784:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 785:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.7 Operating system execution control
 786:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 787:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 788:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 13.7.1 Data types                                                       */
 789:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 790:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 791:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This data type represents the application mode. */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 20


 792:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPEAPPMODE AppModeType;
 793:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 794:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 795:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * 13.1 Common data types
 796:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 797:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 798:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* 3.2 (Bindings). StatusType is an unsigned char */
 799:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifndef STATUSTYPEDEFINED
 800:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define STATUSTYPEDEFINED
 801:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef unsigned char StatusType;
 802:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OK                        ((StatusType)0U)
 803:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
 804:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 805:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ACCESS                 ((StatusType)1U)
 806:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CALLEVEL               ((StatusType)2U)
 807:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ID                     ((StatusType)3U)
 808:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_LIMIT                  ((StatusType)4U)
 809:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NOFUNC                 ((StatusType)5U)
 810:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_RESOURCE               ((StatusType)6U)
 811:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STATE                  ((StatusType)7U)
 812:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_VALUE                  ((StatusType)8U)
 813:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SERVICEID              ((StatusType)9U)
 814:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_ILLEGAL_ADDRESS        ((StatusType)10U)
 815:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_MISSINGEND             ((StatusType)11U)
 816:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_DISABLEDINT            ((StatusType)12U)
 817:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_STACKFAULT             ((StatusType)13U)
 818:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PARAM_POINTER          ((StatusType)14U)
 819:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_MEMORY      ((StatusType)15U)
 820:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_TIME        ((StatusType)16U)
 821:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_ARRIVAL     ((StatusType)17U)
 822:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_LOCKED      ((StatusType)18U)
 823:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_PROTECTION_EXCEPTION   ((StatusType)19U)
 824:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Spinlocks errors */
 825:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SPINLOCK               ((StatusType)20U)
 826:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_INTERFERENCE_DEADLOCK  ((StatusType)21U)
 827:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_NESTING_DEADLOCK       ((StatusType)22U)
 828:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* RPC errors */
 829:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_CORE                   ((StatusType)23U)
 830:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 831:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Implementation specific errors: they must start with E_OS_SYS_ */
 832:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Error during StartOS */
 833:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define E_OS_SYS_INIT               ((StatusType)24U)
 834:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 835:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 836:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * ORTI support
 837:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 838:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 839:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 840:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 841:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 842:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_START_SEC_VAR_NOINIT
 843:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 844:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 845:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 846:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_LASTERROR__
 847:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 848:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* a lasterror value that can be used with ORTI */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 21


 849:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern StatusType EE_ORTI_lasterror;
 850:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Macro to set lasterror value that can be used with ORTI */
 851:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_lasterror ( StatusType err ) {
 852:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_lasterror = err;
 853:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 854:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_LASTERROR__ */
 855:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 856:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_ORTI_set_lasterror(ERR) ((void)0)
 857:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif  /* __OO_ORTI_LASTERROR__ */
 858:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 859:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the last OO service called by the application.  SERVICETRACE IDs
 860:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are even numbers. The LSBit is used as a flag and it is set to 1
 861:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    when the servce is entered, to 0 at exit.
 862:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 863:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 864:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ACTIVATETASK              2U
 865:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TERMINATETASK             4U
 866:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CHAINTASK                 6U
 867:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SCHEDULE                  8U
 868:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKID                 10U
 869:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETTASKSTATE              12U
 870:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_DISABLEALLINTERRUPTS      14U
 871:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_ENABLEALLINTERRUPTS       16U
 872:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDALLINTERRUPTS      18U
 873:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEALLINTERRUPTS       20U
 874:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SUSPENDOSINTERRUPTS       22U
 875:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RESUMEOSINTERRUPTS        24U
 876:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETRESOURCE               26U
 877:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_RELEASERESOURCE           28U
 878:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETEVENT                  30U
 879:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CLEAREVENT                32U
 880:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETEVENT                  34U
 881:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITEVENT                 36U
 882:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARMBASE              38U
 883:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETALARM                  40U
 884:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETRELALARM               42U
 885:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SETABSALARM               44U
 886:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_CANCELALARM               46U
 887:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETACTIVEAPPLICATIONMODE  48U
 888:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_STARTOS                   50U
 889:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_SHUTDOWNOS                52U
 890:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_FORCESCHEDULE             54U
 891:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INCREMENTCOUNTER          56U
 892:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETCOUNTERVALUE           58U
 893:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETELAPSEDVALUE           60U
 894:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 895:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
 896:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_INITSEM                   62U
 897:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_WAITSEM                   64U
 898:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_TRYWAITSEM                66U
 899:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_POSTSEM                   68U
 900:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_GETVALUESEM               70U
 901:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   72U
 902:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_SEM__ */
 903:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_SERVICETRACE_OO_LAST                   62U
 904:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
 905:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 22


 906:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_SERVICETRACE__
 907:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern volatile EE_UINT8 EE_ORTI_servicetrace;
 908:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 909:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void EE_ORTI_set_service(EE_UINT8 srv)
 910:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 911:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_servicetrace = srv;
 912:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_USE_OTM__
 913:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_send_otm_servicetrace(srv);
 914:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ORTI_USE_OTM__ */
 915:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 916:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 917:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* __OO_ORTI_SERVICETRACE__ */
 918:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 919:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service(EE_UINT8 srv) {}
 920:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 921:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* else __OO_ORTI_SERVICETRACE__ */
 922:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 923:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 924:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 925:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_api_bss */
 926:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define API_STOP_SEC_VAR_NOINIT
 927:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 928:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 929:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 930:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Mapping for ORTI service In and Out */
 931:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_in (EE_UINT8 id)
 932:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 933:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id + 1U);
 934:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 935:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 936:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_service_out (EE_UINT8 id)
 937:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 938:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_set_service(id);
 939:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 940:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 941:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 942:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 943:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_bss */
 944:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_NOINIT
 945:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
 946:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 947:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 948:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_ORTI_PRIORITY__
 949:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This flag enables the visualization of the current task priority in ORTI
 950:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    debuggers. */
 951:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 952:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority and that is the priority
 953:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    that is read by the ORTI debugger
 954:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    Initvalue: the ready priority set for the task
 955:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
 956:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_th_priority[EE_MAX_TASK];
 957:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 958:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* this variable contains the current task priority saved when a task
 959:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked a resource. It works because a resource can be
 960:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    locked only by one task at a time.
 961:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    InitValue: all 0
 962:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 23


 963:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if (defined (EE_MAX_RESOURCE)) && (EE_MAX_RESOURCE > 0U)
 964:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPEPRIO EE_ORTI_resource_oldpriority[EE_MAX_RESOURCE];
 965:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_MAX_RESOURCE && EE_MAX_RESOURCE > 0U */
 966:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 967:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp)
 968:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 969:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_ORTI_th_priority[tmp] = EE_th_dispatch_prio[tmp];
 970:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 971:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 972:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index,
 973:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_TYPEPRIO prio)
 974:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
 975:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     EE_ORTI_th_priority[index] = prio;
 976:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 977:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else
 978:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_eq_dispatch_prio ( EE_TID tmp) {}
 113              		.loc 2 978 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 8
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 83B0     		sub	sp, sp, #12
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]
 126              		.loc 2 978 0
 127 0008 00BF     		nop
 128 000a 0C37     		adds	r7, r7, #12
 129              		.cfi_def_cfa_offset 4
 130 000c BD46     		mov	sp, r7
 131              		.cfi_def_cfa_register 13
 132              		@ sp needed
 133 000e 80BC     		pop	{r7}
 134              		.cfi_restore 7
 135              		.cfi_def_cfa_offset 0
 136 0010 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE39:
 139              		.size	EE_ORTI_set_th_eq_dispatch_prio, .-EE_ORTI_set_th_eq_dispatch_prio
 140 0012 00BF     		.section	.text.EE_as_set_execution_context,"ax",%progbits
 141              		.align	2
 142              		.thumb
 143              		.thumb_func
 144              		.type	EE_as_set_execution_context, %function
 145              	EE_as_set_execution_context:
 146              	.LFB41:
 979:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_ORTI_set_th_priority(EE_TID index, EE_TYPEPRIO prio) {}
 980:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*__OO_ORTI_PRIORITY__ */
 981:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 982:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 983:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 984:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_NOINIT
 985:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 24


 986:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 987:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 988:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
 989:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Semaphores
 990:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
 991:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 992:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Semaphores are not part of the OSEK API, please refer to the EE
 993:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    reference manual */
 994:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Constants                                                               */
 995:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
 996:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
 997:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* the maximum unsigned integer */
 998:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_MAX_SEM_COUNTER ((EE_UREG)-1)
 999:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1000:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data types                                                              */
1001:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* ----------------------------------------------------------------------- */
1002:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_SEM__
1003:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1004:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_TYPESEM {
1005:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG   count;
1006:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #if defined(__OO_ECC1__) || defined(__OO_ECC2__)
1007:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    first;
1008:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_TID    last;
1009:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
1010:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1011:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1012:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Data type of the event mask. */
1013:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef struct EE_TYPESEM  SemType;
1014:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1015:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Reference to an event mask. */
1016:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef SemType *SemRefType;
1017:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1018:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __OO_SEM__ */
1019:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1020:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /***************************************************************************
1021:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  * Autostart Features inside StartOS()
1022:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ***************************************************************************/
1023:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1024:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* Note: Autostart uses the symbol EE_MAX_APPMODE that represents
1025:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    the number of different application modes in the system. */
1026:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1027:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_TASK__
1028:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1029:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for tasks.
1030:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1031:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of tasks that have to be automatically
1032:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      activated at startup for a given application mode.
1033:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1034:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - task contains the list of TIDs that have to be activated for a
1035:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1036:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1037:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1038:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_task_type {
1039:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG nt;
1040:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TID (*task)[]; /* pointer to array of TIDs */
1041:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1042:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 25


1043:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1044:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1045:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_task_type
1046:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_task_data[EE_MAX_APPMODE];
1047:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1048:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1049:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1050:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __OO_AUTOSTART_ALARM__
1051:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1052:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* This is the data structure used to store the autostart data for alarms.
1053:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1054:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - n contains the number of alarms that have to be automatically
1055:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      set at startup for a given application mode.
1056:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1057:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    - alarm contains the list of Alarm IDs that have to be activated for a
1058:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****      given application mode.
1059:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1060:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1061:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** struct EE_oo_autostart_alarm_type {
1062:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_UREG na;
1063:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   const EE_TYPEALARM (*alarm)[];
1064:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** };
1065:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1066:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each valid APPMODE (that ranges from 0 to EE_MAX_APPMODE-1) there must
1067:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    be an item in this array with the tasks that are activated at startup. */
1068:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const struct EE_oo_autostart_alarm_type
1069:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_oo_autostart_alarm_data[EE_MAX_APPMODE];
1070:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1071:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* For each Alarm that is activated there should be an item in these
1072:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    arrays that contains the cycle and increment values that have to be
1073:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    used when activating a given alarm ID. Note that cycle/increment
1074:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    are unique for each alarm activation time.
1075:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****    The size of these two arrays is MAXALARM.
1076:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** */
1077:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_increment[EE_MAX_ALARM];
1078:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern const EE_TYPETICK EE_oo_autostart_alarm_cycle[EE_MAX_ALARM];
1079:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif
1080:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1081:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef __MSRP__
1082:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*******************************************************************************
1083:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  *               Autosar Multicore support Type Declarations
1084:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****  ******************************************************************************/
1085:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*  The following type declarations are added here and not inside AS kernel
1086:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     because i need "TryToGetSpinlockType *" to completely define EE_os_param
1087:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     type (used inside Error parameters structure).
1088:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     The problem is that theoretically there is not in C such a thing as
1089:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     "standard pointer dimension" but each pointer COULD HAVE his own dimension
1090:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     (it never happens... Actually the 99% of architectures has pointer and
1091:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     value registers with same dimension). */
1092:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1093:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPECOREID CoreIdType;
1094:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1095:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_AS_USER_SPINLOCKS__
1096:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef EE_TYPESPIN   SpinlockIdType;
1097:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define INVALID_SPINLOCK ((SpinlockIdType)-1)
1098:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1099:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 26


1100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_NOSUCCESS = 0x0,
1101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TRYTOGETSPINLOCK_SUCCESS
1102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } TryToGetSpinlockType;
1103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /*  EE_AS_USER_SPINLOCKS__ */
1104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* __MSRP__ */
1105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /*[OS088] If an OS-Application makes a service call from the wrong context AND
1107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   is currently not inside a Category 1 ISR the Operating System module shall
1108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   not perform the requested action (the service call shall have no effect),
1109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   and return E_OS_CALLEVEL (see [12], section 13.1) or the "invalid value" of
1110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   the service. (BSW11009, BSW11013) */
1111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @typedef OS-Application contexts enum used to implement Autosar OS O0S88
1112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****     requirement */
1113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** typedef enum {
1114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Kernel_Context,
1115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   TASK_Context,
1116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ISR2_Context,
1117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ErrorHook_Context,
1118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ProtectionHook_Context,
1119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PreTaskHook_Context,
1120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   PostTaskHook_Context,
1121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   StartupHook_Context,
1122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ShutdownHook_Context,
1123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   AlarmCallback_Context,
1124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   Idle_Context
1125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** } EE_TYPECONTEXT;
1126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SERVICE_PROTECTION__
1128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* The following variables belong to ERIKA API section: ee_kernel_data */
1131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_START_SEC_VAR_DATA
1132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /** @var used by the kernel to flag in witch context is executing */
1136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** extern EE_TYPECONTEXT EE_as_execution_context;
1137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
1139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #ifdef EE_SUPPORT_MEMMAP_H
1140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define OS_STOP_SEC_VAR_DATA
1141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #include "MemMap.inc"
1142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
1143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ EE_TYPECONTEXT  EE_as_get_execution_context( void )
1145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   return EE_as_execution_context;
1147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** 
1149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
1150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx )
1151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** {
1152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   EE_as_execution_context = ctx;
1153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
1154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #else /* EE_SERVICE_PROTECTION__ */
1155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** #define EE_as_get_execution_context()     Kernel_Context
1156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** __INLINE__ void  EE_as_set_execution_context ( EE_TYPECONTEXT
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 27


1157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   ctx ) {
 147              		.loc 2 1157 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 8
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 7, -4
 155 0002 83B0     		sub	sp, sp, #12
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 159 0006 0346     		mov	r3, r0
 160 0008 FB71     		strb	r3, [r7, #7]
1158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   /* Unusefull operation to meet Linters requirements */
1159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc ****   (void)ctx;
1160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_common.inc **** }
 161              		.loc 2 1160 0
 162 000a 00BF     		nop
 163 000c 0C37     		adds	r7, r7, #12
 164              		.cfi_def_cfa_offset 4
 165 000e BD46     		mov	sp, r7
 166              		.cfi_def_cfa_register 13
 167              		@ sp needed
 168 0010 80BC     		pop	{r7}
 169              		.cfi_restore 7
 170              		.cfi_def_cfa_offset 0
 171 0012 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE41:
 174              		.size	EE_as_set_execution_context, .-EE_as_set_execution_context
 175              		.section	.text.EE_stk_queryfirst,"ax",%progbits
 176              		.align	2
 177              		.thumb
 178              		.thumb_func
 179              		.type	EE_stk_queryfirst, %function
 180              	EE_stk_queryfirst:
 181              	.LFB53:
 182              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 28


  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 29


  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 30


 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 31


 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 183              		.loc 3 239 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 32


 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 7, -4
 191 0002 00AF     		add	r7, sp, #0
 192              		.cfi_def_cfa_register 7
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 193              		.loc 3 240 0
 194 0004 024B     		ldr	r3, .L11
 195 0006 1B68     		ldr	r3, [r3]
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 196              		.loc 3 241 0
 197 0008 1846     		mov	r0, r3
 198 000a BD46     		mov	sp, r7
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 000c 80BC     		pop	{r7}
 202              		.cfi_restore 7
 203              		.cfi_def_cfa_offset 0
 204 000e 7047     		bx	lr
 205              	.L12:
 206              		.align	2
 207              	.L11:
 208 0010 00000000 		.word	EE_stkfirst
 209              		.cfi_endproc
 210              	.LFE53:
 211              		.size	EE_stk_queryfirst, .-EE_stk_queryfirst
 212              		.section	.text.EE_oo_call_PreTaskHook,"ax",%progbits
 213              		.align	2
 214              		.thumb
 215              		.thumb_func
 216              		.type	EE_oo_call_PreTaskHook, %function
 217              	EE_oo_call_PreTaskHook:
 218              	.LFB57:
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 33


 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 34


 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 35


 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 219              		.loc 3 398 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 80B5     		push	{r7, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 229              		.loc 3 400 0
 230 0004 0120     		movs	r0, #1
 231 0006 FFF7FEFF 		bl	EE_as_set_execution_context
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 232              		.loc 3 401 0
 233 000a 00BF     		nop
 234 000c 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE57:
 237              		.size	EE_oo_call_PreTaskHook, .-EE_oo_call_PreTaskHook
 238 000e 00BF     		.section	.text.EE_oo_call_PostTaskHook,"ax",%progbits
 239              		.align	2
 240              		.thumb
 241              		.thumb_func
 242              		.type	EE_oo_call_PostTaskHook, %function
 243              	EE_oo_call_PostTaskHook:
 244              	.LFB58:
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 245              		.loc 3 410 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 36


 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 80B4     		push	{r7}
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255              		.loc 3 410 0
 256 0004 00BF     		nop
 257 0006 BD46     		mov	sp, r7
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
 260 0008 80BC     		pop	{r7}
 261              		.cfi_restore 7
 262              		.cfi_def_cfa_offset 0
 263 000a 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE58:
 266              		.size	EE_oo_call_PostTaskHook, .-EE_oo_call_PostTaskHook
 267              		.section	.text.EE_oo_check_disableint_error,"ax",%progbits
 268              		.align	2
 269              		.thumb
 270              		.thumb_func
 271              		.type	EE_oo_check_disableint_error, %function
 272              	EE_oo_check_disableint_error:
 273              	.LFB59:
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 274              		.loc 3 421 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 0000 80B4     		push	{r7}
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 284              		.loc 3 422 0
 285 0004 054B     		ldr	r3, .L17
 286 0006 1B68     		ldr	r3, [r3]
 287 0008 002B     		cmp	r3, #0
 288 000a 14BF     		ite	ne
 289 000c 0123     		movne	r3, #1
 290 000e 0023     		moveq	r3, #0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 37


 291 0010 DBB2     		uxtb	r3, r3
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 292              		.loc 3 423 0
 293 0012 1846     		mov	r0, r3
 294 0014 BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 0016 80BC     		pop	{r7}
 298              		.cfi_restore 7
 299              		.cfi_def_cfa_offset 0
 300 0018 7047     		bx	lr
 301              	.L18:
 302 001a 00BF     		.align	2
 303              	.L17:
 304 001c 00000000 		.word	EE_oo_IRQ_disable_count
 305              		.cfi_endproc
 306              	.LFE59:
 307              		.size	EE_oo_check_disableint_error, .-EE_oo_check_disableint_error
 308              		.section	.text.EE_IRQ_release_all_items,"ax",%progbits
 309              		.align	2
 310              		.thumb
 311              		.thumb_func
 312              		.type	EE_IRQ_release_all_items, %function
 313              	EE_IRQ_release_all_items:
 314              	.LFB70:
 315              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 38


  32:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * CVS: $Id: ee_irqendin.c,v 1.2 2006/01/24 10:21:14 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  56:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "trcKernelPort.h"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
  58:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
  59:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Index used to give ISR2 Temporary TID value and to access at
  60:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    EE_isr2_nesting_level array */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_UREG EE_isr2_index = EE_UREG_MINUS1;
  62:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_TID EE_oo_assign_TID_to_ISR2( void ) {
  65:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  66:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index == EE_UREG_MINUS1 ) {
  68:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_index = 0U;
  69:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[0] = actual_nesting;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else if ( EE_isr2_nesting_level[EE_isr2_index] < actual_nesting ) {
  71:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     ++EE_isr2_index;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[EE_isr2_index] = actual_nesting;
  73:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
  74:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Nothing to do added just for MISRA 2004 Required Rule 14.10 */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
  76:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   return (EE_MAX_TASK + (EE_TID)EE_isr2_index);
  78:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
  79:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* [OS369]: If a Category 2 OsIsr calls GetResource() and ends (returns)
  81:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     without calling the corresponding ReleaseResource(), the Operating System
  82:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     shall perform the ReleaseResource() call and shall call the ErrorHook()
  83:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     (if configured) with the status E_OS_RESOURCE. */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void );
  85:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void ) {
  86:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Check if the index is valid -> at least one ISR2 got a resource */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index != EE_UREG_MINUS1 ) {
  88:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* N.B This method MUST be called at the end of IRQ post-stub but BEFORE
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 39


  89:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****        decrementing nesting. */
  90:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  91:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Check if this is the right level where do clean-up */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( EE_isr2_nesting_level[EE_isr2_index] == actual_nesting ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_TID current_isr2_tid = (EE_TID)EE_isr2_index + EE_MAX_TASK;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef __OO_ISR2_RESOURCES__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* OS369 */
  97:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_oo_release_all_resources(current_isr2_tid) != EE_UREG_MINUS1 ) {
  98:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_RESOURCE);
  99:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_RESOURCE);
 100:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 101:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ */
 102:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef EE_AS_USER_SPINLOCKS__
 103:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Force Spinlock Release */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_as_release_all_spinlocks(current_isr2_tid) !=
 105:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         INVALID_SPINLOCK )
 106:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_SPINLOCK);
 108:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_SPINLOCK);
 109:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 110:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Decrement ISR2 index (from 0U to EE_UREG_MINUS1 is handled by
 113:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          unsigned wraparound) */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       --EE_isr2_index;
 115:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 116:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 117:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 118:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void );
 120:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void ) {}
 316              		.loc 4 120 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 326              		.loc 4 120 0
 327 0004 00BF     		nop
 328 0006 BD46     		mov	sp, r7
 329              		.cfi_def_cfa_register 13
 330              		@ sp needed
 331 0008 80BC     		pop	{r7}
 332              		.cfi_restore 7
 333              		.cfi_def_cfa_offset 0
 334 000a 7047     		bx	lr
 335              		.cfi_endproc
 336              	.LFE70:
 337              		.size	EE_IRQ_release_all_items, .-EE_IRQ_release_all_items
 338              		.section	.text.EE_IRQ_run_next_task,"ax",%progbits
 339              		.align	2
 340              		.thumb
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 40


 341              		.thumb_func
 342              		.type	EE_IRQ_run_next_task, %function
 343              	EE_IRQ_run_next_task:
 344              	.LFB71:
 121:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 123:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifndef __PRIVATE_IRQ_END_INSTANCE__
 124:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void );
 126:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 128:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 129:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 345              		.loc 4 129 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 98B5     		push	{r3, r4, r7, lr}
 350              		.cfi_def_cfa_offset 16
 351              		.cfi_offset 3, -16
 352              		.cfi_offset 4, -12
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 130:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID tnext;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   tnext = EE_rq2stk_exchange();
 357              		.loc 4 131 0
 358 0004 FFF7FEFF 		bl	EE_rq2stk_exchange
 359 0008 0446     		mov	r4, r0
 132:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_th_waswaiting[tnext] ) {
 360              		.loc 4 132 0
 361 000a 0A4B     		ldr	r3, .L24
 362 000c 53F82430 		ldr	r3, [r3, r4, lsl #2]
 363 0010 002B     		cmp	r3, #0
 364 0012 09D0     		beq	.L21
 133:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_waswaiting[tnext] = EE_FALSE;
 365              		.loc 4 133 0
 366 0014 074B     		ldr	r3, .L24
 367 0016 0022     		movs	r2, #0
 368 0018 43F82420 		str	r2, [r3, r4, lsl #2]
 134:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 135:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
 136:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
 138:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_call_PreTaskHook();
 369              		.loc 4 138 0
 370 001c FFF7FEFF 		bl	EE_oo_call_PreTaskHook
 139:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(tnext);
 371              		.loc 4 139 0
 372 0020 2046     		mov	r0, r4
 373 0022 FFF7FEFF 		bl	EE_hal_endcycle_stacked
 140:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 141:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_ready(tnext);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 143:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 374              		.loc 4 143 0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 41


 375 0026 02E0     		b	.L23
 376              	.L21:
 141:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 377              		.loc 4 141 0
 378 0028 2046     		mov	r0, r4
 379 002a FFF7FEFF 		bl	EE_hal_endcycle_ready
 380              	.L23:
 381              		.loc 4 143 0
 382 002e 00BF     		nop
 383 0030 98BD     		pop	{r3, r4, r7, pc}
 384              	.L25:
 385 0032 00BF     		.align	2
 386              	.L24:
 387 0034 00000000 		.word	EE_th_waswaiting
 388              		.cfi_endproc
 389              	.LFE71:
 390              		.size	EE_IRQ_run_next_task, .-EE_IRQ_run_next_task
 391              		.section	.text.EE_IRQ_end_instance,"ax",%progbits
 392              		.align	2
 393              		.global	EE_IRQ_end_instance
 394              		.thumb
 395              		.thumb_func
 396              		.type	EE_IRQ_end_instance, %function
 397              	EE_IRQ_end_instance:
 398              	.LFB72:
 144:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ECC1__ || __OO_ECC2__ */
 145:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_hal_IRQ_ready(EE_rq2stk_exchange());
 148:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 149:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 150:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 151:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 152:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ handler.
 153:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    If the HAL allow IRQ nesting the C_end_instance should work as follows:
 154:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - it must implement the preemption test only if it is the last IRQ on the
 155:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      stack
 156:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - if there are other interrupts on the stack the IRQ end_instance should do
 157:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      nothing
 158:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_instance( void )
 160:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 399              		.loc 4 160 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 B0B5     		push	{r4, r5, r7, lr}
 404              		.cfi_def_cfa_offset 16
 405              		.cfi_offset 4, -16
 406              		.cfi_offset 5, -12
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 00AF     		add	r7, sp, #0
 410              		.cfi_def_cfa_register 7
 161:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID rqfirst, current;
 162:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   rqfirst = EE_rq_queryfirst();
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 42


 411              		.loc 4 163 0
 412 0004 FFF7FEFF 		bl	EE_rq_queryfirst
 413 0008 0446     		mov	r4, r0
 164:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   current = EE_stk_queryfirst();
 414              		.loc 4 164 0
 415 000a FFF7FEFF 		bl	EE_stk_queryfirst
 416 000e 0546     		mov	r5, r0
 165:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( (rqfirst != EE_NIL) && (EE_sys_ceiling < EE_th_ready_prio[rqfirst]) ) {
 417              		.loc 4 166 0
 418 0010 B4F1FF3F 		cmp	r4, #-1
 419 0014 21D0     		beq	.L27
 420              		.loc 4 166 0 is_stmt 0 discriminator 1
 421 0016 184B     		ldr	r3, .L32
 422 0018 53F82420 		ldr	r2, [r3, r4, lsl #2]
 423 001c 174B     		ldr	r3, .L32+4
 424 001e 1B68     		ldr	r3, [r3]
 425 0020 9A42     		cmp	r2, r3
 426 0022 1AD9     		bls	.L27
 167:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* We have to schedule a READY thread */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current != EE_NIL ) {
 427              		.loc 4 169 0 is_stmt 1
 428 0024 B5F1FF3F 		cmp	r5, #-1
 429 0028 05D0     		beq	.L28
 170:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* There is a post task hook only if a TASK that was RUNNING */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_oo_call_PostTaskHook();
 430              		.loc 4 171 0
 431 002a FFF7FEFF 		bl	EE_oo_call_PostTaskHook
 172:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* The RUNNING TASK is now preempted-> READY status + still in stacked
 173:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          queue */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_th_status[current] = READY;
 432              		.loc 4 174 0
 433 002e 144B     		ldr	r3, .L32+8
 434 0030 0222     		movs	r2, #2
 435 0032 43F82520 		str	r2, [r3, r5, lsl #2]
 436              	.L28:
 175:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 176:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Another TASK is put into the RUNNING state */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_status[rqfirst] = RUNNING;
 437              		.loc 4 178 0
 438 0036 124B     		ldr	r3, .L32+8
 439 0038 0022     		movs	r2, #0
 440 003a 43F82420 		str	r2, [r3, r4, lsl #2]
 179:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
 441              		.loc 4 180 0
 442 003e 114B     		ldr	r3, .L32+12
 443 0040 53F82420 		ldr	r2, [r3, r4, lsl #2]
 444 0044 0D4B     		ldr	r3, .L32+4
 445 0046 1B68     		ldr	r3, [r3]
 446 0048 1343     		orrs	r3, r3, r2
 447 004a 0C4A     		ldr	r2, .L32+4
 448 004c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_th_eq_dispatch_prio(rqfirst);
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 43


 449              		.loc 4 182 0
 450 004e 2046     		mov	r0, r4
 451 0050 FFF7FEFF 		bl	EE_ORTI_set_th_eq_dispatch_prio
 183:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* "Press TP start for the first time" for this new activation or realese
 185:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         from wait of the TASK */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_as_tp_active_start_on_TASK_stacking(rqfirst);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the next running TASK, it doesn't directly RUN it */
 188:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_IRQ_run_next_task();
 452              		.loc 4 188 0
 453 0054 FFF7FEFF 		bl	EE_IRQ_run_next_task
 454 0058 0CE0     		b	.L29
 455              	.L27:
 189:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 190:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current == EE_NIL ) {
 456              		.loc 4 190 0
 457 005a B5F1FF3F 		cmp	r5, #-1
 458 005e 03D1     		bne	.L30
 191:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to the Idle loop */
 192:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( Idle_Context );
 459              		.loc 4 192 0
 460 0060 0A20     		movs	r0, #10
 461 0062 FFF7FEFF 		bl	EE_as_set_execution_context
 462 0066 02E0     		b	.L31
 463              	.L30:
 193:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_start_idle();
 194:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     } else {
 195:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to a preempted TASK */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( TASK_Context );
 464              		.loc 4 196 0
 465 0068 0120     		movs	r0, #1
 466 006a FFF7FEFF 		bl	EE_as_set_execution_context
 467              	.L31:
 197:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Enable the Task Timing Protection Set */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_set_from_TASK(current);
 199:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 200:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the Context Switch up, it doesn't directly switch */
 201:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(current);
 468              		.loc 4 201 0
 469 006e 2846     		mov	r0, r5
 470 0070 FFF7FEFF 		bl	EE_hal_endcycle_stacked
 471              	.L29:
 202:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 472              		.loc 4 203 0
 473 0074 00BF     		nop
 474 0076 B0BD     		pop	{r4, r5, r7, pc}
 475              	.L33:
 476              		.align	2
 477              	.L32:
 478 0078 00000000 		.word	EE_th_ready_prio
 479 007c 00000000 		.word	EE_sys_ceiling
 480 0080 00000000 		.word	EE_th_status
 481 0084 00000000 		.word	EE_th_dispatch_prio
 482              		.cfi_endproc
 483              	.LFE72:
 484              		.size	EE_IRQ_end_instance, .-EE_IRQ_end_instance
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 44


 485              		.section	.text.EE_IRQ_end_post_stub,"ax",%progbits
 486              		.align	2
 487              		.global	EE_IRQ_end_post_stub
 488              		.thumb
 489              		.thumb_func
 490              		.type	EE_IRQ_end_post_stub, %function
 491              	EE_IRQ_end_post_stub:
 492              	.LFB73:
 204:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 205:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 206:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ post-stub.
 207:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive do needed clean-up as resetting kernel interrupt nested
 208:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    counter and release gotten resources if application forget to do that as
 209:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    specified by Autosar standard.
 210:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 211:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_post_stub( void ) {
 493              		.loc 4 211 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497 0000 80B5     		push	{r7, lr}
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS368]: If a Category 2 OsIsr calls DisableAllInterupts()/
 213:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       SuspendAllInterrupts()/SuspendOSInterrupts() and ends (returns)
 214:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       without calling the corresponding EnableAllInterrupts()/
 215:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() / ResumeOSInterrupts(),
 216:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the Operating System shall perform the missing service and shall call
 217:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the ErrorHook() (if configured) with the status E_OS_DISABLEDINT. */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Only check and reset ISR flags an counters because ISR re-enabling is done
 220:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      in CPU layer */
 221:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_oo_check_disableint_error() )
 503              		.loc 4 221 0
 504 0004 FFF7FEFF 		bl	EE_oo_check_disableint_error
 505 0008 0346     		mov	r3, r0
 506 000a 002B     		cmp	r3, #0
 507 000c 02D0     		beq	.L35
 222:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   {
 223:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_lasterror(E_OS_DISABLEDINT);
 224:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_notify_error_service(OSId_ISR2Body, E_OS_DISABLEDINT);
 225:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Reset ISRs counter */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_IRQ_disable_count = 0U;
 508              		.loc 4 226 0
 509 000e 034B     		ldr	r3, .L36
 510 0010 0022     		movs	r2, #0
 511 0012 1A60     		str	r2, [r3]
 512              	.L35:
 227:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 228:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 229:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [SWS_Os_00474] The Operating System module shall reset an ISR's
 230:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       OsIsrExecutionBudget when the ISR returns control to the OS or terminates.
 231:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       (SRS_Os_11008) */
 232:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Reset ALL TP Budgets, safest approach */
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 45


 233:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_as_tp_active_reset_budgets();
 234:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS369]: If a Category 2 OsIsr calls GetResource() and ends (returns)
 236:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       without calling the corresponding ReleaseResource(), the Operating System
 237:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       shall perform the ReleaseResource() call and shall call the ErrorHook()
 238:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       (if configured) with the status E_OS_RESOURCE. */
 239:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS109]: If the Operating System module forcibly terminates an interrupt
 240:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       service routine, it clears the interrupt request, aborts the interrupt
 241:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       service routine (The interrupt source stays in the current state.)
 242:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       and releases all OSEK resources the interrupt service routine has
 243:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       allocated and calls EnableAllInterrupts() / ResumeOSInterrupts() /
 244:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() if the interrupt called DisableAllInterrupts() /
 245:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       SuspendOSInterrupts() / SuspendAllInterrupts() before without the
 246:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       corresponding EnableAllInterrupts() / ResumeOSInterrupts() /
 247:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() call. */
 248:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_IRQ_release_all_items();
 513              		.loc 4 248 0
 514 0014 FFF7FEFF 		bl	EE_IRQ_release_all_items
 249:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 515              		.loc 4 249 0
 516 0018 00BF     		nop
 517 001a 80BD     		pop	{r7, pc}
 518              	.L37:
 519              		.align	2
 520              	.L36:
 521 001c 00000000 		.word	EE_oo_IRQ_disable_count
 522              		.cfi_endproc
 523              	.LFE73:
 524              		.size	EE_IRQ_end_post_stub, .-EE_IRQ_end_post_stub
 525              		.text
 526              	.Letext0:
 527              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 528              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 529              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 530              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 531              		.section	.debug_info,"",%progbits
 532              	.Ldebug_info0:
 533 0000 77050000 		.4byte	0x577
 534 0004 0400     		.2byte	0x4
 535 0006 00000000 		.4byte	.Ldebug_abbrev0
 536 000a 04       		.byte	0x4
 537 000b 01       		.uleb128 0x1
 538 000c E3000000 		.4byte	.LASF87
 539 0010 0C       		.byte	0xc
 540 0011 D0030000 		.4byte	.LASF88
 541 0015 03050000 		.4byte	.LASF89
 542 0019 00000000 		.4byte	.Ldebug_ranges0+0
 543 001d 00000000 		.4byte	0
 544 0021 00000000 		.4byte	.Ldebug_line0
 545 0025 02       		.uleb128 0x2
 546 0026 01       		.byte	0x1
 547 0027 06       		.byte	0x6
 548 0028 26040000 		.4byte	.LASF0
 549 002c 02       		.uleb128 0x2
 550 002d 01       		.byte	0x1
 551 002e 08       		.byte	0x8
 552 002f FF030000 		.4byte	.LASF1
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 46


 553 0033 02       		.uleb128 0x2
 554 0034 02       		.byte	0x2
 555 0035 05       		.byte	0x5
 556 0036 C1000000 		.4byte	.LASF2
 557 003a 02       		.uleb128 0x2
 558 003b 02       		.byte	0x2
 559 003c 07       		.byte	0x7
 560 003d BD040000 		.4byte	.LASF3
 561 0041 02       		.uleb128 0x2
 562 0042 04       		.byte	0x4
 563 0043 05       		.byte	0x5
 564 0044 04030000 		.4byte	.LASF4
 565 0048 02       		.uleb128 0x2
 566 0049 04       		.byte	0x4
 567 004a 07       		.byte	0x7
 568 004b C1050000 		.4byte	.LASF5
 569 004f 02       		.uleb128 0x2
 570 0050 08       		.byte	0x8
 571 0051 05       		.byte	0x5
 572 0052 CD020000 		.4byte	.LASF6
 573 0056 02       		.uleb128 0x2
 574 0057 08       		.byte	0x8
 575 0058 07       		.byte	0x7
 576 0059 32040000 		.4byte	.LASF7
 577 005d 03       		.uleb128 0x3
 578 005e 04       		.byte	0x4
 579 005f 05       		.byte	0x5
 580 0060 696E7400 		.ascii	"int\000"
 581 0064 02       		.uleb128 0x2
 582 0065 04       		.byte	0x4
 583 0066 07       		.byte	0x7
 584 0067 61040000 		.4byte	.LASF8
 585 006b 02       		.uleb128 0x2
 586 006c 08       		.byte	0x8
 587 006d 04       		.byte	0x4
 588 006e B5030000 		.4byte	.LASF9
 589 0072 04       		.uleb128 0x4
 590 0073 DB020000 		.4byte	.LASF10
 591 0077 05       		.byte	0x5
 592 0078 3F       		.byte	0x3f
 593 0079 25000000 		.4byte	0x25
 594 007d 04       		.uleb128 0x4
 595 007e 5F050000 		.4byte	.LASF11
 596 0082 05       		.byte	0x5
 597 0083 52       		.byte	0x52
 598 0084 3A000000 		.4byte	0x3a
 599 0088 04       		.uleb128 0x4
 600 0089 8F040000 		.4byte	.LASF12
 601 008d 05       		.byte	0x5
 602 008e 53       		.byte	0x53
 603 008f 5D000000 		.4byte	0x5d
 604 0093 04       		.uleb128 0x4
 605 0094 9E010000 		.4byte	.LASF13
 606 0098 05       		.byte	0x5
 607 0099 54       		.byte	0x54
 608 009a 64000000 		.4byte	0x64
 609 009e 04       		.uleb128 0x4
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 47


 610 009f 22000000 		.4byte	.LASF14
 611 00a3 06       		.byte	0x6
 612 00a4 4D       		.byte	0x4d
 613 00a5 93000000 		.4byte	0x93
 614 00a9 04       		.uleb128 0x4
 615 00aa 71010000 		.4byte	.LASF15
 616 00ae 06       		.byte	0x6
 617 00af 4F       		.byte	0x4f
 618 00b0 93000000 		.4byte	0x93
 619 00b4 04       		.uleb128 0x4
 620 00b5 D3050000 		.4byte	.LASF16
 621 00b9 06       		.byte	0x6
 622 00ba 54       		.byte	0x54
 623 00bb 9E000000 		.4byte	0x9e
 624 00bf 04       		.uleb128 0x4
 625 00c0 DB010000 		.4byte	.LASF17
 626 00c4 06       		.byte	0x6
 627 00c5 78       		.byte	0x78
 628 00c6 88000000 		.4byte	0x88
 629 00ca 05       		.uleb128 0x5
 630 00cb E3020000 		.4byte	.LASF18
 631 00cf 02       		.byte	0x2
 632 00d0 1101     		.2byte	0x111
 633 00d2 7D000000 		.4byte	0x7d
 634 00d6 05       		.uleb128 0x5
 635 00d7 6E030000 		.4byte	.LASF19
 636 00db 02       		.byte	0x2
 637 00dc 3502     		.2byte	0x235
 638 00de 9E000000 		.4byte	0x9e
 639 00e2 05       		.uleb128 0x5
 640 00e3 86030000 		.4byte	.LASF20
 641 00e7 02       		.byte	0x2
 642 00e8 5D02     		.2byte	0x25d
 643 00ea 9E000000 		.4byte	0x9e
 644 00ee 05       		.uleb128 0x5
 645 00ef 42060000 		.4byte	.LASF21
 646 00f3 02       		.byte	0x2
 647 00f4 6C02     		.2byte	0x26c
 648 00f6 9E000000 		.4byte	0x9e
 649 00fa 06       		.uleb128 0x6
 650 00fb 0C       		.byte	0xc
 651 00fc 02       		.byte	0x2
 652 00fd 7202     		.2byte	0x272
 653 00ff 2B010000 		.4byte	0x12b
 654 0103 07       		.uleb128 0x7
 655 0104 0D030000 		.4byte	.LASF22
 656 0108 02       		.byte	0x2
 657 0109 7302     		.2byte	0x273
 658 010b D6000000 		.4byte	0xd6
 659 010f 00       		.byte	0
 660 0110 07       		.uleb128 0x7
 661 0111 5F000000 		.4byte	.LASF23
 662 0115 02       		.byte	0x2
 663 0116 7402     		.2byte	0x274
 664 0118 D6000000 		.4byte	0xd6
 665 011c 04       		.byte	0x4
 666 011d 07       		.uleb128 0x7
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 48


 667 011e F6010000 		.4byte	.LASF24
 668 0122 02       		.byte	0x2
 669 0123 7502     		.2byte	0x275
 670 0125 D6000000 		.4byte	0xd6
 671 0129 08       		.byte	0x8
 672 012a 00       		.byte	0
 673 012b 05       		.uleb128 0x5
 674 012c 3B030000 		.4byte	.LASF25
 675 0130 02       		.byte	0x2
 676 0131 7A02     		.2byte	0x27a
 677 0133 FA000000 		.4byte	0xfa
 678 0137 06       		.uleb128 0x6
 679 0138 08       		.byte	0x8
 680 0139 02       		.byte	0x2
 681 013a 7D02     		.2byte	0x27d
 682 013c 5B010000 		.4byte	0x15b
 683 0140 07       		.uleb128 0x7
 684 0141 FF010000 		.4byte	.LASF26
 685 0145 02       		.byte	0x2
 686 0146 7E02     		.2byte	0x27e
 687 0148 D6000000 		.4byte	0xd6
 688 014c 00       		.byte	0
 689 014d 07       		.uleb128 0x7
 690 014e AC060000 		.4byte	.LASF27
 691 0152 02       		.byte	0x2
 692 0153 7F02     		.2byte	0x27f
 693 0155 E2000000 		.4byte	0xe2
 694 0159 04       		.byte	0x4
 695 015a 00       		.byte	0
 696 015b 05       		.uleb128 0x5
 697 015c 91020000 		.4byte	.LASF28
 698 0160 02       		.byte	0x2
 699 0161 8002     		.2byte	0x280
 700 0163 37010000 		.4byte	0x137
 701 0167 08       		.uleb128 0x8
 702 0168 01       		.byte	0x1
 703 0169 2C000000 		.4byte	0x2c
 704 016d 02       		.byte	0x2
 705 016e 8A02     		.2byte	0x28a
 706 0170 81010000 		.4byte	0x181
 707 0174 09       		.uleb128 0x9
 708 0175 16060000 		.4byte	.LASF29
 709 0179 00       		.byte	0
 710 017a 09       		.uleb128 0x9
 711 017b F3020000 		.4byte	.LASF30
 712 017f 01       		.byte	0x1
 713 0180 00       		.byte	0
 714 0181 05       		.uleb128 0x5
 715 0182 2B020000 		.4byte	.LASF31
 716 0186 02       		.byte	0x2
 717 0187 8D02     		.2byte	0x28d
 718 0189 67010000 		.4byte	0x167
 719 018d 05       		.uleb128 0x5
 720 018e 88010000 		.4byte	.LASF32
 721 0192 02       		.byte	0x2
 722 0193 9002     		.2byte	0x290
 723 0195 81010000 		.4byte	0x181
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 49


 724 0199 06       		.uleb128 0x6
 725 019a 0C       		.byte	0xc
 726 019b 02       		.byte	0x2
 727 019c 9402     		.2byte	0x294
 728 019e C8010000 		.4byte	0x1c8
 729 01a2 0A       		.uleb128 0xa
 730 01a3 6300     		.ascii	"c\000"
 731 01a5 02       		.byte	0x2
 732 01a6 9602     		.2byte	0x296
 733 01a8 EE000000 		.4byte	0xee
 734 01ac 00       		.byte	0
 735 01ad 07       		.uleb128 0x7
 736 01ae 6A060000 		.4byte	.LASF33
 737 01b2 02       		.byte	0x2
 738 01b3 9802     		.2byte	0x298
 739 01b5 E2000000 		.4byte	0xe2
 740 01b9 04       		.byte	0x4
 741 01ba 07       		.uleb128 0x7
 742 01bb 00000000 		.4byte	.LASF34
 743 01bf 02       		.byte	0x2
 744 01c0 9A02     		.2byte	0x29a
 745 01c2 8D010000 		.4byte	0x18d
 746 01c6 08       		.byte	0x8
 747 01c7 00       		.byte	0
 748 01c8 05       		.uleb128 0x5
 749 01c9 E5040000 		.4byte	.LASF35
 750 01cd 02       		.byte	0x2
 751 01ce 9B02     		.2byte	0x29b
 752 01d0 99010000 		.4byte	0x199
 753 01d4 06       		.uleb128 0x6
 754 01d5 10       		.byte	0x10
 755 01d6 02       		.byte	0x2
 756 01d7 9F02     		.2byte	0x29f
 757 01d9 12020000 		.4byte	0x212
 758 01dd 07       		.uleb128 0x7
 759 01de 34060000 		.4byte	.LASF36
 760 01e2 02       		.byte	0x2
 761 01e3 A002     		.2byte	0x2a0
 762 01e5 B4000000 		.4byte	0xb4
 763 01e9 00       		.byte	0
 764 01ea 07       		.uleb128 0x7
 765 01eb 72060000 		.4byte	.LASF37
 766 01ef 02       		.byte	0x2
 767 01f0 A102     		.2byte	0x2a1
 768 01f2 D6000000 		.4byte	0xd6
 769 01f6 04       		.byte	0x4
 770 01f7 07       		.uleb128 0x7
 771 01f8 DD000000 		.4byte	.LASF38
 772 01fc 02       		.byte	0x2
 773 01fd A202     		.2byte	0x2a2
 774 01ff D6000000 		.4byte	0xd6
 775 0203 08       		.byte	0x8
 776 0204 07       		.uleb128 0x7
 777 0205 9A060000 		.4byte	.LASF39
 778 0209 02       		.byte	0x2
 779 020a A302     		.2byte	0x2a3
 780 020c E2000000 		.4byte	0xe2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 50


 781 0210 0C       		.byte	0xc
 782 0211 00       		.byte	0
 783 0212 05       		.uleb128 0x5
 784 0213 1D030000 		.4byte	.LASF40
 785 0217 02       		.byte	0x2
 786 0218 A402     		.2byte	0x2a4
 787 021a D4010000 		.4byte	0x1d4
 788 021e 08       		.uleb128 0x8
 789 021f 01       		.byte	0x1
 790 0220 2C000000 		.4byte	0x2c
 791 0224 02       		.byte	0x2
 792 0225 5904     		.2byte	0x459
 793 0227 6E020000 		.4byte	0x26e
 794 022b 09       		.uleb128 0x9
 795 022c 05000000 		.4byte	.LASF41
 796 0230 00       		.byte	0
 797 0231 09       		.uleb128 0x9
 798 0232 B0040000 		.4byte	.LASF42
 799 0236 01       		.byte	0x1
 800 0237 09       		.uleb128 0x9
 801 0238 CE010000 		.4byte	.LASF43
 802 023c 02       		.byte	0x2
 803 023d 09       		.uleb128 0x9
 804 023e CB000000 		.4byte	.LASF44
 805 0242 03       		.byte	0x3
 806 0243 09       		.uleb128 0x9
 807 0244 EB050000 		.4byte	.LASF45
 808 0248 04       		.byte	0x4
 809 0249 09       		.uleb128 0x9
 810 024a 02060000 		.4byte	.LASF46
 811 024e 05       		.byte	0x5
 812 024f 09       		.uleb128 0x9
 813 0250 1F060000 		.4byte	.LASF47
 814 0254 06       		.byte	0x6
 815 0255 09       		.uleb128 0x9
 816 0256 86060000 		.4byte	.LASF48
 817 025a 07       		.byte	0x7
 818 025b 09       		.uleb128 0x9
 819 025c D0040000 		.4byte	.LASF49
 820 0260 08       		.byte	0x8
 821 0261 09       		.uleb128 0x9
 822 0262 69050000 		.4byte	.LASF50
 823 0266 09       		.byte	0x9
 824 0267 09       		.uleb128 0x9
 825 0268 A8020000 		.4byte	.LASF51
 826 026c 0A       		.byte	0xa
 827 026d 00       		.byte	0
 828 026e 05       		.uleb128 0x5
 829 026f 79010000 		.4byte	.LASF52
 830 0273 02       		.byte	0x2
 831 0274 6504     		.2byte	0x465
 832 0276 1E020000 		.4byte	0x21e
 833 027a 0B       		.uleb128 0xb
 834 027b 2A000000 		.4byte	.LASF53
 835 027f 01       		.byte	0x1
 836 0280 AB       		.byte	0xab
 837 0281 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 51


 838 0285 1C000000 		.4byte	.LFE34-.LFB34
 839 0289 01       		.uleb128 0x1
 840 028a 9C       		.byte	0x9c
 841 028b 9E020000 		.4byte	0x29e
 842 028f 0C       		.uleb128 0xc
 843 0290 74696400 		.ascii	"tid\000"
 844 0294 01       		.byte	0x1
 845 0295 AB       		.byte	0xab
 846 0296 BF000000 		.4byte	0xbf
 847 029a 02       		.uleb128 0x2
 848 029b 91       		.byte	0x91
 849 029c 74       		.sleb128 -12
 850 029d 00       		.byte	0
 851 029e 0B       		.uleb128 0xb
 852 029f B5020000 		.4byte	.LASF54
 853 02a3 01       		.byte	0x1
 854 02a4 B1       		.byte	0xb1
 855 02a5 00000000 		.4byte	.LFB35
 856 02a9 20000000 		.4byte	.LFE35-.LFB35
 857 02ad 01       		.uleb128 0x1
 858 02ae 9C       		.byte	0x9c
 859 02af C2020000 		.4byte	0x2c2
 860 02b3 0C       		.uleb128 0xc
 861 02b4 74696400 		.ascii	"tid\000"
 862 02b8 01       		.byte	0x1
 863 02b9 B1       		.byte	0xb1
 864 02ba BF000000 		.4byte	0xbf
 865 02be 02       		.uleb128 0x2
 866 02bf 91       		.byte	0x91
 867 02c0 74       		.sleb128 -12
 868 02c1 00       		.byte	0
 869 02c2 0D       		.uleb128 0xd
 870 02c3 7F050000 		.4byte	.LASF55
 871 02c7 02       		.byte	0x2
 872 02c8 D203     		.2byte	0x3d2
 873 02ca 00000000 		.4byte	.LFB39
 874 02ce 12000000 		.4byte	.LFE39-.LFB39
 875 02d2 01       		.uleb128 0x1
 876 02d3 9C       		.byte	0x9c
 877 02d4 E8020000 		.4byte	0x2e8
 878 02d8 0E       		.uleb128 0xe
 879 02d9 746D7000 		.ascii	"tmp\000"
 880 02dd 02       		.byte	0x2
 881 02de D203     		.2byte	0x3d2
 882 02e0 BF000000 		.4byte	0xbf
 883 02e4 02       		.uleb128 0x2
 884 02e5 91       		.byte	0x91
 885 02e6 74       		.sleb128 -12
 886 02e7 00       		.byte	0
 887 02e8 0D       		.uleb128 0xd
 888 02e9 52030000 		.4byte	.LASF56
 889 02ed 02       		.byte	0x2
 890 02ee 8404     		.2byte	0x484
 891 02f0 00000000 		.4byte	.LFB41
 892 02f4 14000000 		.4byte	.LFE41-.LFB41
 893 02f8 01       		.uleb128 0x1
 894 02f9 9C       		.byte	0x9c
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 52


 895 02fa 0E030000 		.4byte	0x30e
 896 02fe 0E       		.uleb128 0xe
 897 02ff 63747800 		.ascii	"ctx\000"
 898 0303 02       		.byte	0x2
 899 0304 8504     		.2byte	0x485
 900 0306 6E020000 		.4byte	0x26e
 901 030a 02       		.uleb128 0x2
 902 030b 91       		.byte	0x91
 903 030c 77       		.sleb128 -9
 904 030d 00       		.byte	0
 905 030e 0F       		.uleb128 0xf
 906 030f 4F040000 		.4byte	.LASF59
 907 0313 03       		.byte	0x3
 908 0314 EE       		.byte	0xee
 909 0315 BF000000 		.4byte	0xbf
 910 0319 00000000 		.4byte	.LFB53
 911 031d 14000000 		.4byte	.LFE53-.LFB53
 912 0321 01       		.uleb128 0x1
 913 0322 9C       		.byte	0x9c
 914 0323 10       		.uleb128 0x10
 915 0324 48000000 		.4byte	.LASF57
 916 0328 03       		.byte	0x3
 917 0329 8D01     		.2byte	0x18d
 918 032b 00000000 		.4byte	.LFB57
 919 032f 0E000000 		.4byte	.LFE57-.LFB57
 920 0333 01       		.uleb128 0x1
 921 0334 9C       		.byte	0x9c
 922 0335 11       		.uleb128 0x11
 923 0336 98040000 		.4byte	.LASF58
 924 033a 03       		.byte	0x3
 925 033b 9A01     		.2byte	0x19a
 926 033d 00000000 		.4byte	.LFB58
 927 0341 0C000000 		.4byte	.LFE58-.LFB58
 928 0345 01       		.uleb128 0x1
 929 0346 9C       		.byte	0x9c
 930 0347 12       		.uleb128 0x12
 931 0348 98030000 		.4byte	.LASF60
 932 034c 03       		.byte	0x3
 933 034d A401     		.2byte	0x1a4
 934 034f B4000000 		.4byte	0xb4
 935 0353 00000000 		.4byte	.LFB59
 936 0357 20000000 		.4byte	.LFE59-.LFB59
 937 035b 01       		.uleb128 0x1
 938 035c 9C       		.byte	0x9c
 939 035d 13       		.uleb128 0x13
 940 035e 6C000000 		.4byte	.LASF61
 941 0362 04       		.byte	0x4
 942 0363 78       		.byte	0x78
 943 0364 00000000 		.4byte	.LFB70
 944 0368 0C000000 		.4byte	.LFE70-.LFB70
 945 036c 01       		.uleb128 0x1
 946 036d 9C       		.byte	0x9c
 947 036e 14       		.uleb128 0x14
 948 036f 6E040000 		.4byte	.LASF62
 949 0373 04       		.byte	0x4
 950 0374 80       		.byte	0x80
 951 0375 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 53


 952 0379 38000000 		.4byte	.LFE71-.LFB71
 953 037d 01       		.uleb128 0x1
 954 037e 9C       		.byte	0x9c
 955 037f 91030000 		.4byte	0x391
 956 0383 15       		.uleb128 0x15
 957 0384 49040000 		.4byte	.LASF63
 958 0388 04       		.byte	0x4
 959 0389 82       		.byte	0x82
 960 038a BF000000 		.4byte	0xbf
 961 038e 01       		.uleb128 0x1
 962 038f 54       		.byte	0x54
 963 0390 00       		.byte	0
 964 0391 16       		.uleb128 0x16
 965 0392 E2010000 		.4byte	.LASF90
 966 0396 04       		.byte	0x4
 967 0397 9F       		.byte	0x9f
 968 0398 00000000 		.4byte	.LFB72
 969 039c 88000000 		.4byte	.LFE72-.LFB72
 970 03a0 01       		.uleb128 0x1
 971 03a1 9C       		.byte	0x9c
 972 03a2 C1030000 		.4byte	0x3c1
 973 03a6 15       		.uleb128 0x15
 974 03a7 40000000 		.4byte	.LASF64
 975 03ab 04       		.byte	0x4
 976 03ac A1       		.byte	0xa1
 977 03ad BF000000 		.4byte	0xbf
 978 03b1 01       		.uleb128 0x1
 979 03b2 54       		.byte	0x54
 980 03b3 15       		.uleb128 0x15
 981 03b4 4E060000 		.4byte	.LASF65
 982 03b8 04       		.byte	0x4
 983 03b9 A1       		.byte	0xa1
 984 03ba BF000000 		.4byte	0xbf
 985 03be 01       		.uleb128 0x1
 986 03bf 55       		.byte	0x55
 987 03c0 00       		.byte	0
 988 03c1 17       		.uleb128 0x17
 989 03c2 A8010000 		.4byte	.LASF91
 990 03c6 04       		.byte	0x4
 991 03c7 D3       		.byte	0xd3
 992 03c8 00000000 		.4byte	.LFB73
 993 03cc 20000000 		.4byte	.LFE73-.LFB73
 994 03d0 01       		.uleb128 0x1
 995 03d1 9C       		.byte	0x9c
 996 03d2 18       		.uleb128 0x18
 997 03d3 4A020000 		.4byte	.LASF66
 998 03d7 07       		.byte	0x7
 999 03d8 44       		.byte	0x44
 1000 03d9 9E000000 		.4byte	0x9e
 1001 03dd 18       		.uleb128 0x18
 1002 03de 5F020000 		.4byte	.LASF67
 1003 03e2 01       		.byte	0x1
 1004 03e3 48       		.byte	0x48
 1005 03e4 BF000000 		.4byte	0xbf
 1006 03e8 19       		.uleb128 0x19
 1007 03e9 FF030000 		.4byte	0x3ff
 1008 03ed F8030000 		.4byte	0x3f8
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 54


 1009 03f1 1A       		.uleb128 0x1a
 1010 03f2 F8030000 		.4byte	0x3f8
 1011 03f6 03       		.byte	0x3
 1012 03f7 00       		.byte	0
 1013 03f8 02       		.uleb128 0x2
 1014 03f9 04       		.byte	0x4
 1015 03fa 07       		.byte	0x7
 1016 03fb 39060000 		.4byte	.LASF68
 1017 03ff 1B       		.uleb128 0x1b
 1018 0400 9E000000 		.4byte	0x9e
 1019 0404 18       		.uleb128 0x18
 1020 0405 BD010000 		.4byte	.LASF69
 1021 0409 02       		.byte	0x2
 1022 040a B2       		.byte	0xb2
 1023 040b 0F040000 		.4byte	0x40f
 1024 040f 1B       		.uleb128 0x1b
 1025 0410 E8030000 		.4byte	0x3e8
 1026 0414 18       		.uleb128 0x18
 1027 0415 56060000 		.4byte	.LASF70
 1028 0419 02       		.byte	0x2
 1029 041a B3       		.byte	0xb3
 1030 041b 1F040000 		.4byte	0x41f
 1031 041f 1B       		.uleb128 0x1b
 1032 0420 E8030000 		.4byte	0x3e8
 1033 0424 19       		.uleb128 0x19
 1034 0425 9E000000 		.4byte	0x9e
 1035 0429 34040000 		.4byte	0x434
 1036 042d 1A       		.uleb128 0x1a
 1037 042e F8030000 		.4byte	0x3f8
 1038 0432 03       		.byte	0x3
 1039 0433 00       		.byte	0
 1040 0434 18       		.uleb128 0x18
 1041 0435 05020000 		.4byte	.LASF71
 1042 0439 02       		.byte	0x2
 1043 043a CA       		.byte	0xca
 1044 043b 24040000 		.4byte	0x424
 1045 043f 19       		.uleb128 0x19
 1046 0440 BF000000 		.4byte	0xbf
 1047 0444 4F040000 		.4byte	0x44f
 1048 0448 1A       		.uleb128 0x1a
 1049 0449 F8030000 		.4byte	0x3f8
 1050 044d 03       		.byte	0x3
 1051 044e 00       		.byte	0
 1052 044f 18       		.uleb128 0x18
 1053 0450 7B060000 		.4byte	.LASF72
 1054 0454 02       		.byte	0x2
 1055 0455 D2       		.byte	0xd2
 1056 0456 3F040000 		.4byte	0x43f
 1057 045a 18       		.uleb128 0x18
 1058 045b 83040000 		.4byte	.LASF73
 1059 045f 02       		.byte	0x2
 1060 0460 DA       		.byte	0xda
 1061 0461 24040000 		.4byte	0x424
 1062 0465 18       		.uleb128 0x18
 1063 0466 DF050000 		.4byte	.LASF74
 1064 046a 02       		.byte	0x2
 1065 046b E2       		.byte	0xe2
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 55


 1066 046c BF000000 		.4byte	0xbf
 1067 0470 18       		.uleb128 0x18
 1068 0471 77030000 		.4byte	.LASF75
 1069 0475 02       		.byte	0x2
 1070 0476 F7       		.byte	0xf7
 1071 0477 9E000000 		.4byte	0x9e
 1072 047b 1C       		.uleb128 0x1c
 1073 047c 14000000 		.4byte	.LASF76
 1074 0480 02       		.byte	0x2
 1075 0481 3F01     		.2byte	0x13f
 1076 0483 CA000000 		.4byte	0xca
 1077 0487 1C       		.uleb128 0x1c
 1078 0488 9D000000 		.4byte	.LASF77
 1079 048c 02       		.byte	0x2
 1080 048d 5C01     		.2byte	0x15c
 1081 048f 24040000 		.4byte	0x424
 1082 0493 19       		.uleb128 0x19
 1083 0494 B4000000 		.4byte	0xb4
 1084 0498 A3040000 		.4byte	0x4a3
 1085 049c 1A       		.uleb128 0x1a
 1086 049d F8030000 		.4byte	0x3f8
 1087 04a1 03       		.byte	0x3
 1088 04a2 00       		.byte	0
 1089 04a3 1C       		.uleb128 0x1c
 1090 04a4 B0000000 		.4byte	.LASF78
 1091 04a8 02       		.byte	0x2
 1092 04a9 6701     		.2byte	0x167
 1093 04ab 93040000 		.4byte	0x493
 1094 04af 19       		.uleb128 0x19
 1095 04b0 BF040000 		.4byte	0x4bf
 1096 04b4 BF040000 		.4byte	0x4bf
 1097 04b8 1A       		.uleb128 0x1a
 1098 04b9 F8030000 		.4byte	0x3f8
 1099 04bd 00       		.byte	0
 1100 04be 00       		.byte	0
 1101 04bf 1B       		.uleb128 0x1b
 1102 04c0 2B010000 		.4byte	0x12b
 1103 04c4 1C       		.uleb128 0x1c
 1104 04c5 C1030000 		.4byte	.LASF79
 1105 04c9 02       		.byte	0x2
 1106 04ca CA02     		.2byte	0x2ca
 1107 04cc D0040000 		.4byte	0x4d0
 1108 04d0 1B       		.uleb128 0x1b
 1109 04d1 AF040000 		.4byte	0x4af
 1110 04d5 19       		.uleb128 0x19
 1111 04d6 E5040000 		.4byte	0x4e5
 1112 04da E5040000 		.4byte	0x4e5
 1113 04de 1A       		.uleb128 0x1a
 1114 04df F8030000 		.4byte	0x3f8
 1115 04e3 00       		.byte	0
 1116 04e4 00       		.byte	0
 1117 04e5 1B       		.uleb128 0x1b
 1118 04e6 C8010000 		.4byte	0x1c8
 1119 04ea 1C       		.uleb128 0x1c
 1120 04eb 12020000 		.4byte	.LASF80
 1121 04ef 02       		.byte	0x2
 1122 04f0 DD02     		.2byte	0x2dd
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 56


 1123 04f2 F6040000 		.4byte	0x4f6
 1124 04f6 1B       		.uleb128 0x1b
 1125 04f7 D5040000 		.4byte	0x4d5
 1126 04fb 19       		.uleb128 0x19
 1127 04fc 5B010000 		.4byte	0x15b
 1128 0500 0B050000 		.4byte	0x50b
 1129 0504 1A       		.uleb128 0x1a
 1130 0505 F8030000 		.4byte	0x3f8
 1131 0509 00       		.byte	0
 1132 050a 00       		.byte	0
 1133 050b 1C       		.uleb128 0x1c
 1134 050c 9F050000 		.4byte	.LASF81
 1135 0510 02       		.byte	0x2
 1136 0511 FB02     		.2byte	0x2fb
 1137 0513 FB040000 		.4byte	0x4fb
 1138 0517 19       		.uleb128 0x19
 1139 0518 12020000 		.4byte	0x212
 1140 051c 27050000 		.4byte	0x527
 1141 0520 1A       		.uleb128 0x1a
 1142 0521 F8030000 		.4byte	0x3f8
 1143 0525 00       		.byte	0
 1144 0526 00       		.byte	0
 1145 0527 1C       		.uleb128 0x1c
 1146 0528 0D040000 		.4byte	.LASF82
 1147 052c 02       		.byte	0x2
 1148 052d 0403     		.2byte	0x304
 1149 052f 17050000 		.4byte	0x517
 1150 0533 18       		.uleb128 0x18
 1151 0534 85000000 		.4byte	.LASF83
 1152 0538 08       		.byte	0x8
 1153 0539 40       		.byte	0x40
 1154 053a 9E000000 		.4byte	0x9e
 1155 053e 18       		.uleb128 0x18
 1156 053f 78020000 		.4byte	.LASF84
 1157 0543 08       		.byte	0x8
 1158 0544 47       		.byte	0x47
 1159 0545 A9000000 		.4byte	0xa9
 1160 0549 18       		.uleb128 0x18
 1161 054a AE050000 		.4byte	.LASF85
 1162 054e 08       		.byte	0x8
 1163 054f 4A       		.byte	0x4a
 1164 0550 9E000000 		.4byte	0x9e
 1165 0554 19       		.uleb128 0x19
 1166 0555 64050000 		.4byte	0x564
 1167 0559 64050000 		.4byte	0x564
 1168 055d 1A       		.uleb128 0x1a
 1169 055e F8030000 		.4byte	0x3f8
 1170 0562 FF       		.byte	0xff
 1171 0563 00       		.byte	0
 1172 0564 1B       		.uleb128 0x1b
 1173 0565 72000000 		.4byte	0x72
 1174 0569 1C       		.uleb128 0x1c
 1175 056a 9F060000 		.4byte	.LASF86
 1176 056e 03       		.byte	0x3
 1177 056f AB01     		.2byte	0x1ab
 1178 0571 75050000 		.4byte	0x575
 1179 0575 1B       		.uleb128 0x1b
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 57


 1180 0576 54050000 		.4byte	0x554
 1181 057a 00       		.byte	0
 1182              		.section	.debug_abbrev,"",%progbits
 1183              	.Ldebug_abbrev0:
 1184 0000 01       		.uleb128 0x1
 1185 0001 11       		.uleb128 0x11
 1186 0002 01       		.byte	0x1
 1187 0003 25       		.uleb128 0x25
 1188 0004 0E       		.uleb128 0xe
 1189 0005 13       		.uleb128 0x13
 1190 0006 0B       		.uleb128 0xb
 1191 0007 03       		.uleb128 0x3
 1192 0008 0E       		.uleb128 0xe
 1193 0009 1B       		.uleb128 0x1b
 1194 000a 0E       		.uleb128 0xe
 1195 000b 55       		.uleb128 0x55
 1196 000c 17       		.uleb128 0x17
 1197 000d 11       		.uleb128 0x11
 1198 000e 01       		.uleb128 0x1
 1199 000f 10       		.uleb128 0x10
 1200 0010 17       		.uleb128 0x17
 1201 0011 00       		.byte	0
 1202 0012 00       		.byte	0
 1203 0013 02       		.uleb128 0x2
 1204 0014 24       		.uleb128 0x24
 1205 0015 00       		.byte	0
 1206 0016 0B       		.uleb128 0xb
 1207 0017 0B       		.uleb128 0xb
 1208 0018 3E       		.uleb128 0x3e
 1209 0019 0B       		.uleb128 0xb
 1210 001a 03       		.uleb128 0x3
 1211 001b 0E       		.uleb128 0xe
 1212 001c 00       		.byte	0
 1213 001d 00       		.byte	0
 1214 001e 03       		.uleb128 0x3
 1215 001f 24       		.uleb128 0x24
 1216 0020 00       		.byte	0
 1217 0021 0B       		.uleb128 0xb
 1218 0022 0B       		.uleb128 0xb
 1219 0023 3E       		.uleb128 0x3e
 1220 0024 0B       		.uleb128 0xb
 1221 0025 03       		.uleb128 0x3
 1222 0026 08       		.uleb128 0x8
 1223 0027 00       		.byte	0
 1224 0028 00       		.byte	0
 1225 0029 04       		.uleb128 0x4
 1226 002a 16       		.uleb128 0x16
 1227 002b 00       		.byte	0
 1228 002c 03       		.uleb128 0x3
 1229 002d 0E       		.uleb128 0xe
 1230 002e 3A       		.uleb128 0x3a
 1231 002f 0B       		.uleb128 0xb
 1232 0030 3B       		.uleb128 0x3b
 1233 0031 0B       		.uleb128 0xb
 1234 0032 49       		.uleb128 0x49
 1235 0033 13       		.uleb128 0x13
 1236 0034 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 58


 1237 0035 00       		.byte	0
 1238 0036 05       		.uleb128 0x5
 1239 0037 16       		.uleb128 0x16
 1240 0038 00       		.byte	0
 1241 0039 03       		.uleb128 0x3
 1242 003a 0E       		.uleb128 0xe
 1243 003b 3A       		.uleb128 0x3a
 1244 003c 0B       		.uleb128 0xb
 1245 003d 3B       		.uleb128 0x3b
 1246 003e 05       		.uleb128 0x5
 1247 003f 49       		.uleb128 0x49
 1248 0040 13       		.uleb128 0x13
 1249 0041 00       		.byte	0
 1250 0042 00       		.byte	0
 1251 0043 06       		.uleb128 0x6
 1252 0044 13       		.uleb128 0x13
 1253 0045 01       		.byte	0x1
 1254 0046 0B       		.uleb128 0xb
 1255 0047 0B       		.uleb128 0xb
 1256 0048 3A       		.uleb128 0x3a
 1257 0049 0B       		.uleb128 0xb
 1258 004a 3B       		.uleb128 0x3b
 1259 004b 05       		.uleb128 0x5
 1260 004c 01       		.uleb128 0x1
 1261 004d 13       		.uleb128 0x13
 1262 004e 00       		.byte	0
 1263 004f 00       		.byte	0
 1264 0050 07       		.uleb128 0x7
 1265 0051 0D       		.uleb128 0xd
 1266 0052 00       		.byte	0
 1267 0053 03       		.uleb128 0x3
 1268 0054 0E       		.uleb128 0xe
 1269 0055 3A       		.uleb128 0x3a
 1270 0056 0B       		.uleb128 0xb
 1271 0057 3B       		.uleb128 0x3b
 1272 0058 05       		.uleb128 0x5
 1273 0059 49       		.uleb128 0x49
 1274 005a 13       		.uleb128 0x13
 1275 005b 38       		.uleb128 0x38
 1276 005c 0B       		.uleb128 0xb
 1277 005d 00       		.byte	0
 1278 005e 00       		.byte	0
 1279 005f 08       		.uleb128 0x8
 1280 0060 04       		.uleb128 0x4
 1281 0061 01       		.byte	0x1
 1282 0062 0B       		.uleb128 0xb
 1283 0063 0B       		.uleb128 0xb
 1284 0064 49       		.uleb128 0x49
 1285 0065 13       		.uleb128 0x13
 1286 0066 3A       		.uleb128 0x3a
 1287 0067 0B       		.uleb128 0xb
 1288 0068 3B       		.uleb128 0x3b
 1289 0069 05       		.uleb128 0x5
 1290 006a 01       		.uleb128 0x1
 1291 006b 13       		.uleb128 0x13
 1292 006c 00       		.byte	0
 1293 006d 00       		.byte	0
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 59


 1294 006e 09       		.uleb128 0x9
 1295 006f 28       		.uleb128 0x28
 1296 0070 00       		.byte	0
 1297 0071 03       		.uleb128 0x3
 1298 0072 0E       		.uleb128 0xe
 1299 0073 1C       		.uleb128 0x1c
 1300 0074 0B       		.uleb128 0xb
 1301 0075 00       		.byte	0
 1302 0076 00       		.byte	0
 1303 0077 0A       		.uleb128 0xa
 1304 0078 0D       		.uleb128 0xd
 1305 0079 00       		.byte	0
 1306 007a 03       		.uleb128 0x3
 1307 007b 08       		.uleb128 0x8
 1308 007c 3A       		.uleb128 0x3a
 1309 007d 0B       		.uleb128 0xb
 1310 007e 3B       		.uleb128 0x3b
 1311 007f 05       		.uleb128 0x5
 1312 0080 49       		.uleb128 0x49
 1313 0081 13       		.uleb128 0x13
 1314 0082 38       		.uleb128 0x38
 1315 0083 0B       		.uleb128 0xb
 1316 0084 00       		.byte	0
 1317 0085 00       		.byte	0
 1318 0086 0B       		.uleb128 0xb
 1319 0087 2E       		.uleb128 0x2e
 1320 0088 01       		.byte	0x1
 1321 0089 03       		.uleb128 0x3
 1322 008a 0E       		.uleb128 0xe
 1323 008b 3A       		.uleb128 0x3a
 1324 008c 0B       		.uleb128 0xb
 1325 008d 3B       		.uleb128 0x3b
 1326 008e 0B       		.uleb128 0xb
 1327 008f 27       		.uleb128 0x27
 1328 0090 19       		.uleb128 0x19
 1329 0091 11       		.uleb128 0x11
 1330 0092 01       		.uleb128 0x1
 1331 0093 12       		.uleb128 0x12
 1332 0094 06       		.uleb128 0x6
 1333 0095 40       		.uleb128 0x40
 1334 0096 18       		.uleb128 0x18
 1335 0097 9742     		.uleb128 0x2117
 1336 0099 19       		.uleb128 0x19
 1337 009a 01       		.uleb128 0x1
 1338 009b 13       		.uleb128 0x13
 1339 009c 00       		.byte	0
 1340 009d 00       		.byte	0
 1341 009e 0C       		.uleb128 0xc
 1342 009f 05       		.uleb128 0x5
 1343 00a0 00       		.byte	0
 1344 00a1 03       		.uleb128 0x3
 1345 00a2 08       		.uleb128 0x8
 1346 00a3 3A       		.uleb128 0x3a
 1347 00a4 0B       		.uleb128 0xb
 1348 00a5 3B       		.uleb128 0x3b
 1349 00a6 0B       		.uleb128 0xb
 1350 00a7 49       		.uleb128 0x49
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 60


 1351 00a8 13       		.uleb128 0x13
 1352 00a9 02       		.uleb128 0x2
 1353 00aa 18       		.uleb128 0x18
 1354 00ab 00       		.byte	0
 1355 00ac 00       		.byte	0
 1356 00ad 0D       		.uleb128 0xd
 1357 00ae 2E       		.uleb128 0x2e
 1358 00af 01       		.byte	0x1
 1359 00b0 03       		.uleb128 0x3
 1360 00b1 0E       		.uleb128 0xe
 1361 00b2 3A       		.uleb128 0x3a
 1362 00b3 0B       		.uleb128 0xb
 1363 00b4 3B       		.uleb128 0x3b
 1364 00b5 05       		.uleb128 0x5
 1365 00b6 27       		.uleb128 0x27
 1366 00b7 19       		.uleb128 0x19
 1367 00b8 11       		.uleb128 0x11
 1368 00b9 01       		.uleb128 0x1
 1369 00ba 12       		.uleb128 0x12
 1370 00bb 06       		.uleb128 0x6
 1371 00bc 40       		.uleb128 0x40
 1372 00bd 18       		.uleb128 0x18
 1373 00be 9742     		.uleb128 0x2117
 1374 00c0 19       		.uleb128 0x19
 1375 00c1 01       		.uleb128 0x1
 1376 00c2 13       		.uleb128 0x13
 1377 00c3 00       		.byte	0
 1378 00c4 00       		.byte	0
 1379 00c5 0E       		.uleb128 0xe
 1380 00c6 05       		.uleb128 0x5
 1381 00c7 00       		.byte	0
 1382 00c8 03       		.uleb128 0x3
 1383 00c9 08       		.uleb128 0x8
 1384 00ca 3A       		.uleb128 0x3a
 1385 00cb 0B       		.uleb128 0xb
 1386 00cc 3B       		.uleb128 0x3b
 1387 00cd 05       		.uleb128 0x5
 1388 00ce 49       		.uleb128 0x49
 1389 00cf 13       		.uleb128 0x13
 1390 00d0 02       		.uleb128 0x2
 1391 00d1 18       		.uleb128 0x18
 1392 00d2 00       		.byte	0
 1393 00d3 00       		.byte	0
 1394 00d4 0F       		.uleb128 0xf
 1395 00d5 2E       		.uleb128 0x2e
 1396 00d6 00       		.byte	0
 1397 00d7 03       		.uleb128 0x3
 1398 00d8 0E       		.uleb128 0xe
 1399 00d9 3A       		.uleb128 0x3a
 1400 00da 0B       		.uleb128 0xb
 1401 00db 3B       		.uleb128 0x3b
 1402 00dc 0B       		.uleb128 0xb
 1403 00dd 27       		.uleb128 0x27
 1404 00de 19       		.uleb128 0x19
 1405 00df 49       		.uleb128 0x49
 1406 00e0 13       		.uleb128 0x13
 1407 00e1 11       		.uleb128 0x11
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 61


 1408 00e2 01       		.uleb128 0x1
 1409 00e3 12       		.uleb128 0x12
 1410 00e4 06       		.uleb128 0x6
 1411 00e5 40       		.uleb128 0x40
 1412 00e6 18       		.uleb128 0x18
 1413 00e7 9742     		.uleb128 0x2117
 1414 00e9 19       		.uleb128 0x19
 1415 00ea 00       		.byte	0
 1416 00eb 00       		.byte	0
 1417 00ec 10       		.uleb128 0x10
 1418 00ed 2E       		.uleb128 0x2e
 1419 00ee 00       		.byte	0
 1420 00ef 03       		.uleb128 0x3
 1421 00f0 0E       		.uleb128 0xe
 1422 00f1 3A       		.uleb128 0x3a
 1423 00f2 0B       		.uleb128 0xb
 1424 00f3 3B       		.uleb128 0x3b
 1425 00f4 05       		.uleb128 0x5
 1426 00f5 27       		.uleb128 0x27
 1427 00f6 19       		.uleb128 0x19
 1428 00f7 11       		.uleb128 0x11
 1429 00f8 01       		.uleb128 0x1
 1430 00f9 12       		.uleb128 0x12
 1431 00fa 06       		.uleb128 0x6
 1432 00fb 40       		.uleb128 0x40
 1433 00fc 18       		.uleb128 0x18
 1434 00fd 9642     		.uleb128 0x2116
 1435 00ff 19       		.uleb128 0x19
 1436 0100 00       		.byte	0
 1437 0101 00       		.byte	0
 1438 0102 11       		.uleb128 0x11
 1439 0103 2E       		.uleb128 0x2e
 1440 0104 00       		.byte	0
 1441 0105 03       		.uleb128 0x3
 1442 0106 0E       		.uleb128 0xe
 1443 0107 3A       		.uleb128 0x3a
 1444 0108 0B       		.uleb128 0xb
 1445 0109 3B       		.uleb128 0x3b
 1446 010a 05       		.uleb128 0x5
 1447 010b 27       		.uleb128 0x27
 1448 010c 19       		.uleb128 0x19
 1449 010d 11       		.uleb128 0x11
 1450 010e 01       		.uleb128 0x1
 1451 010f 12       		.uleb128 0x12
 1452 0110 06       		.uleb128 0x6
 1453 0111 40       		.uleb128 0x40
 1454 0112 18       		.uleb128 0x18
 1455 0113 9742     		.uleb128 0x2117
 1456 0115 19       		.uleb128 0x19
 1457 0116 00       		.byte	0
 1458 0117 00       		.byte	0
 1459 0118 12       		.uleb128 0x12
 1460 0119 2E       		.uleb128 0x2e
 1461 011a 00       		.byte	0
 1462 011b 03       		.uleb128 0x3
 1463 011c 0E       		.uleb128 0xe
 1464 011d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 62


 1465 011e 0B       		.uleb128 0xb
 1466 011f 3B       		.uleb128 0x3b
 1467 0120 05       		.uleb128 0x5
 1468 0121 27       		.uleb128 0x27
 1469 0122 19       		.uleb128 0x19
 1470 0123 49       		.uleb128 0x49
 1471 0124 13       		.uleb128 0x13
 1472 0125 11       		.uleb128 0x11
 1473 0126 01       		.uleb128 0x1
 1474 0127 12       		.uleb128 0x12
 1475 0128 06       		.uleb128 0x6
 1476 0129 40       		.uleb128 0x40
 1477 012a 18       		.uleb128 0x18
 1478 012b 9742     		.uleb128 0x2117
 1479 012d 19       		.uleb128 0x19
 1480 012e 00       		.byte	0
 1481 012f 00       		.byte	0
 1482 0130 13       		.uleb128 0x13
 1483 0131 2E       		.uleb128 0x2e
 1484 0132 00       		.byte	0
 1485 0133 03       		.uleb128 0x3
 1486 0134 0E       		.uleb128 0xe
 1487 0135 3A       		.uleb128 0x3a
 1488 0136 0B       		.uleb128 0xb
 1489 0137 3B       		.uleb128 0x3b
 1490 0138 0B       		.uleb128 0xb
 1491 0139 27       		.uleb128 0x27
 1492 013a 19       		.uleb128 0x19
 1493 013b 11       		.uleb128 0x11
 1494 013c 01       		.uleb128 0x1
 1495 013d 12       		.uleb128 0x12
 1496 013e 06       		.uleb128 0x6
 1497 013f 40       		.uleb128 0x40
 1498 0140 18       		.uleb128 0x18
 1499 0141 9742     		.uleb128 0x2117
 1500 0143 19       		.uleb128 0x19
 1501 0144 00       		.byte	0
 1502 0145 00       		.byte	0
 1503 0146 14       		.uleb128 0x14
 1504 0147 2E       		.uleb128 0x2e
 1505 0148 01       		.byte	0x1
 1506 0149 03       		.uleb128 0x3
 1507 014a 0E       		.uleb128 0xe
 1508 014b 3A       		.uleb128 0x3a
 1509 014c 0B       		.uleb128 0xb
 1510 014d 3B       		.uleb128 0x3b
 1511 014e 0B       		.uleb128 0xb
 1512 014f 27       		.uleb128 0x27
 1513 0150 19       		.uleb128 0x19
 1514 0151 11       		.uleb128 0x11
 1515 0152 01       		.uleb128 0x1
 1516 0153 12       		.uleb128 0x12
 1517 0154 06       		.uleb128 0x6
 1518 0155 40       		.uleb128 0x40
 1519 0156 18       		.uleb128 0x18
 1520 0157 9642     		.uleb128 0x2116
 1521 0159 19       		.uleb128 0x19
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 63


 1522 015a 01       		.uleb128 0x1
 1523 015b 13       		.uleb128 0x13
 1524 015c 00       		.byte	0
 1525 015d 00       		.byte	0
 1526 015e 15       		.uleb128 0x15
 1527 015f 34       		.uleb128 0x34
 1528 0160 00       		.byte	0
 1529 0161 03       		.uleb128 0x3
 1530 0162 0E       		.uleb128 0xe
 1531 0163 3A       		.uleb128 0x3a
 1532 0164 0B       		.uleb128 0xb
 1533 0165 3B       		.uleb128 0x3b
 1534 0166 0B       		.uleb128 0xb
 1535 0167 49       		.uleb128 0x49
 1536 0168 13       		.uleb128 0x13
 1537 0169 02       		.uleb128 0x2
 1538 016a 18       		.uleb128 0x18
 1539 016b 00       		.byte	0
 1540 016c 00       		.byte	0
 1541 016d 16       		.uleb128 0x16
 1542 016e 2E       		.uleb128 0x2e
 1543 016f 01       		.byte	0x1
 1544 0170 3F       		.uleb128 0x3f
 1545 0171 19       		.uleb128 0x19
 1546 0172 03       		.uleb128 0x3
 1547 0173 0E       		.uleb128 0xe
 1548 0174 3A       		.uleb128 0x3a
 1549 0175 0B       		.uleb128 0xb
 1550 0176 3B       		.uleb128 0x3b
 1551 0177 0B       		.uleb128 0xb
 1552 0178 27       		.uleb128 0x27
 1553 0179 19       		.uleb128 0x19
 1554 017a 11       		.uleb128 0x11
 1555 017b 01       		.uleb128 0x1
 1556 017c 12       		.uleb128 0x12
 1557 017d 06       		.uleb128 0x6
 1558 017e 40       		.uleb128 0x40
 1559 017f 18       		.uleb128 0x18
 1560 0180 9642     		.uleb128 0x2116
 1561 0182 19       		.uleb128 0x19
 1562 0183 01       		.uleb128 0x1
 1563 0184 13       		.uleb128 0x13
 1564 0185 00       		.byte	0
 1565 0186 00       		.byte	0
 1566 0187 17       		.uleb128 0x17
 1567 0188 2E       		.uleb128 0x2e
 1568 0189 00       		.byte	0
 1569 018a 3F       		.uleb128 0x3f
 1570 018b 19       		.uleb128 0x19
 1571 018c 03       		.uleb128 0x3
 1572 018d 0E       		.uleb128 0xe
 1573 018e 3A       		.uleb128 0x3a
 1574 018f 0B       		.uleb128 0xb
 1575 0190 3B       		.uleb128 0x3b
 1576 0191 0B       		.uleb128 0xb
 1577 0192 27       		.uleb128 0x27
 1578 0193 19       		.uleb128 0x19
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 64


 1579 0194 11       		.uleb128 0x11
 1580 0195 01       		.uleb128 0x1
 1581 0196 12       		.uleb128 0x12
 1582 0197 06       		.uleb128 0x6
 1583 0198 40       		.uleb128 0x40
 1584 0199 18       		.uleb128 0x18
 1585 019a 9642     		.uleb128 0x2116
 1586 019c 19       		.uleb128 0x19
 1587 019d 00       		.byte	0
 1588 019e 00       		.byte	0
 1589 019f 18       		.uleb128 0x18
 1590 01a0 34       		.uleb128 0x34
 1591 01a1 00       		.byte	0
 1592 01a2 03       		.uleb128 0x3
 1593 01a3 0E       		.uleb128 0xe
 1594 01a4 3A       		.uleb128 0x3a
 1595 01a5 0B       		.uleb128 0xb
 1596 01a6 3B       		.uleb128 0x3b
 1597 01a7 0B       		.uleb128 0xb
 1598 01a8 49       		.uleb128 0x49
 1599 01a9 13       		.uleb128 0x13
 1600 01aa 3F       		.uleb128 0x3f
 1601 01ab 19       		.uleb128 0x19
 1602 01ac 3C       		.uleb128 0x3c
 1603 01ad 19       		.uleb128 0x19
 1604 01ae 00       		.byte	0
 1605 01af 00       		.byte	0
 1606 01b0 19       		.uleb128 0x19
 1607 01b1 01       		.uleb128 0x1
 1608 01b2 01       		.byte	0x1
 1609 01b3 49       		.uleb128 0x49
 1610 01b4 13       		.uleb128 0x13
 1611 01b5 01       		.uleb128 0x1
 1612 01b6 13       		.uleb128 0x13
 1613 01b7 00       		.byte	0
 1614 01b8 00       		.byte	0
 1615 01b9 1A       		.uleb128 0x1a
 1616 01ba 21       		.uleb128 0x21
 1617 01bb 00       		.byte	0
 1618 01bc 49       		.uleb128 0x49
 1619 01bd 13       		.uleb128 0x13
 1620 01be 2F       		.uleb128 0x2f
 1621 01bf 0B       		.uleb128 0xb
 1622 01c0 00       		.byte	0
 1623 01c1 00       		.byte	0
 1624 01c2 1B       		.uleb128 0x1b
 1625 01c3 26       		.uleb128 0x26
 1626 01c4 00       		.byte	0
 1627 01c5 49       		.uleb128 0x49
 1628 01c6 13       		.uleb128 0x13
 1629 01c7 00       		.byte	0
 1630 01c8 00       		.byte	0
 1631 01c9 1C       		.uleb128 0x1c
 1632 01ca 34       		.uleb128 0x34
 1633 01cb 00       		.byte	0
 1634 01cc 03       		.uleb128 0x3
 1635 01cd 0E       		.uleb128 0xe
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 65


 1636 01ce 3A       		.uleb128 0x3a
 1637 01cf 0B       		.uleb128 0xb
 1638 01d0 3B       		.uleb128 0x3b
 1639 01d1 05       		.uleb128 0x5
 1640 01d2 49       		.uleb128 0x49
 1641 01d3 13       		.uleb128 0x13
 1642 01d4 3F       		.uleb128 0x3f
 1643 01d5 19       		.uleb128 0x19
 1644 01d6 3C       		.uleb128 0x3c
 1645 01d7 19       		.uleb128 0x19
 1646 01d8 00       		.byte	0
 1647 01d9 00       		.byte	0
 1648 01da 00       		.byte	0
 1649              		.section	.debug_aranges,"",%progbits
 1650 0000 74000000 		.4byte	0x74
 1651 0004 0200     		.2byte	0x2
 1652 0006 00000000 		.4byte	.Ldebug_info0
 1653 000a 04       		.byte	0x4
 1654 000b 00       		.byte	0
 1655 000c 0000     		.2byte	0
 1656 000e 0000     		.2byte	0
 1657 0010 00000000 		.4byte	.LFB34
 1658 0014 1C000000 		.4byte	.LFE34-.LFB34
 1659 0018 00000000 		.4byte	.LFB35
 1660 001c 20000000 		.4byte	.LFE35-.LFB35
 1661 0020 00000000 		.4byte	.LFB39
 1662 0024 12000000 		.4byte	.LFE39-.LFB39
 1663 0028 00000000 		.4byte	.LFB41
 1664 002c 14000000 		.4byte	.LFE41-.LFB41
 1665 0030 00000000 		.4byte	.LFB53
 1666 0034 14000000 		.4byte	.LFE53-.LFB53
 1667 0038 00000000 		.4byte	.LFB57
 1668 003c 0E000000 		.4byte	.LFE57-.LFB57
 1669 0040 00000000 		.4byte	.LFB58
 1670 0044 0C000000 		.4byte	.LFE58-.LFB58
 1671 0048 00000000 		.4byte	.LFB59
 1672 004c 20000000 		.4byte	.LFE59-.LFB59
 1673 0050 00000000 		.4byte	.LFB70
 1674 0054 0C000000 		.4byte	.LFE70-.LFB70
 1675 0058 00000000 		.4byte	.LFB71
 1676 005c 38000000 		.4byte	.LFE71-.LFB71
 1677 0060 00000000 		.4byte	.LFB72
 1678 0064 88000000 		.4byte	.LFE72-.LFB72
 1679 0068 00000000 		.4byte	.LFB73
 1680 006c 20000000 		.4byte	.LFE73-.LFB73
 1681 0070 00000000 		.4byte	0
 1682 0074 00000000 		.4byte	0
 1683              		.section	.debug_ranges,"",%progbits
 1684              	.Ldebug_ranges0:
 1685 0000 00000000 		.4byte	.LFB34
 1686 0004 1C000000 		.4byte	.LFE34
 1687 0008 00000000 		.4byte	.LFB35
 1688 000c 20000000 		.4byte	.LFE35
 1689 0010 00000000 		.4byte	.LFB39
 1690 0014 12000000 		.4byte	.LFE39
 1691 0018 00000000 		.4byte	.LFB41
 1692 001c 14000000 		.4byte	.LFE41
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 66


 1693 0020 00000000 		.4byte	.LFB53
 1694 0024 14000000 		.4byte	.LFE53
 1695 0028 00000000 		.4byte	.LFB57
 1696 002c 0E000000 		.4byte	.LFE57
 1697 0030 00000000 		.4byte	.LFB58
 1698 0034 0C000000 		.4byte	.LFE58
 1699 0038 00000000 		.4byte	.LFB59
 1700 003c 20000000 		.4byte	.LFE59
 1701 0040 00000000 		.4byte	.LFB70
 1702 0044 0C000000 		.4byte	.LFE70
 1703 0048 00000000 		.4byte	.LFB71
 1704 004c 38000000 		.4byte	.LFE71
 1705 0050 00000000 		.4byte	.LFB72
 1706 0054 88000000 		.4byte	.LFE72
 1707 0058 00000000 		.4byte	.LFB73
 1708 005c 20000000 		.4byte	.LFE73
 1709 0060 00000000 		.4byte	0
 1710 0064 00000000 		.4byte	0
 1711              		.section	.debug_line,"",%progbits
 1712              	.Ldebug_line0:
 1713 0000 3F020000 		.section	.debug_str,"MS",%progbits,1
 1713      02003101 
 1713      00000201 
 1713      FB0E0D00 
 1713      01010101 
 1714              	.LASF34:
 1715 0000 6B696E64 		.ascii	"kind\000"
 1715      00
 1716              	.LASF41:
 1717 0005 4B65726E 		.ascii	"Kernel_Context\000"
 1717      656C5F43 
 1717      6F6E7465 
 1717      787400
 1718              	.LASF76:
 1719 0014 45455F72 		.ascii	"EE_rq_bitmask\000"
 1719      715F6269 
 1719      746D6173 
 1719      6B00
 1720              	.LASF14:
 1721 0022 45455F55 		.ascii	"EE_UREG\000"
 1721      52454700 
 1722              	.LASF53:
 1723 002a 45455F68 		.ascii	"EE_hal_endcycle_ready\000"
 1723      616C5F65 
 1723      6E646379 
 1723      636C655F 
 1723      72656164 
 1724              	.LASF64:
 1725 0040 72716669 		.ascii	"rqfirst\000"
 1725      72737400 
 1726              	.LASF57:
 1727 0048 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1727      6F5F6361 
 1727      6C6C5F50 
 1727      72655461 
 1727      736B486F 
 1728              	.LASF23:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 67


 1729 005f 7469636B 		.ascii	"ticksperbase\000"
 1729      73706572 
 1729      62617365 
 1729      00
 1730              	.LASF61:
 1731 006c 45455F49 		.ascii	"EE_IRQ_release_all_items\000"
 1731      52515F72 
 1731      656C6561 
 1731      73655F61 
 1731      6C6C5F69 
 1732              	.LASF83:
 1733 0085 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1733      6F5F4952 
 1733      515F6469 
 1733      7361626C 
 1733      655F636F 
 1734              	.LASF77:
 1735 009d 45455F74 		.ascii	"EE_th_event_active\000"
 1735      685F6576 
 1735      656E745F 
 1735      61637469 
 1735      766500
 1736              	.LASF78:
 1737 00b0 45455F74 		.ascii	"EE_th_waswaiting\000"
 1737      685F7761 
 1737      73776169 
 1737      74696E67 
 1737      00
 1738              	.LASF2:
 1739 00c1 73686F72 		.ascii	"short int\000"
 1739      7420696E 
 1739      7400
 1740              	.LASF44:
 1741 00cb 4572726F 		.ascii	"ErrorHook_Context\000"
 1741      72486F6F 
 1741      6B5F436F 
 1741      6E746578 
 1741      7400
 1742              	.LASF38:
 1743 00dd 64656C74 		.ascii	"delta\000"
 1743      6100
 1744              	.LASF87:
 1745 00e3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1745      43313120 
 1745      352E342E 
 1745      31203230 
 1745      31363036 
 1746 0116 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1746      20726576 
 1746      6973696F 
 1746      6E203233 
 1746      37373135 
 1747 0149 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1747      66756E63 
 1747      74696F6E 
 1747      2D736563 
 1747      74696F6E 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 68


 1748              	.LASF15:
 1749 0171 45455F46 		.ascii	"EE_FREG\000"
 1749      52454700 
 1750              	.LASF52:
 1751 0179 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1751      59504543 
 1751      4F4E5445 
 1751      585400
 1752              	.LASF32:
 1753 0188 436F756E 		.ascii	"CounterObjectKindType\000"
 1753      7465724F 
 1753      626A6563 
 1753      744B696E 
 1753      64547970 
 1754              	.LASF13:
 1755 019e 45455F55 		.ascii	"EE_UINT32\000"
 1755      494E5433 
 1755      3200
 1756              	.LASF91:
 1757 01a8 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1757      52515F65 
 1757      6E645F70 
 1757      6F73745F 
 1757      73747562 
 1758              	.LASF69:
 1759 01bd 45455F74 		.ascii	"EE_th_ready_prio\000"
 1759      685F7265 
 1759      6164795F 
 1759      7072696F 
 1759      00
 1760              	.LASF43:
 1761 01ce 49535232 		.ascii	"ISR2_Context\000"
 1761      5F436F6E 
 1761      74657874 
 1761      00
 1762              	.LASF17:
 1763 01db 45455F54 		.ascii	"EE_TID\000"
 1763      494400
 1764              	.LASF90:
 1765 01e2 45455F49 		.ascii	"EE_IRQ_end_instance\000"
 1765      52515F65 
 1765      6E645F69 
 1765      6E737461 
 1765      6E636500 
 1766              	.LASF24:
 1767 01f6 6D696E63 		.ascii	"mincycle\000"
 1767      79636C65 
 1767      00
 1768              	.LASF26:
 1769 01ff 76616C75 		.ascii	"value\000"
 1769      6500
 1770              	.LASF71:
 1771 0205 45455F74 		.ascii	"EE_th_status\000"
 1771      685F7374 
 1771      61747573 
 1771      00
 1772              	.LASF80:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 69


 1773 0212 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1773      6F5F636F 
 1773      756E7465 
 1773      725F6F62 
 1773      6A656374 
 1774              	.LASF31:
 1775 022b 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1775      6F5F636F 
 1775      756E7465 
 1775      725F6F62 
 1775      6A656374 
 1776              	.LASF66:
 1777 024a 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1777      52515F6E 
 1777      65737469 
 1777      6E675F6C 
 1777      6576656C 
 1778              	.LASF67:
 1779 025f 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1779      74645F65 
 1779      6E646379 
 1779      636C655F 
 1779      6E657874 
 1780              	.LASF84:
 1781 0278 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1781      6F5F4952 
 1781      515F7375 
 1781      7370656E 
 1781      645F7374 
 1782              	.LASF28:
 1783 0291 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1783      6F5F636F 
 1783      756E7465 
 1783      725F5241 
 1783      4D5F7479 
 1784              	.LASF51:
 1785 02a8 49646C65 		.ascii	"Idle_Context\000"
 1785      5F436F6E 
 1785      74657874 
 1785      00
 1786              	.LASF54:
 1787 02b5 45455F68 		.ascii	"EE_hal_endcycle_stacked\000"
 1787      616C5F65 
 1787      6E646379 
 1787      636C655F 
 1787      73746163 
 1788              	.LASF6:
 1789 02cd 6C6F6E67 		.ascii	"long long int\000"
 1789      206C6F6E 
 1789      6720696E 
 1789      7400
 1790              	.LASF10:
 1791 02db 45455F49 		.ascii	"EE_INT8\000"
 1791      4E543800 
 1792              	.LASF18:
 1793 02e3 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1793      5950455F 
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 70


 1793      52515F4D 
 1793      41534B00 
 1794              	.LASF30:
 1795 02f3 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1795      43484544 
 1795      554C4554 
 1795      41424C45 
 1795      00
 1796              	.LASF4:
 1797 0304 6C6F6E67 		.ascii	"long int\000"
 1797      20696E74 
 1797      00
 1798              	.LASF22:
 1799 030d 6D617861 		.ascii	"maxallowedvalue\000"
 1799      6C6C6F77 
 1799      65647661 
 1799      6C756500 
 1800              	.LASF40:
 1801 031d 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1801      6F5F636F 
 1801      756E7465 
 1801      725F6F62 
 1801      6A656374 
 1802              	.LASF25:
 1803 033b 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1803      6F5F636F 
 1803      756E7465 
 1803      725F524F 
 1803      4D5F7479 
 1804              	.LASF56:
 1805 0352 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1805      735F7365 
 1805      745F6578 
 1805      65637574 
 1805      696F6E5F 
 1806              	.LASF19:
 1807 036e 5469636B 		.ascii	"TickType\000"
 1807      54797065 
 1807      00
 1808              	.LASF75:
 1809 0377 45455F73 		.ascii	"EE_sys_ceiling\000"
 1809      79735F63 
 1809      65696C69 
 1809      6E6700
 1810              	.LASF20:
 1811 0386 436F756E 		.ascii	"CounterObjectType\000"
 1811      7465724F 
 1811      626A6563 
 1811      74547970 
 1811      6500
 1812              	.LASF60:
 1813 0398 45455F6F 		.ascii	"EE_oo_check_disableint_error\000"
 1813      6F5F6368 
 1813      65636B5F 
 1813      64697361 
 1813      626C6569 
 1814              	.LASF9:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 71


 1815 03b5 6C6F6E67 		.ascii	"long double\000"
 1815      20646F75 
 1815      626C6500 
 1816              	.LASF79:
 1817 03c1 45455F63 		.ascii	"EE_counter_ROM\000"
 1817      6F756E74 
 1817      65725F52 
 1817      4F4D00
 1818              	.LASF88:
 1819 03d0 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c\000"
 1819      72617465 
 1819      645F536F 
 1819      75726365 
 1819      5C50536F 
 1820              	.LASF1:
 1821 03ff 756E7369 		.ascii	"unsigned char\000"
 1821      676E6564 
 1821      20636861 
 1821      7200
 1822              	.LASF82:
 1823 040d 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1823      6F5F636F 
 1823      756E7465 
 1823      725F6F62 
 1823      6A656374 
 1824              	.LASF0:
 1825 0426 7369676E 		.ascii	"signed char\000"
 1825      65642063 
 1825      68617200 
 1826              	.LASF7:
 1827 0432 6C6F6E67 		.ascii	"long long unsigned int\000"
 1827      206C6F6E 
 1827      6720756E 
 1827      7369676E 
 1827      65642069 
 1828              	.LASF63:
 1829 0449 746E6578 		.ascii	"tnext\000"
 1829      7400
 1830              	.LASF59:
 1831 044f 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1831      746B5F71 
 1831      75657279 
 1831      66697273 
 1831      7400
 1832              	.LASF8:
 1833 0461 756E7369 		.ascii	"unsigned int\000"
 1833      676E6564 
 1833      20696E74 
 1833      00
 1834              	.LASF62:
 1835 046e 45455F49 		.ascii	"EE_IRQ_run_next_task\000"
 1835      52515F72 
 1835      756E5F6E 
 1835      6578745F 
 1835      7461736B 
 1836              	.LASF73:
 1837 0483 45455F74 		.ascii	"EE_th_rnact\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 72


 1837      685F726E 
 1837      61637400 
 1838              	.LASF12:
 1839 048f 45455F49 		.ascii	"EE_INT32\000"
 1839      4E543332 
 1839      00
 1840              	.LASF58:
 1841 0498 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1841      6F5F6361 
 1841      6C6C5F50 
 1841      6F737454 
 1841      61736B48 
 1842              	.LASF42:
 1843 04b0 5441534B 		.ascii	"TASK_Context\000"
 1843      5F436F6E 
 1843      74657874 
 1843      00
 1844              	.LASF3:
 1845 04bd 73686F72 		.ascii	"short unsigned int\000"
 1845      7420756E 
 1845      7369676E 
 1845      65642069 
 1845      6E7400
 1846              	.LASF49:
 1847 04d0 53687574 		.ascii	"ShutdownHook_Context\000"
 1847      646F776E 
 1847      486F6F6B 
 1847      5F436F6E 
 1847      74657874 
 1848              	.LASF35:
 1849 04e5 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1849      6F5F636F 
 1849      756E7465 
 1849      725F6F62 
 1849      6A656374 
 1850              	.LASF89:
 1851 0503 433A5C55 		.ascii	"C:\\Users\\schmi\\OneDrive\\Dokumente\\PSoC Creator"
 1851      73657273 
 1851      5C736368 
 1851      6D695C4F 
 1851      6E654472 
 1852 0531 5C4A736F 		.ascii	"\\JsonParserLAB3\\holidayProject\\setUpEnv.cydsn\000"
 1852      6E506172 
 1852      7365724C 
 1852      4142335C 
 1852      686F6C69 
 1853              	.LASF11:
 1854 055f 45455F55 		.ascii	"EE_UINT16\000"
 1854      494E5431 
 1854      3600
 1855              	.LASF50:
 1856 0569 416C6172 		.ascii	"AlarmCallback_Context\000"
 1856      6D43616C 
 1856      6C626163 
 1856      6B5F436F 
 1856      6E746578 
 1857              	.LASF55:
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 73


 1858 057f 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1858      5254495F 
 1858      7365745F 
 1858      74685F65 
 1858      715F6469 
 1859              	.LASF81:
 1860 059f 45455F63 		.ascii	"EE_counter_RAM\000"
 1860      6F756E74 
 1860      65725F52 
 1860      414D00
 1861              	.LASF85:
 1862 05ae 45455F41 		.ascii	"EE_ApplicationMode\000"
 1862      70706C69 
 1862      63617469 
 1862      6F6E4D6F 
 1862      646500
 1863              	.LASF5:
 1864 05c1 6C6F6E67 		.ascii	"long unsigned int\000"
 1864      20756E73 
 1864      69676E65 
 1864      6420696E 
 1864      7400
 1865              	.LASF16:
 1866 05d3 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1866      59504542 
 1866      4F4F4C00 
 1867              	.LASF74:
 1868 05df 45455F73 		.ascii	"EE_stkfirst\000"
 1868      746B6669 
 1868      72737400 
 1869              	.LASF45:
 1870 05eb 50726F74 		.ascii	"ProtectionHook_Context\000"
 1870      65637469 
 1870      6F6E486F 
 1870      6F6B5F43 
 1870      6F6E7465 
 1871              	.LASF46:
 1872 0602 50726554 		.ascii	"PreTaskHook_Context\000"
 1872      61736B48 
 1872      6F6F6B5F 
 1872      436F6E74 
 1872      65787400 
 1873              	.LASF29:
 1874 0616 45455F41 		.ascii	"EE_ALARM\000"
 1874      4C41524D 
 1874      00
 1875              	.LASF47:
 1876 061f 506F7374 		.ascii	"PostTaskHook_Context\000"
 1876      5461736B 
 1876      486F6F6B 
 1876      5F436F6E 
 1876      74657874 
 1877              	.LASF36:
 1878 0634 75736564 		.ascii	"used\000"
 1878      00
 1879              	.LASF68:
 1880 0639 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\schmi\AppData\Local\Temp\ccjjWXWr.s 			page 74


 1880      74797065 
 1880      00
 1881              	.LASF21:
 1882 0642 436F756E 		.ascii	"CounterType\000"
 1882      74657254 
 1882      79706500 
 1883              	.LASF65:
 1884 064e 63757272 		.ascii	"current\000"
 1884      656E7400 
 1885              	.LASF70:
 1886 0656 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1886      685F6469 
 1886      73706174 
 1886      63685F70 
 1886      72696F00 
 1887              	.LASF33:
 1888 066a 73706563 		.ascii	"spec_id\000"
 1888      5F696400 
 1889              	.LASF37:
 1890 0672 636E7463 		.ascii	"cntcycle\000"
 1890      79636C65 
 1890      00
 1891              	.LASF72:
 1892 067b 45455F74 		.ascii	"EE_th_next\000"
 1892      685F6E65 
 1892      787400
 1893              	.LASF48:
 1894 0686 53746172 		.ascii	"StartupHook_Context\000"
 1894      74757048 
 1894      6F6F6B5F 
 1894      436F6E74 
 1894      65787400 
 1895              	.LASF39:
 1896 069a 6E657874 		.ascii	"next\000"
 1896      00
 1897              	.LASF86:
 1898 069f 45455F72 		.ascii	"EE_rq_lookup\000"
 1898      715F6C6F 
 1898      6F6B7570 
 1898      00
 1899              	.LASF27:
 1900 06ac 66697273 		.ascii	"first\000"
 1900      7400
 1901              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
